[2024-12-10 09:35:08 INFO restartedMain] [com.green.greengram.GreenGramApplication] Starting GreenGramVer3Application using Java 17.0.12 with PID 5512 (D:\BHB\GreenGramVer3\build\classes\java\main started by Administrator in D:\BHB\GreenGramVer3)
[2024-12-10 09:35:08 INFO restartedMain] [com.green.greengram.GreenGramApplication] No active profile set, falling back to 1 default profile: "default"
[2024-12-10 09:35:08 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-10 09:35:08 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-10 09:35:09 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-10 09:35:09 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-10 09:35:09 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-10 09:35:09 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-10 09:35:09 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-10 09:35:09 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 914 ms
[2024-12-10 09:35:09 INFO restartedMain] [com.green.greengram.common.MyFileUtils] MyFileUtils - 생성자: D:\BHB\download\greengram_ver3
[2024-12-10 09:35:09 INFO restartedMain] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Starting...
[2024-12-10 09:35:09 INFO restartedMain] [com.zaxxer.hikari.pool.HikariPool] HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@585675eb
[2024-12-10 09:35:09 INFO restartedMain] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Start completed.
[2024-12-10 09:35:09 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-10 09:35:09 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-10 09:35:09 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-10 09:35:09 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-10 09:35:10 INFO restartedMain] [com.green.greengram.GreenGramApplication] Started GreenGramVer3Application in 2.207 seconds (process running for 2.664)
[2024-12-10 09:35:10 INFO http-nio-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring DispatcherServlet 'dispatcherServlet'
[2024-12-10 09:35:10 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[2024-12-10 09:35:10 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Completed initialization in 1 ms
[2024-12-10 09:35:10 INFO http-nio-8080-exec-5] [com.green.greengram.feed.FeedController] FeedController > getFeedList > p: FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=6, profileUserId=null)
[2024-12-10 09:35:10 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId, A.contents, A.location
             , A.created_at AS createdAt
             , B.user_id AS writerUserId
             , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
             , B.pic AS writerPic
             , IF(C.feed_id IS NULL, 0, 1) AS isLike
          FROM feed A
         INNER JOIN user B
            ON A.writer_user_id = B.user_id

        LEFT JOIN feed_like C
            ON A.feed_id = C.feed_id
           AND C.user_id = 6
         ORDER BY A.feed_id DESC
         LIMIT 0, 20
 {executed in 6 msec}
[2024-12-10 09:35:10 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|--------|---------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|feed_id |contents |location |created_at          |user_id |writernm |pic                                      |islike |
|--------|---------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|22      |         |         |2024-12-09 16:30:06 |6       |8        |292cc9ec-541d-454e-beda-2233f6bb26b2.gif |0      |
|21      |         |         |2024-12-09 16:29:56 |6       |8        |292cc9ec-541d-454e-beda-2233f6bb26b2.gif |0      |
|20      |         |         |2024-12-09 11:55:13 |6       |8        |292cc9ec-541d-454e-beda-2233f6bb26b2.gif |0      |
|19      |         |         |2024-12-09 11:54:50 |6       |8        |292cc9ec-541d-454e-beda-2233f6bb26b2.gif |1      |
|18      |         |         |2024-12-06 12:45:10 |6       |8        |292cc9ec-541d-454e-beda-2233f6bb26b2.gif |1      |
|17      |ㅇ        |ㅇ        |2024-12-05 17:07:14 |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |0      |
|15      |ㅁㄴㅇ      |ㅁㄴㅇ      |2024-12-03 15:48:41 |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |0      |
|14      |ㅇ        |ㅇ        |2024-12-03 11:49:38 |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |0      |
|13      |d        |d        |2024-12-03 11:15:02 |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |0      |
|12      |ㅁㄴㅇ      |ㅁㄴㅇ      |2024-11-29 16:17:53 |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |0      |
|11      |         |         |2024-11-29 16:12:11 |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |0      |
|10      |asd      |asd      |2024-11-29 16:05:52 |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |0      |
|9       |sda      |asd      |2024-11-29 16:00:32 |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |0      |
|5       |123      |중앙로      |2024-11-29 10:36:12 |2       |홍길동      |6d88f58a-0c38-4010-b703-3ccb187071d8.jpg |0      |
|4       |123      |그린컴      |2024-11-28 17:24:40 |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |0      |
|--------|---------|---------|--------------------|--------|---------|-----------------------------------------|-------|

[2024-12-10 09:35:10 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
          FROM feed_pic
         WHERE feed_id = 22
 {executed in 0 msec}
[2024-12-10 09:35:11 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|71b713ca-7094-4c0a-939c-29d119340ee6.gif |
|-----------------------------------------|

[2024-12-10 09:35:11 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , B.user_id AS writerUserId
             , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
             , B.pic AS writerPic
          FROM feed_comment A
         INNER JOIN user B
            ON A.user_id = B.user_id
         WHERE A.feed_id = 22
         ORDER BY A.feed_comment_id DESC
         LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 09:35:11 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 09:35:11 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
          FROM feed_pic
         WHERE feed_id = 21
 {executed in 0 msec}
[2024-12-10 09:35:11 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|6d6e94d5-499f-454f-aa08-d40373161e86.gif |
|-----------------------------------------|

[2024-12-10 09:35:11 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , B.user_id AS writerUserId
             , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
             , B.pic AS writerPic
          FROM feed_comment A
         INNER JOIN user B
            ON A.user_id = B.user_id
         WHERE A.feed_id = 21
         ORDER BY A.feed_comment_id DESC
         LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 09:35:11 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 09:35:11 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
          FROM feed_pic
         WHERE feed_id = 20
 {executed in 0 msec}
[2024-12-10 09:35:11 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|45745035-2926-4ae4-a464-3e1c11e9b247.jpg |
|-----------------------------------------|

[2024-12-10 09:35:11 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , B.user_id AS writerUserId
             , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
             , B.pic AS writerPic
          FROM feed_comment A
         INNER JOIN user B
            ON A.user_id = B.user_id
         WHERE A.feed_id = 20
         ORDER BY A.feed_comment_id DESC
         LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 09:35:11 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 09:35:11 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
          FROM feed_pic
         WHERE feed_id = 19
 {executed in 0 msec}
[2024-12-10 09:35:11 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|83e83807-46f8-4040-8f70-667accd3c76f.gif |
|-----------------------------------------|

[2024-12-10 09:35:11 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , B.user_id AS writerUserId
             , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
             , B.pic AS writerPic
          FROM feed_comment A
         INNER JOIN user B
            ON A.user_id = B.user_id
         WHERE A.feed_id = 19
         ORDER BY A.feed_comment_id DESC
         LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 09:35:11 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 09:35:11 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
          FROM feed_pic
         WHERE feed_id = 18
 {executed in 0 msec}
[2024-12-10 09:35:11 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a773e1e8-508b-4ce5-8c6f-e3af220615dc.gif |
|-----------------------------------------|

[2024-12-10 09:35:11 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , B.user_id AS writerUserId
             , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
             , B.pic AS writerPic
          FROM feed_comment A
         INNER JOIN user B
            ON A.user_id = B.user_id
         WHERE A.feed_id = 18
         ORDER BY A.feed_comment_id DESC
         LIMIT 0, 4
 {executed in 1 msec}
[2024-12-10 09:35:11 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 09:35:11 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
          FROM feed_pic
         WHERE feed_id = 17
 {executed in 0 msec}
[2024-12-10 09:35:11 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|e739d20c-ebef-4304-9ff8-926290978d0d.gif |
|-----------------------------------------|

[2024-12-10 09:35:11 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , B.user_id AS writerUserId
             , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
             , B.pic AS writerPic
          FROM feed_comment A
         INNER JOIN user B
            ON A.user_id = B.user_id
         WHERE A.feed_id = 17
         ORDER BY A.feed_comment_id DESC
         LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 09:35:11 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 09:35:11 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
          FROM feed_pic
         WHERE feed_id = 15
 {executed in 0 msec}
[2024-12-10 09:35:11 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|12526740-807d-47f8-a45b-1c05ac9f99ce.gif |
|-----------------------------------------|

[2024-12-10 09:35:11 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , B.user_id AS writerUserId
             , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
             , B.pic AS writerPic
          FROM feed_comment A
         INNER JOIN user B
            ON A.user_id = B.user_id
         WHERE A.feed_id = 15
         ORDER BY A.feed_comment_id DESC
         LIMIT 0, 4
 {executed in 1 msec}
[2024-12-10 09:35:11 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 09:35:11 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
          FROM feed_pic
         WHERE feed_id = 14
 {executed in 0 msec}
[2024-12-10 09:35:11 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|d3ab1225-6450-4fc4-9f31-eb10a531825a.gif |
|-----------------------------------------|

[2024-12-10 09:35:11 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , B.user_id AS writerUserId
             , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
             , B.pic AS writerPic
          FROM feed_comment A
         INNER JOIN user B
            ON A.user_id = B.user_id
         WHERE A.feed_id = 14
         ORDER BY A.feed_comment_id DESC
         LIMIT 0, 4
 {executed in 1 msec}
[2024-12-10 09:35:11 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|72              |4       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|71              |3       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|70              |2       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|69              |1       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-10 09:35:11 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
          FROM feed_pic
         WHERE feed_id = 13
 {executed in 0 msec}
[2024-12-10 09:35:11 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|7af273d9-3528-498f-b249-e48a4bc99755.jpg |
|-----------------------------------------|

[2024-12-10 09:35:11 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , B.user_id AS writerUserId
             , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
             , B.pic AS writerPic
          FROM feed_comment A
         INNER JOIN user B
            ON A.user_id = B.user_id
         WHERE A.feed_id = 13
         ORDER BY A.feed_comment_id DESC
         LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 09:35:11 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|56              |29      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|55              |28      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|54              |27      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|53              |26      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-10 09:35:11 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
          FROM feed_pic
         WHERE feed_id = 12
 {executed in 1 msec}
[2024-12-10 09:35:11 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|---------|
|pic      |
|---------|
|aaaa.gif |
|---------|

[2024-12-10 09:35:11 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , B.user_id AS writerUserId
             , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
             , B.pic AS writerPic
          FROM feed_comment A
         INNER JOIN user B
            ON A.user_id = B.user_id
         WHERE A.feed_id = 12
         ORDER BY A.feed_comment_id DESC
         LIMIT 0, 4
 {executed in 1 msec}
[2024-12-10 09:35:11 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|23              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|22              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|21              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|20              |ㄴㅇㅁ     |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-10 09:35:11 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
          FROM feed_pic
         WHERE feed_id = 11
 {executed in 0 msec}
[2024-12-10 09:35:11 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|f3f416ca-1a7e-4483-b1db-b2164d76d4f4.png |
|-----------------------------------------|

[2024-12-10 09:35:11 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , B.user_id AS writerUserId
             , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
             , B.pic AS writerPic
          FROM feed_comment A
         INNER JOIN user B
            ON A.user_id = B.user_id
         WHERE A.feed_id = 11
         ORDER BY A.feed_comment_id DESC
         LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 09:35:11 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 09:35:11 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
          FROM feed_pic
         WHERE feed_id = 10
 {executed in 1 msec}
[2024-12-10 09:35:11 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|53da69e7-7ae4-4e7b-b95b-a4c4ca01bdc8.jpg |
|-----------------------------------------|

[2024-12-10 09:35:11 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , B.user_id AS writerUserId
             , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
             , B.pic AS writerPic
          FROM feed_comment A
         INNER JOIN user B
            ON A.user_id = B.user_id
         WHERE A.feed_id = 10
         ORDER BY A.feed_comment_id DESC
         LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 09:35:11 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|29              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|28              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|27              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|26              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-10 09:35:11 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
          FROM feed_pic
         WHERE feed_id = 9
 {executed in 1 msec}
[2024-12-10 09:35:11 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|7875594b-3649-4059-a29a-5c09feeab0ad.jpg |
|-----------------------------------------|

[2024-12-10 09:35:11 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , B.user_id AS writerUserId
             , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
             , B.pic AS writerPic
          FROM feed_comment A
         INNER JOIN user B
            ON A.user_id = B.user_id
         WHERE A.feed_id = 9
         ORDER BY A.feed_comment_id DESC
         LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 09:35:11 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 09:35:11 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
          FROM feed_pic
         WHERE feed_id = 5
 {executed in 0 msec}
[2024-12-10 09:35:11 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|675d9f82-0c18-4f6e-91a3-9858129aeb7e.jpg |
|c95cc439-e1e7-40f4-81fa-013b069631ca.jpg |
|f490d2ad-c64d-4006-a74a-8235888e3e87.jpg |
|-----------------------------------------|

[2024-12-10 09:35:11 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , B.user_id AS writerUserId
             , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
             , B.pic AS writerPic
          FROM feed_comment A
         INNER JOIN user B
            ON A.user_id = B.user_id
         WHERE A.feed_id = 5
         ORDER BY A.feed_comment_id DESC
         LIMIT 0, 4
 {executed in 1 msec}
[2024-12-10 09:35:11 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 09:35:11 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
          FROM feed_pic
         WHERE feed_id = 4
 {executed in 0 msec}
[2024-12-10 09:35:11 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-10 09:35:11 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , B.user_id AS writerUserId
             , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
             , B.pic AS writerPic
          FROM feed_comment A
         INNER JOIN user B
            ON A.user_id = B.user_id
         WHERE A.feed_id = 4
         ORDER BY A.feed_comment_id DESC
         LIMIT 0, 4
 {executed in 1 msec}
[2024-12-10 09:35:11 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 09:35:14 INFO http-nio-8080-exec-9] [com.green.greengram.feed.FeedController] FeedController > getFeedList > p: FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=6, profileUserId=6)
[2024-12-10 09:35:14 INFO http-nio-8080-exec-6] [com.green.greengram.user.UserController] UserController > getUserInfo > p : UserInfoGetReq(signedUserId=6, profileUserId=6)
[2024-12-10 09:35:14 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId, A.contents, A.location
             , A.created_at AS createdAt
             , B.user_id AS writerUserId
             , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
             , B.pic AS writerPic
             , IF(C.feed_id IS NULL, 0, 1) AS isLike
          FROM feed A
         INNER JOIN user B
            ON A.writer_user_id = B.user_id

            AND B.user_id = 6

        LEFT JOIN feed_like C
            ON A.feed_id = C.feed_id
           AND C.user_id = 6
         ORDER BY A.feed_id DESC
         LIMIT 0, 20
 {executed in 1 msec}
[2024-12-10 09:35:14 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|---------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|feed_id |contents |location |created_at          |user_id |writernm |pic                                      |islike |
|--------|---------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|22      |         |         |2024-12-09 16:30:06 |6       |8        |292cc9ec-541d-454e-beda-2233f6bb26b2.gif |0      |
|21      |         |         |2024-12-09 16:29:56 |6       |8        |292cc9ec-541d-454e-beda-2233f6bb26b2.gif |0      |
|20      |         |         |2024-12-09 11:55:13 |6       |8        |292cc9ec-541d-454e-beda-2233f6bb26b2.gif |0      |
|19      |         |         |2024-12-09 11:54:50 |6       |8        |292cc9ec-541d-454e-beda-2233f6bb26b2.gif |1      |
|18      |         |         |2024-12-06 12:45:10 |6       |8        |292cc9ec-541d-454e-beda-2233f6bb26b2.gif |1      |
|--------|---------|---------|--------------------|--------|---------|-----------------------------------------|-------|

[2024-12-10 09:35:14 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT A.user_id AS userId, A.pic, A.created_at AS createdAt
        , IF(A.nick_name IS NULL, A.uid, A.nick_name) AS nickName
        , COUNT(DISTINCT F1.from_user_id, F1.to_user_id) AS `follower`
        , COUNT(DISTINCT F2.from_user_id, F2.to_user_id) AS `following`
        , COUNT(DISTINCT F3.feed_id) AS feedCount
        , COUNT(DISTINCT F4.feed_id, F4.user_id) AS myFeedLikeCount
        , MAX(IF(F1.from_user_id = 6, 1, 0))
        + MAX(IF(F2.to_user_id = 6, 2, 0)) AS followState
        FROM user A
        LEFT JOIN user_follow F1
        ON A.user_id = F1.to_user_id
        LEFT JOIN user_follow F2
        ON A.user_id = F2.from_user_id
        LEFT JOIN feed F3
        ON A.user_id = F3.writer_user_id
        LEFT JOIN feed_like F4
        ON F3.feed_id = F4.feed_id
        WHERE A.user_id = 6;
 {executed in 3 msec}
[2024-12-10 09:35:14 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
          FROM feed_pic
         WHERE feed_id = 22
 {executed in 1 msec}
[2024-12-10 09:35:14 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|71b713ca-7094-4c0a-939c-29d119340ee6.gif |
|-----------------------------------------|

[2024-12-10 09:35:14 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|--------|-----------------------------------------|--------------------|---------|---------|----------|----------|----------------|------------|
|user_id |pic                                      |created_at          |nickname |follower |following |feedcount |myfeedlikecount |followstate |
|--------|-----------------------------------------|--------------------|---------|---------|----------|----------|----------------|------------|
|6       |292cc9ec-541d-454e-beda-2233f6bb26b2.gif |2024-12-06 12:44:59 |8        |1        |1         |5         |4               |0           |
|--------|-----------------------------------------|--------------------|---------|---------|----------|----------|----------------|------------|

[2024-12-10 09:35:14 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , B.user_id AS writerUserId
             , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
             , B.pic AS writerPic
          FROM feed_comment A
         INNER JOIN user B
            ON A.user_id = B.user_id
         WHERE A.feed_id = 22
         ORDER BY A.feed_comment_id DESC
         LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 09:35:14 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 09:35:14 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
          FROM feed_pic
         WHERE feed_id = 21
 {executed in 0 msec}
[2024-12-10 09:35:14 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|6d6e94d5-499f-454f-aa08-d40373161e86.gif |
|-----------------------------------------|

[2024-12-10 09:35:14 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , B.user_id AS writerUserId
             , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
             , B.pic AS writerPic
          FROM feed_comment A
         INNER JOIN user B
            ON A.user_id = B.user_id
         WHERE A.feed_id = 21
         ORDER BY A.feed_comment_id DESC
         LIMIT 0, 4
 {executed in 1 msec}
[2024-12-10 09:35:14 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 09:35:14 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
          FROM feed_pic
         WHERE feed_id = 20
 {executed in 1 msec}
[2024-12-10 09:35:14 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|45745035-2926-4ae4-a464-3e1c11e9b247.jpg |
|-----------------------------------------|

[2024-12-10 09:35:14 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , B.user_id AS writerUserId
             , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
             , B.pic AS writerPic
          FROM feed_comment A
         INNER JOIN user B
            ON A.user_id = B.user_id
         WHERE A.feed_id = 20
         ORDER BY A.feed_comment_id DESC
         LIMIT 0, 4
 {executed in 1 msec}
[2024-12-10 09:35:14 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 09:35:14 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
          FROM feed_pic
         WHERE feed_id = 19
 {executed in 0 msec}
[2024-12-10 09:35:14 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|83e83807-46f8-4040-8f70-667accd3c76f.gif |
|-----------------------------------------|

[2024-12-10 09:35:14 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , B.user_id AS writerUserId
             , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
             , B.pic AS writerPic
          FROM feed_comment A
         INNER JOIN user B
            ON A.user_id = B.user_id
         WHERE A.feed_id = 19
         ORDER BY A.feed_comment_id DESC
         LIMIT 0, 4
 {executed in 1 msec}
[2024-12-10 09:35:14 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 09:35:14 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
          FROM feed_pic
         WHERE feed_id = 18
 {executed in 1 msec}
[2024-12-10 09:35:14 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a773e1e8-508b-4ce5-8c6f-e3af220615dc.gif |
|-----------------------------------------|

[2024-12-10 09:35:14 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , B.user_id AS writerUserId
             , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
             , B.pic AS writerPic
          FROM feed_comment A
         INNER JOIN user B
            ON A.user_id = B.user_id
         WHERE A.feed_id = 18
         ORDER BY A.feed_comment_id DESC
         LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 09:35:14 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 09:35:18 INFO http-nio-8080-exec-8] [com.green.greengram.feed.FeedController] FeedController > deleteFeed > p: com.green.greengram.feed.model.FeedDeleteReq@79cf6626
[2024-12-10 09:35:18 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. DELETE B, C, D
        FROM feed A
        LEFT JOIN feed_like B
        ON A.feed_id = B.feed_id
        LEFT JOIN feed_comment C
        ON A.feed_id = C.feed_id
        LEFT JOIN feed_pic D
        ON A.feed_id = D.feed_id
        WHERE A.feed_id = 20
        AND A.writer_user_id = 6
 {executed in 1 msec}
[2024-12-10 09:35:18 INFO http-nio-8080-exec-8] [com.green.greengram.feed.FeedService] affectedRows: 1
[2024-12-10 09:35:18 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. DELETE FROM feed
        WHERE feed_id = 20
        AND writer_user_id = 6
 {executed in 1 msec}
[2024-12-10 09:35:39 INFO http-nio-8080-exec-3] [com.green.greengram.feed.FeedController] FeedController > deleteFeed > p: com.green.greengram.feed.model.FeedDeleteReq@4e7bffd2
[2024-12-10 09:35:39 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. DELETE B, C, D
        FROM feed A
        LEFT JOIN feed_like B
        ON A.feed_id = B.feed_id
        LEFT JOIN feed_comment C
        ON A.feed_id = C.feed_id
        LEFT JOIN feed_pic D
        ON A.feed_id = D.feed_id
        WHERE A.feed_id = 20
        AND A.writer_user_id = 6
 {executed in 0 msec}
[2024-12-10 09:35:39 INFO http-nio-8080-exec-3] [com.green.greengram.feed.FeedService] affectedRows: 0
[2024-12-10 09:35:39 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. DELETE FROM feed
        WHERE feed_id = 20
        AND writer_user_id = 6
 {executed in 0 msec}
[2024-12-10 09:35:40 INFO http-nio-8080-exec-7] [com.green.greengram.feed.FeedController] FeedController > deleteFeed > p: com.green.greengram.feed.model.FeedDeleteReq@c121294
[2024-12-10 09:35:40 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. DELETE B, C, D
        FROM feed A
        LEFT JOIN feed_like B
        ON A.feed_id = B.feed_id
        LEFT JOIN feed_comment C
        ON A.feed_id = C.feed_id
        LEFT JOIN feed_pic D
        ON A.feed_id = D.feed_id
        WHERE A.feed_id = 20
        AND A.writer_user_id = 6
 {executed in 1 msec}
[2024-12-10 09:35:40 INFO http-nio-8080-exec-7] [com.green.greengram.feed.FeedService] affectedRows: 0
[2024-12-10 09:35:40 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. DELETE FROM feed
        WHERE feed_id = 20
        AND writer_user_id = 6
 {executed in 0 msec}
[2024-12-10 09:35:41 INFO http-nio-8080-exec-1] [com.green.greengram.feed.FeedController] FeedController > deleteFeed > p: com.green.greengram.feed.model.FeedDeleteReq@5a49e932
[2024-12-10 09:35:41 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. DELETE B, C, D
        FROM feed A
        LEFT JOIN feed_like B
        ON A.feed_id = B.feed_id
        LEFT JOIN feed_comment C
        ON A.feed_id = C.feed_id
        LEFT JOIN feed_pic D
        ON A.feed_id = D.feed_id
        WHERE A.feed_id = 20
        AND A.writer_user_id = 6
 {executed in 0 msec}
[2024-12-10 09:35:41 INFO http-nio-8080-exec-1] [com.green.greengram.feed.FeedService] affectedRows: 0
[2024-12-10 09:35:41 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. DELETE FROM feed
        WHERE feed_id = 20
        AND writer_user_id = 6
 {executed in 1 msec}
[2024-12-10 09:35:44 INFO http-nio-8080-exec-10] [com.green.greengram.feed.FeedController] FeedController > getFeedList > p: FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=6, profileUserId=null)
[2024-12-10 09:35:44 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId, A.contents, A.location
             , A.created_at AS createdAt
             , B.user_id AS writerUserId
             , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
             , B.pic AS writerPic
             , IF(C.feed_id IS NULL, 0, 1) AS isLike
          FROM feed A
         INNER JOIN user B
            ON A.writer_user_id = B.user_id

        LEFT JOIN feed_like C
            ON A.feed_id = C.feed_id
           AND C.user_id = 6
         ORDER BY A.feed_id DESC
         LIMIT 0, 20
 {executed in 1 msec}
[2024-12-10 09:35:44 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|--------|---------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|feed_id |contents |location |created_at          |user_id |writernm |pic                                      |islike |
|--------|---------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|22      |         |         |2024-12-09 16:30:06 |6       |8        |292cc9ec-541d-454e-beda-2233f6bb26b2.gif |0      |
|21      |         |         |2024-12-09 16:29:56 |6       |8        |292cc9ec-541d-454e-beda-2233f6bb26b2.gif |0      |
|19      |         |         |2024-12-09 11:54:50 |6       |8        |292cc9ec-541d-454e-beda-2233f6bb26b2.gif |1      |
|18      |         |         |2024-12-06 12:45:10 |6       |8        |292cc9ec-541d-454e-beda-2233f6bb26b2.gif |1      |
|17      |ㅇ        |ㅇ        |2024-12-05 17:07:14 |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |0      |
|15      |ㅁㄴㅇ      |ㅁㄴㅇ      |2024-12-03 15:48:41 |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |0      |
|14      |ㅇ        |ㅇ        |2024-12-03 11:49:38 |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |0      |
|13      |d        |d        |2024-12-03 11:15:02 |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |0      |
|12      |ㅁㄴㅇ      |ㅁㄴㅇ      |2024-11-29 16:17:53 |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |0      |
|11      |         |         |2024-11-29 16:12:11 |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |0      |
|10      |asd      |asd      |2024-11-29 16:05:52 |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |0      |
|9       |sda      |asd      |2024-11-29 16:00:32 |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |0      |
|5       |123      |중앙로      |2024-11-29 10:36:12 |2       |홍길동      |6d88f58a-0c38-4010-b703-3ccb187071d8.jpg |0      |
|4       |123      |그린컴      |2024-11-28 17:24:40 |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |0      |
|--------|---------|---------|--------------------|--------|---------|-----------------------------------------|-------|

[2024-12-10 09:35:44 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
          FROM feed_pic
         WHERE feed_id = 22
 {executed in 1 msec}
[2024-12-10 09:35:44 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|71b713ca-7094-4c0a-939c-29d119340ee6.gif |
|-----------------------------------------|

[2024-12-10 09:35:44 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , B.user_id AS writerUserId
             , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
             , B.pic AS writerPic
          FROM feed_comment A
         INNER JOIN user B
            ON A.user_id = B.user_id
         WHERE A.feed_id = 22
         ORDER BY A.feed_comment_id DESC
         LIMIT 0, 4
 {executed in 1 msec}
[2024-12-10 09:35:44 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 09:35:44 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
          FROM feed_pic
         WHERE feed_id = 21
 {executed in 0 msec}
[2024-12-10 09:35:44 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|6d6e94d5-499f-454f-aa08-d40373161e86.gif |
|-----------------------------------------|

[2024-12-10 09:35:44 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , B.user_id AS writerUserId
             , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
             , B.pic AS writerPic
          FROM feed_comment A
         INNER JOIN user B
            ON A.user_id = B.user_id
         WHERE A.feed_id = 21
         ORDER BY A.feed_comment_id DESC
         LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 09:35:44 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 09:35:44 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
          FROM feed_pic
         WHERE feed_id = 19
 {executed in 0 msec}
[2024-12-10 09:35:44 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|83e83807-46f8-4040-8f70-667accd3c76f.gif |
|-----------------------------------------|

[2024-12-10 09:35:44 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , B.user_id AS writerUserId
             , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
             , B.pic AS writerPic
          FROM feed_comment A
         INNER JOIN user B
            ON A.user_id = B.user_id
         WHERE A.feed_id = 19
         ORDER BY A.feed_comment_id DESC
         LIMIT 0, 4
 {executed in 1 msec}
[2024-12-10 09:35:44 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 09:35:44 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
          FROM feed_pic
         WHERE feed_id = 18
 {executed in 0 msec}
[2024-12-10 09:35:44 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a773e1e8-508b-4ce5-8c6f-e3af220615dc.gif |
|-----------------------------------------|

[2024-12-10 09:35:44 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , B.user_id AS writerUserId
             , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
             , B.pic AS writerPic
          FROM feed_comment A
         INNER JOIN user B
            ON A.user_id = B.user_id
         WHERE A.feed_id = 18
         ORDER BY A.feed_comment_id DESC
         LIMIT 0, 4
 {executed in 1 msec}
[2024-12-10 09:35:44 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 09:35:44 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
          FROM feed_pic
         WHERE feed_id = 17
 {executed in 0 msec}
[2024-12-10 09:35:44 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|e739d20c-ebef-4304-9ff8-926290978d0d.gif |
|-----------------------------------------|

[2024-12-10 09:35:44 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , B.user_id AS writerUserId
             , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
             , B.pic AS writerPic
          FROM feed_comment A
         INNER JOIN user B
            ON A.user_id = B.user_id
         WHERE A.feed_id = 17
         ORDER BY A.feed_comment_id DESC
         LIMIT 0, 4
 {executed in 1 msec}
[2024-12-10 09:35:44 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 09:35:44 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
          FROM feed_pic
         WHERE feed_id = 15
 {executed in 0 msec}
[2024-12-10 09:35:44 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|12526740-807d-47f8-a45b-1c05ac9f99ce.gif |
|-----------------------------------------|

[2024-12-10 09:35:44 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , B.user_id AS writerUserId
             , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
             , B.pic AS writerPic
          FROM feed_comment A
         INNER JOIN user B
            ON A.user_id = B.user_id
         WHERE A.feed_id = 15
         ORDER BY A.feed_comment_id DESC
         LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 09:35:44 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 09:35:44 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
          FROM feed_pic
         WHERE feed_id = 14
 {executed in 0 msec}
[2024-12-10 09:35:44 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|d3ab1225-6450-4fc4-9f31-eb10a531825a.gif |
|-----------------------------------------|

[2024-12-10 09:35:44 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , B.user_id AS writerUserId
             , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
             , B.pic AS writerPic
          FROM feed_comment A
         INNER JOIN user B
            ON A.user_id = B.user_id
         WHERE A.feed_id = 14
         ORDER BY A.feed_comment_id DESC
         LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 09:35:44 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|72              |4       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|71              |3       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|70              |2       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|69              |1       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-10 09:35:44 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
          FROM feed_pic
         WHERE feed_id = 13
 {executed in 1 msec}
[2024-12-10 09:35:44 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|7af273d9-3528-498f-b249-e48a4bc99755.jpg |
|-----------------------------------------|

[2024-12-10 09:35:44 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , B.user_id AS writerUserId
             , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
             , B.pic AS writerPic
          FROM feed_comment A
         INNER JOIN user B
            ON A.user_id = B.user_id
         WHERE A.feed_id = 13
         ORDER BY A.feed_comment_id DESC
         LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 09:35:44 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|56              |29      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|55              |28      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|54              |27      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|53              |26      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-10 09:35:44 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
          FROM feed_pic
         WHERE feed_id = 12
 {executed in 0 msec}
[2024-12-10 09:35:44 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|---------|
|pic      |
|---------|
|aaaa.gif |
|---------|

[2024-12-10 09:35:44 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , B.user_id AS writerUserId
             , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
             , B.pic AS writerPic
          FROM feed_comment A
         INNER JOIN user B
            ON A.user_id = B.user_id
         WHERE A.feed_id = 12
         ORDER BY A.feed_comment_id DESC
         LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 09:35:44 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|23              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|22              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|21              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|20              |ㄴㅇㅁ     |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-10 09:35:44 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
          FROM feed_pic
         WHERE feed_id = 11
 {executed in 0 msec}
[2024-12-10 09:35:44 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|f3f416ca-1a7e-4483-b1db-b2164d76d4f4.png |
|-----------------------------------------|

[2024-12-10 09:35:44 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , B.user_id AS writerUserId
             , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
             , B.pic AS writerPic
          FROM feed_comment A
         INNER JOIN user B
            ON A.user_id = B.user_id
         WHERE A.feed_id = 11
         ORDER BY A.feed_comment_id DESC
         LIMIT 0, 4
 {executed in 1 msec}
[2024-12-10 09:35:44 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 09:35:44 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
          FROM feed_pic
         WHERE feed_id = 10
 {executed in 0 msec}
[2024-12-10 09:35:44 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|53da69e7-7ae4-4e7b-b95b-a4c4ca01bdc8.jpg |
|-----------------------------------------|

[2024-12-10 09:35:44 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , B.user_id AS writerUserId
             , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
             , B.pic AS writerPic
          FROM feed_comment A
         INNER JOIN user B
            ON A.user_id = B.user_id
         WHERE A.feed_id = 10
         ORDER BY A.feed_comment_id DESC
         LIMIT 0, 4
 {executed in 1 msec}
[2024-12-10 09:35:44 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|29              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|28              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|27              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|26              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-10 09:35:44 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
          FROM feed_pic
         WHERE feed_id = 9
 {executed in 0 msec}
[2024-12-10 09:35:44 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|7875594b-3649-4059-a29a-5c09feeab0ad.jpg |
|-----------------------------------------|

[2024-12-10 09:35:44 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , B.user_id AS writerUserId
             , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
             , B.pic AS writerPic
          FROM feed_comment A
         INNER JOIN user B
            ON A.user_id = B.user_id
         WHERE A.feed_id = 9
         ORDER BY A.feed_comment_id DESC
         LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 09:35:44 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 09:35:44 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
          FROM feed_pic
         WHERE feed_id = 5
 {executed in 0 msec}
[2024-12-10 09:35:44 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|675d9f82-0c18-4f6e-91a3-9858129aeb7e.jpg |
|c95cc439-e1e7-40f4-81fa-013b069631ca.jpg |
|f490d2ad-c64d-4006-a74a-8235888e3e87.jpg |
|-----------------------------------------|

[2024-12-10 09:35:44 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , B.user_id AS writerUserId
             , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
             , B.pic AS writerPic
          FROM feed_comment A
         INNER JOIN user B
            ON A.user_id = B.user_id
         WHERE A.feed_id = 5
         ORDER BY A.feed_comment_id DESC
         LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 09:35:44 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 09:35:44 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
          FROM feed_pic
         WHERE feed_id = 4
 {executed in 0 msec}
[2024-12-10 09:35:44 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-10 09:35:44 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , B.user_id AS writerUserId
             , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
             , B.pic AS writerPic
          FROM feed_comment A
         INNER JOIN user B
            ON A.user_id = B.user_id
         WHERE A.feed_id = 4
         ORDER BY A.feed_comment_id DESC
         LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 09:35:44 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 09:35:59 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT user_id AS userId
             , IFNULL(nick_name, uid) AS nickName
             , pic, upw
          FROM user
         WHERE uid = '123456'
 {executed in 1 msec}
[2024-12-10 09:35:59 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|--------|---------|-----------------------------------------|-------------------------------------------------------------|
|user_id |nickname |pic                                      |upw                                                          |
|--------|---------|-----------------------------------------|-------------------------------------------------------------|
|1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |$2a$10$HVKJHBG1Y84PZoKHh2LWSeEj5fUpndTfiNwEGZN1M2PmlyY3/S5zS |
|--------|---------|-----------------------------------------|-------------------------------------------------------------|

[2024-12-10 09:35:59 INFO http-nio-8080-exec-8] [com.green.greengram.feed.FeedController] FeedController > getFeedList > p: FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=1, profileUserId=null)
[2024-12-10 09:35:59 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId, A.contents, A.location
             , A.created_at AS createdAt
             , B.user_id AS writerUserId
             , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
             , B.pic AS writerPic
             , IF(C.feed_id IS NULL, 0, 1) AS isLike
          FROM feed A
         INNER JOIN user B
            ON A.writer_user_id = B.user_id

        LEFT JOIN feed_like C
            ON A.feed_id = C.feed_id
           AND C.user_id = 1
         ORDER BY A.feed_id DESC
         LIMIT 0, 20
 {executed in 0 msec}
[2024-12-10 09:35:59 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|--------|---------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|feed_id |contents |location |created_at          |user_id |writernm |pic                                      |islike |
|--------|---------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|22      |         |         |2024-12-09 16:30:06 |6       |8        |292cc9ec-541d-454e-beda-2233f6bb26b2.gif |0      |
|21      |         |         |2024-12-09 16:29:56 |6       |8        |292cc9ec-541d-454e-beda-2233f6bb26b2.gif |0      |
|19      |         |         |2024-12-09 11:54:50 |6       |8        |292cc9ec-541d-454e-beda-2233f6bb26b2.gif |1      |
|18      |         |         |2024-12-06 12:45:10 |6       |8        |292cc9ec-541d-454e-beda-2233f6bb26b2.gif |1      |
|17      |ㅇ        |ㅇ        |2024-12-05 17:07:14 |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |0      |
|15      |ㅁㄴㅇ      |ㅁㄴㅇ      |2024-12-03 15:48:41 |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |1      |
|14      |ㅇ        |ㅇ        |2024-12-03 11:49:38 |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |0      |
|13      |d        |d        |2024-12-03 11:15:02 |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |0      |
|12      |ㅁㄴㅇ      |ㅁㄴㅇ      |2024-11-29 16:17:53 |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |0      |
|11      |         |         |2024-11-29 16:12:11 |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |0      |
|10      |asd      |asd      |2024-11-29 16:05:52 |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |0      |
|9       |sda      |asd      |2024-11-29 16:00:32 |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |1      |
|5       |123      |중앙로      |2024-11-29 10:36:12 |2       |홍길동      |6d88f58a-0c38-4010-b703-3ccb187071d8.jpg |0      |
|4       |123      |그린컴      |2024-11-28 17:24:40 |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |0      |
|--------|---------|---------|--------------------|--------|---------|-----------------------------------------|-------|

[2024-12-10 09:35:59 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
          FROM feed_pic
         WHERE feed_id = 22
 {executed in 0 msec}
[2024-12-10 09:35:59 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|71b713ca-7094-4c0a-939c-29d119340ee6.gif |
|-----------------------------------------|

[2024-12-10 09:35:59 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , B.user_id AS writerUserId
             , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
             , B.pic AS writerPic
          FROM feed_comment A
         INNER JOIN user B
            ON A.user_id = B.user_id
         WHERE A.feed_id = 22
         ORDER BY A.feed_comment_id DESC
         LIMIT 0, 4
 {executed in 1 msec}
[2024-12-10 09:35:59 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 09:35:59 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
          FROM feed_pic
         WHERE feed_id = 21
 {executed in 1 msec}
[2024-12-10 09:35:59 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|6d6e94d5-499f-454f-aa08-d40373161e86.gif |
|-----------------------------------------|

[2024-12-10 09:35:59 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , B.user_id AS writerUserId
             , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
             , B.pic AS writerPic
          FROM feed_comment A
         INNER JOIN user B
            ON A.user_id = B.user_id
         WHERE A.feed_id = 21
         ORDER BY A.feed_comment_id DESC
         LIMIT 0, 4
 {executed in 1 msec}
[2024-12-10 09:35:59 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 09:35:59 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
          FROM feed_pic
         WHERE feed_id = 19
 {executed in 0 msec}
[2024-12-10 09:35:59 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|83e83807-46f8-4040-8f70-667accd3c76f.gif |
|-----------------------------------------|

[2024-12-10 09:35:59 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , B.user_id AS writerUserId
             , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
             , B.pic AS writerPic
          FROM feed_comment A
         INNER JOIN user B
            ON A.user_id = B.user_id
         WHERE A.feed_id = 19
         ORDER BY A.feed_comment_id DESC
         LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 09:35:59 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 09:35:59 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
          FROM feed_pic
         WHERE feed_id = 18
 {executed in 0 msec}
[2024-12-10 09:35:59 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a773e1e8-508b-4ce5-8c6f-e3af220615dc.gif |
|-----------------------------------------|

[2024-12-10 09:35:59 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , B.user_id AS writerUserId
             , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
             , B.pic AS writerPic
          FROM feed_comment A
         INNER JOIN user B
            ON A.user_id = B.user_id
         WHERE A.feed_id = 18
         ORDER BY A.feed_comment_id DESC
         LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 09:35:59 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 09:35:59 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
          FROM feed_pic
         WHERE feed_id = 17
 {executed in 0 msec}
[2024-12-10 09:35:59 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|e739d20c-ebef-4304-9ff8-926290978d0d.gif |
|-----------------------------------------|

[2024-12-10 09:35:59 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , B.user_id AS writerUserId
             , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
             , B.pic AS writerPic
          FROM feed_comment A
         INNER JOIN user B
            ON A.user_id = B.user_id
         WHERE A.feed_id = 17
         ORDER BY A.feed_comment_id DESC
         LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 09:35:59 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 09:35:59 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
          FROM feed_pic
         WHERE feed_id = 15
 {executed in 1 msec}
[2024-12-10 09:35:59 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|12526740-807d-47f8-a45b-1c05ac9f99ce.gif |
|-----------------------------------------|

[2024-12-10 09:35:59 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , B.user_id AS writerUserId
             , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
             , B.pic AS writerPic
          FROM feed_comment A
         INNER JOIN user B
            ON A.user_id = B.user_id
         WHERE A.feed_id = 15
         ORDER BY A.feed_comment_id DESC
         LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 09:35:59 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 09:35:59 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
          FROM feed_pic
         WHERE feed_id = 14
 {executed in 1 msec}
[2024-12-10 09:35:59 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|d3ab1225-6450-4fc4-9f31-eb10a531825a.gif |
|-----------------------------------------|

[2024-12-10 09:35:59 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , B.user_id AS writerUserId
             , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
             , B.pic AS writerPic
          FROM feed_comment A
         INNER JOIN user B
            ON A.user_id = B.user_id
         WHERE A.feed_id = 14
         ORDER BY A.feed_comment_id DESC
         LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 09:35:59 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|72              |4       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|71              |3       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|70              |2       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|69              |1       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-10 09:35:59 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
          FROM feed_pic
         WHERE feed_id = 13
 {executed in 0 msec}
[2024-12-10 09:35:59 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|7af273d9-3528-498f-b249-e48a4bc99755.jpg |
|-----------------------------------------|

[2024-12-10 09:35:59 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , B.user_id AS writerUserId
             , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
             , B.pic AS writerPic
          FROM feed_comment A
         INNER JOIN user B
            ON A.user_id = B.user_id
         WHERE A.feed_id = 13
         ORDER BY A.feed_comment_id DESC
         LIMIT 0, 4
 {executed in 1 msec}
[2024-12-10 09:35:59 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|56              |29      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|55              |28      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|54              |27      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|53              |26      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-10 09:35:59 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
          FROM feed_pic
         WHERE feed_id = 12
 {executed in 0 msec}
[2024-12-10 09:35:59 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|---------|
|pic      |
|---------|
|aaaa.gif |
|---------|

[2024-12-10 09:35:59 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , B.user_id AS writerUserId
             , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
             , B.pic AS writerPic
          FROM feed_comment A
         INNER JOIN user B
            ON A.user_id = B.user_id
         WHERE A.feed_id = 12
         ORDER BY A.feed_comment_id DESC
         LIMIT 0, 4
 {executed in 1 msec}
[2024-12-10 09:35:59 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|23              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|22              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|21              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|20              |ㄴㅇㅁ     |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-10 09:35:59 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
          FROM feed_pic
         WHERE feed_id = 11
 {executed in 1 msec}
[2024-12-10 09:35:59 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|f3f416ca-1a7e-4483-b1db-b2164d76d4f4.png |
|-----------------------------------------|

[2024-12-10 09:35:59 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , B.user_id AS writerUserId
             , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
             , B.pic AS writerPic
          FROM feed_comment A
         INNER JOIN user B
            ON A.user_id = B.user_id
         WHERE A.feed_id = 11
         ORDER BY A.feed_comment_id DESC
         LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 09:35:59 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 09:35:59 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
          FROM feed_pic
         WHERE feed_id = 10
 {executed in 0 msec}
[2024-12-10 09:35:59 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|53da69e7-7ae4-4e7b-b95b-a4c4ca01bdc8.jpg |
|-----------------------------------------|

[2024-12-10 09:35:59 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , B.user_id AS writerUserId
             , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
             , B.pic AS writerPic
          FROM feed_comment A
         INNER JOIN user B
            ON A.user_id = B.user_id
         WHERE A.feed_id = 10
         ORDER BY A.feed_comment_id DESC
         LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 09:35:59 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|29              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|28              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|27              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|26              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-10 09:35:59 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
          FROM feed_pic
         WHERE feed_id = 9
 {executed in 0 msec}
[2024-12-10 09:35:59 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|7875594b-3649-4059-a29a-5c09feeab0ad.jpg |
|-----------------------------------------|

[2024-12-10 09:35:59 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , B.user_id AS writerUserId
             , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
             , B.pic AS writerPic
          FROM feed_comment A
         INNER JOIN user B
            ON A.user_id = B.user_id
         WHERE A.feed_id = 9
         ORDER BY A.feed_comment_id DESC
         LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 09:35:59 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 09:35:59 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
          FROM feed_pic
         WHERE feed_id = 5
 {executed in 0 msec}
[2024-12-10 09:35:59 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|675d9f82-0c18-4f6e-91a3-9858129aeb7e.jpg |
|c95cc439-e1e7-40f4-81fa-013b069631ca.jpg |
|f490d2ad-c64d-4006-a74a-8235888e3e87.jpg |
|-----------------------------------------|

[2024-12-10 09:35:59 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , B.user_id AS writerUserId
             , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
             , B.pic AS writerPic
          FROM feed_comment A
         INNER JOIN user B
            ON A.user_id = B.user_id
         WHERE A.feed_id = 5
         ORDER BY A.feed_comment_id DESC
         LIMIT 0, 4
 {executed in 1 msec}
[2024-12-10 09:35:59 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 09:35:59 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
          FROM feed_pic
         WHERE feed_id = 4
 {executed in 0 msec}
[2024-12-10 09:35:59 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-10 09:35:59 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , B.user_id AS writerUserId
             , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
             , B.pic AS writerPic
          FROM feed_comment A
         INNER JOIN user B
            ON A.user_id = B.user_id
         WHERE A.feed_id = 4
         ORDER BY A.feed_comment_id DESC
         LIMIT 0, 4
 {executed in 1 msec}
[2024-12-10 09:35:59 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 09:36:03 INFO http-nio-8080-exec-2] [com.green.greengram.user.UserController] UserController > getUserInfo > p : UserInfoGetReq(signedUserId=1, profileUserId=1)
[2024-12-10 09:36:03 INFO http-nio-8080-exec-10] [com.green.greengram.feed.FeedController] FeedController > getFeedList > p: FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=1, profileUserId=1)
[2024-12-10 09:36:03 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT A.feed_id AS feedId, A.contents, A.location
             , A.created_at AS createdAt
             , B.user_id AS writerUserId
             , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
             , B.pic AS writerPic
             , IF(C.feed_id IS NULL, 0, 1) AS isLike
          FROM feed A
         INNER JOIN user B
            ON A.writer_user_id = B.user_id

            AND B.user_id = 1

        LEFT JOIN feed_like C
            ON A.feed_id = C.feed_id
           AND C.user_id = 1
         ORDER BY A.feed_id DESC
         LIMIT 0, 20
 {executed in 1 msec}
[2024-12-10 09:36:03 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.user_id AS userId, A.pic, A.created_at AS createdAt
        , IF(A.nick_name IS NULL, A.uid, A.nick_name) AS nickName
        , COUNT(DISTINCT F1.from_user_id, F1.to_user_id) AS `follower`
        , COUNT(DISTINCT F2.from_user_id, F2.to_user_id) AS `following`
        , COUNT(DISTINCT F3.feed_id) AS feedCount
        , COUNT(DISTINCT F4.feed_id, F4.user_id) AS myFeedLikeCount
        , MAX(IF(F1.from_user_id = 1, 1, 0))
        + MAX(IF(F2.to_user_id = 1, 2, 0)) AS followState
        FROM user A
        LEFT JOIN user_follow F1
        ON A.user_id = F1.to_user_id
        LEFT JOIN user_follow F2
        ON A.user_id = F2.from_user_id
        LEFT JOIN feed F3
        ON A.user_id = F3.writer_user_id
        LEFT JOIN feed_like F4
        ON F3.feed_id = F4.feed_id
        WHERE A.user_id = 1;
 {executed in 1 msec}
[2024-12-10 09:36:03 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|--------|-----------------------------------------|--------------------|---------|---------|----------|----------|----------------|------------|
|user_id |pic                                      |created_at          |nickname |follower |following |feedcount |myfeedlikecount |followstate |
|--------|-----------------------------------------|--------------------|---------|---------|----------|----------|----------------|------------|
|1       |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |2024-11-28 12:39:46 |123456   |2        |3         |9         |2               |0           |
|--------|-----------------------------------------|--------------------|---------|---------|----------|----------|----------------|------------|

[2024-12-10 09:36:03 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|--------|---------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|feed_id |contents |location |created_at          |user_id |writernm |pic                                      |islike |
|--------|---------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|17      |ㅇ        |ㅇ        |2024-12-05 17:07:14 |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |0      |
|15      |ㅁㄴㅇ      |ㅁㄴㅇ      |2024-12-03 15:48:41 |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |1      |
|14      |ㅇ        |ㅇ        |2024-12-03 11:49:38 |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |0      |
|13      |d        |d        |2024-12-03 11:15:02 |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |0      |
|12      |ㅁㄴㅇ      |ㅁㄴㅇ      |2024-11-29 16:17:53 |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |0      |
|11      |         |         |2024-11-29 16:12:11 |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |0      |
|10      |asd      |asd      |2024-11-29 16:05:52 |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |0      |
|9       |sda      |asd      |2024-11-29 16:00:32 |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |1      |
|4       |123      |그린컴      |2024-11-28 17:24:40 |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |0      |
|--------|---------|---------|--------------------|--------|---------|-----------------------------------------|-------|

[2024-12-10 09:36:03 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
          FROM feed_pic
         WHERE feed_id = 17
 {executed in 0 msec}
[2024-12-10 09:36:03 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|e739d20c-ebef-4304-9ff8-926290978d0d.gif |
|-----------------------------------------|

[2024-12-10 09:36:03 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , B.user_id AS writerUserId
             , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
             , B.pic AS writerPic
          FROM feed_comment A
         INNER JOIN user B
            ON A.user_id = B.user_id
         WHERE A.feed_id = 17
         ORDER BY A.feed_comment_id DESC
         LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 09:36:03 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 09:36:03 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
          FROM feed_pic
         WHERE feed_id = 15
 {executed in 0 msec}
[2024-12-10 09:36:03 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|12526740-807d-47f8-a45b-1c05ac9f99ce.gif |
|-----------------------------------------|

[2024-12-10 09:36:03 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , B.user_id AS writerUserId
             , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
             , B.pic AS writerPic
          FROM feed_comment A
         INNER JOIN user B
            ON A.user_id = B.user_id
         WHERE A.feed_id = 15
         ORDER BY A.feed_comment_id DESC
         LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 09:36:03 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 09:36:03 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
          FROM feed_pic
         WHERE feed_id = 14
 {executed in 0 msec}
[2024-12-10 09:36:03 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|d3ab1225-6450-4fc4-9f31-eb10a531825a.gif |
|-----------------------------------------|

[2024-12-10 09:36:03 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , B.user_id AS writerUserId
             , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
             , B.pic AS writerPic
          FROM feed_comment A
         INNER JOIN user B
            ON A.user_id = B.user_id
         WHERE A.feed_id = 14
         ORDER BY A.feed_comment_id DESC
         LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 09:36:03 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|72              |4       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|71              |3       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|70              |2       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|69              |1       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-10 09:36:03 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
          FROM feed_pic
         WHERE feed_id = 13
 {executed in 1 msec}
[2024-12-10 09:36:03 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|7af273d9-3528-498f-b249-e48a4bc99755.jpg |
|-----------------------------------------|

[2024-12-10 09:36:03 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , B.user_id AS writerUserId
             , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
             , B.pic AS writerPic
          FROM feed_comment A
         INNER JOIN user B
            ON A.user_id = B.user_id
         WHERE A.feed_id = 13
         ORDER BY A.feed_comment_id DESC
         LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 09:36:03 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|56              |29      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|55              |28      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|54              |27      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|53              |26      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-10 09:36:03 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
          FROM feed_pic
         WHERE feed_id = 12
 {executed in 0 msec}
[2024-12-10 09:36:03 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|---------|
|pic      |
|---------|
|aaaa.gif |
|---------|

[2024-12-10 09:36:03 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , B.user_id AS writerUserId
             , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
             , B.pic AS writerPic
          FROM feed_comment A
         INNER JOIN user B
            ON A.user_id = B.user_id
         WHERE A.feed_id = 12
         ORDER BY A.feed_comment_id DESC
         LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 09:36:03 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|23              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|22              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|21              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|20              |ㄴㅇㅁ     |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-10 09:36:03 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
          FROM feed_pic
         WHERE feed_id = 11
 {executed in 0 msec}
[2024-12-10 09:36:03 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|f3f416ca-1a7e-4483-b1db-b2164d76d4f4.png |
|-----------------------------------------|

[2024-12-10 09:36:03 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , B.user_id AS writerUserId
             , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
             , B.pic AS writerPic
          FROM feed_comment A
         INNER JOIN user B
            ON A.user_id = B.user_id
         WHERE A.feed_id = 11
         ORDER BY A.feed_comment_id DESC
         LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 09:36:03 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 09:36:03 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
          FROM feed_pic
         WHERE feed_id = 10
 {executed in 0 msec}
[2024-12-10 09:36:03 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|53da69e7-7ae4-4e7b-b95b-a4c4ca01bdc8.jpg |
|-----------------------------------------|

[2024-12-10 09:36:03 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , B.user_id AS writerUserId
             , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
             , B.pic AS writerPic
          FROM feed_comment A
         INNER JOIN user B
            ON A.user_id = B.user_id
         WHERE A.feed_id = 10
         ORDER BY A.feed_comment_id DESC
         LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 09:36:03 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|29              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|28              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|27              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|26              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-10 09:36:03 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
          FROM feed_pic
         WHERE feed_id = 9
 {executed in 0 msec}
[2024-12-10 09:36:03 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|7875594b-3649-4059-a29a-5c09feeab0ad.jpg |
|-----------------------------------------|

[2024-12-10 09:36:03 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , B.user_id AS writerUserId
             , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
             , B.pic AS writerPic
          FROM feed_comment A
         INNER JOIN user B
            ON A.user_id = B.user_id
         WHERE A.feed_id = 9
         ORDER BY A.feed_comment_id DESC
         LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 09:36:03 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 09:36:03 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
          FROM feed_pic
         WHERE feed_id = 4
 {executed in 0 msec}
[2024-12-10 09:36:03 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-10 09:36:03 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , B.user_id AS writerUserId
             , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
             , B.pic AS writerPic
          FROM feed_comment A
         INNER JOIN user B
            ON A.user_id = B.user_id
         WHERE A.feed_id = 4
         ORDER BY A.feed_comment_id DESC
         LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 09:36:03 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 09:36:05 INFO http-nio-8080-exec-9] [com.green.greengram.feed.FeedController] FeedController > deleteFeed > p: com.green.greengram.feed.model.FeedDeleteReq@447d0e4
[2024-12-10 09:36:05 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. DELETE B, C, D
        FROM feed A
        LEFT JOIN feed_like B
        ON A.feed_id = B.feed_id
        LEFT JOIN feed_comment C
        ON A.feed_id = C.feed_id
        LEFT JOIN feed_pic D
        ON A.feed_id = D.feed_id
        WHERE A.feed_id = 17
        AND A.writer_user_id = 1
 {executed in 1 msec}
[2024-12-10 09:36:05 INFO http-nio-8080-exec-9] [com.green.greengram.feed.FeedService] affectedRows: 1
[2024-12-10 09:36:05 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. DELETE FROM feed
        WHERE feed_id = 17
        AND writer_user_id = 1
 {executed in 0 msec}
[2024-12-10 09:36:07 INFO http-nio-8080-exec-8] [com.green.greengram.feed.FeedController] FeedController > deleteFeed > p: com.green.greengram.feed.model.FeedDeleteReq@d8a4848
[2024-12-10 09:36:07 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. DELETE B, C, D
        FROM feed A
        LEFT JOIN feed_like B
        ON A.feed_id = B.feed_id
        LEFT JOIN feed_comment C
        ON A.feed_id = C.feed_id
        LEFT JOIN feed_pic D
        ON A.feed_id = D.feed_id
        WHERE A.feed_id = 15
        AND A.writer_user_id = 1
 {executed in 0 msec}
[2024-12-10 09:36:07 INFO http-nio-8080-exec-8] [com.green.greengram.feed.FeedService] affectedRows: 2
[2024-12-10 09:36:07 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. DELETE FROM feed
        WHERE feed_id = 15
        AND writer_user_id = 1
 {executed in 0 msec}
[2024-12-10 09:36:09 INFO http-nio-8080-exec-7] [com.green.greengram.feed.FeedController] FeedController > deleteFeed > p: com.green.greengram.feed.model.FeedDeleteReq@7261a343
[2024-12-10 09:36:09 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. DELETE B, C, D
        FROM feed A
        LEFT JOIN feed_like B
        ON A.feed_id = B.feed_id
        LEFT JOIN feed_comment C
        ON A.feed_id = C.feed_id
        LEFT JOIN feed_pic D
        ON A.feed_id = D.feed_id
        WHERE A.feed_id = 14
        AND A.writer_user_id = 1
 {executed in 0 msec}
[2024-12-10 09:36:09 INFO http-nio-8080-exec-7] [com.green.greengram.feed.FeedService] affectedRows: 5
[2024-12-10 09:36:09 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. DELETE FROM feed
        WHERE feed_id = 14
        AND writer_user_id = 1
 {executed in 0 msec}
[2024-12-10 09:36:11 INFO http-nio-8080-exec-3] [com.green.greengram.feed.FeedController] FeedController > deleteFeed > p: com.green.greengram.feed.model.FeedDeleteReq@6b569736
[2024-12-10 09:36:11 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. DELETE B, C, D
        FROM feed A
        LEFT JOIN feed_like B
        ON A.feed_id = B.feed_id
        LEFT JOIN feed_comment C
        ON A.feed_id = C.feed_id
        LEFT JOIN feed_pic D
        ON A.feed_id = D.feed_id
        WHERE A.feed_id = 13
        AND A.writer_user_id = 1
 {executed in 1 msec}
[2024-12-10 09:36:11 INFO http-nio-8080-exec-3] [com.green.greengram.feed.FeedService] affectedRows: 28
[2024-12-10 09:36:11 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. DELETE FROM feed
        WHERE feed_id = 13
        AND writer_user_id = 1
 {executed in 1 msec}
[2024-12-10 09:36:13 INFO http-nio-8080-exec-5] [com.green.greengram.feed.FeedController] FeedController > deleteFeed > p: com.green.greengram.feed.model.FeedDeleteReq@4ec8290b
[2024-12-10 09:36:13 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. DELETE B, C, D
        FROM feed A
        LEFT JOIN feed_like B
        ON A.feed_id = B.feed_id
        LEFT JOIN feed_comment C
        ON A.feed_id = C.feed_id
        LEFT JOIN feed_pic D
        ON A.feed_id = D.feed_id
        WHERE A.feed_id = 12
        AND A.writer_user_id = 1
 {executed in 1 msec}
[2024-12-10 09:36:13 INFO http-nio-8080-exec-5] [com.green.greengram.feed.FeedService] affectedRows: 16
[2024-12-10 09:36:13 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. DELETE FROM feed
        WHERE feed_id = 12
        AND writer_user_id = 1
 {executed in 1 msec}
[2024-12-10 09:36:15 INFO http-nio-8080-exec-4] [com.green.greengram.feed.FeedController] FeedController > deleteFeed > p: com.green.greengram.feed.model.FeedDeleteReq@7956ca2b
[2024-12-10 09:36:15 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. DELETE B, C, D
        FROM feed A
        LEFT JOIN feed_like B
        ON A.feed_id = B.feed_id
        LEFT JOIN feed_comment C
        ON A.feed_id = C.feed_id
        LEFT JOIN feed_pic D
        ON A.feed_id = D.feed_id
        WHERE A.feed_id = 11
        AND A.writer_user_id = 1
 {executed in 0 msec}
[2024-12-10 09:36:15 INFO http-nio-8080-exec-4] [com.green.greengram.feed.FeedService] affectedRows: 1
[2024-12-10 09:36:15 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. DELETE FROM feed
        WHERE feed_id = 11
        AND writer_user_id = 1
 {executed in 1 msec}
[2024-12-10 09:36:16 INFO http-nio-8080-exec-9] [com.green.greengram.feed.FeedController] FeedController > deleteFeed > p: com.green.greengram.feed.model.FeedDeleteReq@495aa0d3
[2024-12-10 09:36:16 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. DELETE B, C, D
        FROM feed A
        LEFT JOIN feed_like B
        ON A.feed_id = B.feed_id
        LEFT JOIN feed_comment C
        ON A.feed_id = C.feed_id
        LEFT JOIN feed_pic D
        ON A.feed_id = D.feed_id
        WHERE A.feed_id = 10
        AND A.writer_user_id = 1
 {executed in 1 msec}
[2024-12-10 09:36:16 INFO http-nio-8080-exec-9] [com.green.greengram.feed.FeedService] affectedRows: 6
[2024-12-10 09:36:16 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. DELETE FROM feed
        WHERE feed_id = 10
        AND writer_user_id = 1
 {executed in 0 msec}
[2024-12-10 09:36:18 INFO http-nio-8080-exec-8] [com.green.greengram.feed.FeedController] FeedController > deleteFeed > p: com.green.greengram.feed.model.FeedDeleteReq@15a9c294
[2024-12-10 09:36:18 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. DELETE B, C, D
        FROM feed A
        LEFT JOIN feed_like B
        ON A.feed_id = B.feed_id
        LEFT JOIN feed_comment C
        ON A.feed_id = C.feed_id
        LEFT JOIN feed_pic D
        ON A.feed_id = D.feed_id
        WHERE A.feed_id = 9
        AND A.writer_user_id = 1
 {executed in 1 msec}
[2024-12-10 09:36:18 INFO http-nio-8080-exec-8] [com.green.greengram.feed.FeedService] affectedRows: 2
[2024-12-10 09:36:18 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. DELETE FROM feed
        WHERE feed_id = 9
        AND writer_user_id = 1
 {executed in 1 msec}
[2024-12-10 09:36:19 INFO http-nio-8080-exec-7] [com.green.greengram.feed.FeedController] FeedController > deleteFeed > p: com.green.greengram.feed.model.FeedDeleteReq@15a0903b
[2024-12-10 09:36:19 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. DELETE B, C, D
        FROM feed A
        LEFT JOIN feed_like B
        ON A.feed_id = B.feed_id
        LEFT JOIN feed_comment C
        ON A.feed_id = C.feed_id
        LEFT JOIN feed_pic D
        ON A.feed_id = D.feed_id
        WHERE A.feed_id = 4
        AND A.writer_user_id = 1
 {executed in 0 msec}
[2024-12-10 09:36:19 INFO http-nio-8080-exec-7] [com.green.greengram.feed.FeedService] affectedRows: 0
[2024-12-10 09:36:19 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. DELETE FROM feed
        WHERE feed_id = 4
        AND writer_user_id = 1
 {executed in 1 msec}
[2024-12-10 09:36:25 INFO http-nio-8080-exec-5] [com.green.greengram.feed.FeedController] FeedController > getFeedList > p: FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=1, profileUserId=null)
[2024-12-10 09:36:25 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId, A.contents, A.location
             , A.created_at AS createdAt
             , B.user_id AS writerUserId
             , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
             , B.pic AS writerPic
             , IF(C.feed_id IS NULL, 0, 1) AS isLike
          FROM feed A
         INNER JOIN user B
            ON A.writer_user_id = B.user_id

        LEFT JOIN feed_like C
            ON A.feed_id = C.feed_id
           AND C.user_id = 1
         ORDER BY A.feed_id DESC
         LIMIT 0, 20
 {executed in 0 msec}
[2024-12-10 09:36:25 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|--------|---------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|feed_id |contents |location |created_at          |user_id |writernm |pic                                      |islike |
|--------|---------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|22      |         |         |2024-12-09 16:30:06 |6       |8        |292cc9ec-541d-454e-beda-2233f6bb26b2.gif |0      |
|21      |         |         |2024-12-09 16:29:56 |6       |8        |292cc9ec-541d-454e-beda-2233f6bb26b2.gif |0      |
|19      |         |         |2024-12-09 11:54:50 |6       |8        |292cc9ec-541d-454e-beda-2233f6bb26b2.gif |1      |
|18      |         |         |2024-12-06 12:45:10 |6       |8        |292cc9ec-541d-454e-beda-2233f6bb26b2.gif |1      |
|5       |123      |중앙로      |2024-11-29 10:36:12 |2       |홍길동      |6d88f58a-0c38-4010-b703-3ccb187071d8.jpg |0      |
|--------|---------|---------|--------------------|--------|---------|-----------------------------------------|-------|

[2024-12-10 09:36:25 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
          FROM feed_pic
         WHERE feed_id = 22
 {executed in 0 msec}
[2024-12-10 09:36:25 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|71b713ca-7094-4c0a-939c-29d119340ee6.gif |
|-----------------------------------------|

[2024-12-10 09:36:25 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , B.user_id AS writerUserId
             , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
             , B.pic AS writerPic
          FROM feed_comment A
         INNER JOIN user B
            ON A.user_id = B.user_id
         WHERE A.feed_id = 22
         ORDER BY A.feed_comment_id DESC
         LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 09:36:25 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 09:36:25 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
          FROM feed_pic
         WHERE feed_id = 21
 {executed in 0 msec}
[2024-12-10 09:36:25 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|6d6e94d5-499f-454f-aa08-d40373161e86.gif |
|-----------------------------------------|

[2024-12-10 09:36:25 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , B.user_id AS writerUserId
             , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
             , B.pic AS writerPic
          FROM feed_comment A
         INNER JOIN user B
            ON A.user_id = B.user_id
         WHERE A.feed_id = 21
         ORDER BY A.feed_comment_id DESC
         LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 09:36:25 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 09:36:25 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
          FROM feed_pic
         WHERE feed_id = 19
 {executed in 0 msec}
[2024-12-10 09:36:25 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|83e83807-46f8-4040-8f70-667accd3c76f.gif |
|-----------------------------------------|

[2024-12-10 09:36:25 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , B.user_id AS writerUserId
             , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
             , B.pic AS writerPic
          FROM feed_comment A
         INNER JOIN user B
            ON A.user_id = B.user_id
         WHERE A.feed_id = 19
         ORDER BY A.feed_comment_id DESC
         LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 09:36:25 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 09:36:25 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
          FROM feed_pic
         WHERE feed_id = 18
 {executed in 0 msec}
[2024-12-10 09:36:25 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a773e1e8-508b-4ce5-8c6f-e3af220615dc.gif |
|-----------------------------------------|

[2024-12-10 09:36:25 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , B.user_id AS writerUserId
             , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
             , B.pic AS writerPic
          FROM feed_comment A
         INNER JOIN user B
            ON A.user_id = B.user_id
         WHERE A.feed_id = 18
         ORDER BY A.feed_comment_id DESC
         LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 09:36:25 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 09:36:25 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
          FROM feed_pic
         WHERE feed_id = 5
 {executed in 1 msec}
[2024-12-10 09:36:25 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|675d9f82-0c18-4f6e-91a3-9858129aeb7e.jpg |
|c95cc439-e1e7-40f4-81fa-013b069631ca.jpg |
|f490d2ad-c64d-4006-a74a-8235888e3e87.jpg |
|-----------------------------------------|

[2024-12-10 09:36:25 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , B.user_id AS writerUserId
             , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
             , B.pic AS writerPic
          FROM feed_comment A
         INNER JOIN user B
            ON A.user_id = B.user_id
         WHERE A.feed_id = 5
         ORDER BY A.feed_comment_id DESC
         LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 09:36:25 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 09:44:46 INFO http-nio-8080-exec-2] [com.green.greengram.user.UserController] UserController > getUserInfo > p : UserInfoGetReq(signedUserId=1, profileUserId=2)
[2024-12-10 09:44:46 INFO http-nio-8080-exec-10] [com.green.greengram.feed.FeedController] FeedController > getFeedList > p: FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=1, profileUserId=2)
[2024-12-10 09:44:46 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.user_id AS userId, A.pic, A.created_at AS createdAt
        , IF(A.nick_name IS NULL, A.uid, A.nick_name) AS nickName
        , COUNT(DISTINCT F1.from_user_id, F1.to_user_id) AS `follower`
        , COUNT(DISTINCT F2.from_user_id, F2.to_user_id) AS `following`
        , COUNT(DISTINCT F3.feed_id) AS feedCount
        , COUNT(DISTINCT F4.feed_id, F4.user_id) AS myFeedLikeCount
        , MAX(IF(F1.from_user_id = 1, 1, 0))
        + MAX(IF(F2.to_user_id = 1, 2, 0)) AS followState
        FROM user A
        LEFT JOIN user_follow F1
        ON A.user_id = F1.to_user_id
        LEFT JOIN user_follow F2
        ON A.user_id = F2.from_user_id
        LEFT JOIN feed F3
        ON A.user_id = F3.writer_user_id
        LEFT JOIN feed_like F4
        ON F3.feed_id = F4.feed_id
        WHERE A.user_id = 2;
 {executed in 0 msec}
[2024-12-10 09:44:46 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|--------|-----------------------------------------|--------------------|---------|---------|----------|----------|----------------|------------|
|user_id |pic                                      |created_at          |nickname |follower |following |feedcount |myfeedlikecount |followstate |
|--------|-----------------------------------------|--------------------|---------|---------|----------|----------|----------------|------------|
|2       |6d88f58a-0c38-4010-b703-3ccb187071d8.jpg |2024-11-28 13:14:39 |홍길동      |1        |0         |1         |1               |1           |
|--------|-----------------------------------------|--------------------|---------|---------|----------|----------|----------------|------------|

[2024-12-10 09:44:46 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT A.feed_id AS feedId, A.contents, A.location
             , A.created_at AS createdAt
             , B.user_id AS writerUserId
             , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
             , B.pic AS writerPic
             , IF(C.feed_id IS NULL, 0, 1) AS isLike
          FROM feed A
         INNER JOIN user B
            ON A.writer_user_id = B.user_id

            AND B.user_id = 2

        LEFT JOIN feed_like C
            ON A.feed_id = C.feed_id
           AND C.user_id = 1
         ORDER BY A.feed_id DESC
         LIMIT 0, 20
 {executed in 1 msec}
[2024-12-10 09:44:46 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|--------|---------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|feed_id |contents |location |created_at          |user_id |writernm |pic                                      |islike |
|--------|---------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|5       |123      |중앙로      |2024-11-29 10:36:12 |2       |홍길동      |6d88f58a-0c38-4010-b703-3ccb187071d8.jpg |0      |
|--------|---------|---------|--------------------|--------|---------|-----------------------------------------|-------|

[2024-12-10 09:44:46 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
          FROM feed_pic
         WHERE feed_id = 5
 {executed in 1 msec}
[2024-12-10 09:44:46 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|675d9f82-0c18-4f6e-91a3-9858129aeb7e.jpg |
|c95cc439-e1e7-40f4-81fa-013b069631ca.jpg |
|f490d2ad-c64d-4006-a74a-8235888e3e87.jpg |
|-----------------------------------------|

[2024-12-10 09:44:46 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , B.user_id AS writerUserId
             , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
             , B.pic AS writerPic
          FROM feed_comment A
         INNER JOIN user B
            ON A.user_id = B.user_id
         WHERE A.feed_id = 5
         ORDER BY A.feed_comment_id DESC
         LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 09:44:46 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 09:44:49 INFO http-nio-8080-exec-8] [com.green.greengram.user.UserController] UserController > getUserInfo > p : UserInfoGetReq(signedUserId=1, profileUserId=2)
[2024-12-10 09:44:49 INFO http-nio-8080-exec-9] [com.green.greengram.feed.FeedController] FeedController > getFeedList > p: FeedGetReq(super=Paging(page=2, size=20, startIdx=20), signedUserId=1, profileUserId=1)
[2024-12-10 09:44:49 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.user_id AS userId, A.pic, A.created_at AS createdAt
        , IF(A.nick_name IS NULL, A.uid, A.nick_name) AS nickName
        , COUNT(DISTINCT F1.from_user_id, F1.to_user_id) AS `follower`
        , COUNT(DISTINCT F2.from_user_id, F2.to_user_id) AS `following`
        , COUNT(DISTINCT F3.feed_id) AS feedCount
        , COUNT(DISTINCT F4.feed_id, F4.user_id) AS myFeedLikeCount
        , MAX(IF(F1.from_user_id = 1, 1, 0))
        + MAX(IF(F2.to_user_id = 1, 2, 0)) AS followState
        FROM user A
        LEFT JOIN user_follow F1
        ON A.user_id = F1.to_user_id
        LEFT JOIN user_follow F2
        ON A.user_id = F2.from_user_id
        LEFT JOIN feed F3
        ON A.user_id = F3.writer_user_id
        LEFT JOIN feed_like F4
        ON F3.feed_id = F4.feed_id
        WHERE A.user_id = 2;
 {executed in 1 msec}
[2024-12-10 09:44:49 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT A.feed_id AS feedId, A.contents, A.location
             , A.created_at AS createdAt
             , B.user_id AS writerUserId
             , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
             , B.pic AS writerPic
             , IF(C.feed_id IS NULL, 0, 1) AS isLike
          FROM feed A
         INNER JOIN user B
            ON A.writer_user_id = B.user_id

            AND B.user_id = 1

        LEFT JOIN feed_like C
            ON A.feed_id = C.feed_id
           AND C.user_id = 1
         ORDER BY A.feed_id DESC
         LIMIT 20, 20
 {executed in 1 msec}
[2024-12-10 09:44:49 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|--------|-----------------------------------------|--------------------|---------|---------|----------|----------|----------------|------------|
|user_id |pic                                      |created_at          |nickname |follower |following |feedcount |myfeedlikecount |followstate |
|--------|-----------------------------------------|--------------------|---------|---------|----------|----------|----------------|------------|
|2       |6d88f58a-0c38-4010-b703-3ccb187071d8.jpg |2024-11-28 13:14:39 |홍길동      |1        |0         |1         |1               |1           |
|--------|-----------------------------------------|--------------------|---------|---------|----------|----------|----------------|------------|

[2024-12-10 09:44:49 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|---------|---------|-----------|--------|---------|----|-------|
|feed_id |contents |location |created_at |user_id |writernm |pic |islike |
|--------|---------|---------|-----------|--------|---------|----|-------|
|--------|---------|---------|-----------|--------|---------|----|-------|

[2024-12-10 09:44:51 INFO http-nio-8080-exec-5] [com.green.greengram.feed.FeedController] FeedController > getFeedList > p: FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=1, profileUserId=null)
[2024-12-10 09:44:51 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId, A.contents, A.location
             , A.created_at AS createdAt
             , B.user_id AS writerUserId
             , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
             , B.pic AS writerPic
             , IF(C.feed_id IS NULL, 0, 1) AS isLike
          FROM feed A
         INNER JOIN user B
            ON A.writer_user_id = B.user_id

        LEFT JOIN feed_like C
            ON A.feed_id = C.feed_id
           AND C.user_id = 1
         ORDER BY A.feed_id DESC
         LIMIT 0, 20
 {executed in 0 msec}
[2024-12-10 09:44:51 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|--------|---------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|feed_id |contents |location |created_at          |user_id |writernm |pic                                      |islike |
|--------|---------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|22      |         |         |2024-12-09 16:30:06 |6       |8        |292cc9ec-541d-454e-beda-2233f6bb26b2.gif |0      |
|21      |         |         |2024-12-09 16:29:56 |6       |8        |292cc9ec-541d-454e-beda-2233f6bb26b2.gif |0      |
|19      |         |         |2024-12-09 11:54:50 |6       |8        |292cc9ec-541d-454e-beda-2233f6bb26b2.gif |1      |
|18      |         |         |2024-12-06 12:45:10 |6       |8        |292cc9ec-541d-454e-beda-2233f6bb26b2.gif |1      |
|5       |123      |중앙로      |2024-11-29 10:36:12 |2       |홍길동      |6d88f58a-0c38-4010-b703-3ccb187071d8.jpg |0      |
|--------|---------|---------|--------------------|--------|---------|-----------------------------------------|-------|

[2024-12-10 09:44:51 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
          FROM feed_pic
         WHERE feed_id = 22
 {executed in 0 msec}
[2024-12-10 09:44:51 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|71b713ca-7094-4c0a-939c-29d119340ee6.gif |
|-----------------------------------------|

[2024-12-10 09:44:51 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , B.user_id AS writerUserId
             , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
             , B.pic AS writerPic
          FROM feed_comment A
         INNER JOIN user B
            ON A.user_id = B.user_id
         WHERE A.feed_id = 22
         ORDER BY A.feed_comment_id DESC
         LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 09:44:51 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 09:44:51 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
          FROM feed_pic
         WHERE feed_id = 21
 {executed in 0 msec}
[2024-12-10 09:44:51 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|6d6e94d5-499f-454f-aa08-d40373161e86.gif |
|-----------------------------------------|

[2024-12-10 09:44:51 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , B.user_id AS writerUserId
             , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
             , B.pic AS writerPic
          FROM feed_comment A
         INNER JOIN user B
            ON A.user_id = B.user_id
         WHERE A.feed_id = 21
         ORDER BY A.feed_comment_id DESC
         LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 09:44:51 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 09:44:51 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
          FROM feed_pic
         WHERE feed_id = 19
 {executed in 0 msec}
[2024-12-10 09:44:51 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|83e83807-46f8-4040-8f70-667accd3c76f.gif |
|-----------------------------------------|

[2024-12-10 09:44:51 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , B.user_id AS writerUserId
             , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
             , B.pic AS writerPic
          FROM feed_comment A
         INNER JOIN user B
            ON A.user_id = B.user_id
         WHERE A.feed_id = 19
         ORDER BY A.feed_comment_id DESC
         LIMIT 0, 4
 {executed in 1 msec}
[2024-12-10 09:44:51 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 09:44:51 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
          FROM feed_pic
         WHERE feed_id = 18
 {executed in 0 msec}
[2024-12-10 09:44:51 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a773e1e8-508b-4ce5-8c6f-e3af220615dc.gif |
|-----------------------------------------|

[2024-12-10 09:44:51 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , B.user_id AS writerUserId
             , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
             , B.pic AS writerPic
          FROM feed_comment A
         INNER JOIN user B
            ON A.user_id = B.user_id
         WHERE A.feed_id = 18
         ORDER BY A.feed_comment_id DESC
         LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 09:44:51 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 09:44:51 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
          FROM feed_pic
         WHERE feed_id = 5
 {executed in 0 msec}
[2024-12-10 09:44:51 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|675d9f82-0c18-4f6e-91a3-9858129aeb7e.jpg |
|c95cc439-e1e7-40f4-81fa-013b069631ca.jpg |
|f490d2ad-c64d-4006-a74a-8235888e3e87.jpg |
|-----------------------------------------|

[2024-12-10 09:44:51 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , B.user_id AS writerUserId
             , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
             , B.pic AS writerPic
          FROM feed_comment A
         INNER JOIN user B
            ON A.user_id = B.user_id
         WHERE A.feed_id = 5
         ORDER BY A.feed_comment_id DESC
         LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 09:44:51 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 10:32:52 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. INSERT INTO feed
           SET writer_user_id = 1
             , contents = ''
             , location = ''
 {executed in 0 msec}
[2024-12-10 10:32:52 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
11. getGeneratedKeys on query: INSERT INTO feed
           SET writer_user_id = 1
             , contents = ''
             , location = ''
 {executed in 0 msec}
[2024-12-10 10:32:52 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------|
|insert_id |
|----------|
|23        |
|----------|

[2024-12-10 10:32:52 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. INSERT INTO feed_pic
        ( feed_id, pic )
        VALUES
         (  
            23, 'fc832a2b-b79a-4c20-bbbb-172a705de2d1.jpg'
         )
 {executed in 1 msec}
[2024-12-10 10:32:55 WARN http-nio-8080-exec-3] [org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver] Resolved [org.springframework.web.multipart.support.MissingServletRequestPartException: Required part 'pics' is not present.]
[2024-12-10 10:32:59 WARN http-nio-8080-exec-6] [org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver] Resolved [org.springframework.web.multipart.support.MissingServletRequestPartException: Required part 'pics' is not present.]
[2024-12-10 10:33:00 WARN http-nio-8080-exec-1] [org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver] Resolved [org.springframework.web.multipart.support.MissingServletRequestPartException: Required part 'pics' is not present.]
[2024-12-10 10:33:00 WARN http-nio-8080-exec-5] [org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver] Resolved [org.springframework.web.multipart.support.MissingServletRequestPartException: Required part 'pics' is not present.]
[2024-12-10 10:33:00 WARN http-nio-8080-exec-2] [org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver] Resolved [org.springframework.web.multipart.support.MissingServletRequestPartException: Required part 'pics' is not present.]
[2024-12-10 10:33:00 WARN http-nio-8080-exec-10] [org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver] Resolved [org.springframework.web.multipart.support.MissingServletRequestPartException: Required part 'pics' is not present.]
[2024-12-10 10:33:00 WARN http-nio-8080-exec-7] [org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver] Resolved [org.springframework.web.multipart.support.MissingServletRequestPartException: Required part 'pics' is not present.]
[2024-12-10 10:33:01 WARN http-nio-8080-exec-4] [org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver] Resolved [org.springframework.web.multipart.support.MissingServletRequestPartException: Required part 'pics' is not present.]
[2024-12-10 10:33:01 WARN http-nio-8080-exec-8] [org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver] Resolved [org.springframework.web.multipart.support.MissingServletRequestPartException: Required part 'pics' is not present.]
[2024-12-10 10:33:01 WARN http-nio-8080-exec-9] [org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver] Resolved [org.springframework.web.multipart.support.MissingServletRequestPartException: Required part 'pics' is not present.]
[2024-12-10 10:33:01 WARN http-nio-8080-exec-3] [org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver] Resolved [org.springframework.web.multipart.support.MissingServletRequestPartException: Required part 'pics' is not present.]
[2024-12-10 10:33:05 INFO http-nio-8080-exec-6] [com.green.greengram.feed.like.FeedLikeController] FeedLikeController > feedLikeToggle > p: com.green.greengram.feed.like.model.FeedLikeReq@4f99b1e5
[2024-12-10 10:33:05 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. DELETE FROM feed_like
         WHERE feed_id = 23
           AND user_id = 1
 {executed in 0 msec}
[2024-12-10 10:33:05 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. INSERT INTO feed_like
           SET feed_id = 23
             , user_id = 1
 {executed in 2 msec}
[2024-12-10 10:33:10 INFO http-nio-8080-exec-1] [com.green.greengram.feed.comment.FeedCommentController] FeedCommentController > postFeedComment > p: FeedCommentPostReq(feedCommentId=0, feedId=23, userId=1, comment=누나 취향)
[2024-12-10 10:33:10 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. INSERT INTO feed_comment
           SET `feed_id` = 23
             , `user_id` = 1
             , `comment` = '누나 취향'
 {executed in 2 msec}
[2024-12-10 10:33:10 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
11. getGeneratedKeys on query: INSERT INTO feed_comment
           SET `feed_id` = 23
             , `user_id` = 1
             , `comment` = '누나 취향'
 {executed in 0 msec}
[2024-12-10 10:33:10 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------|
|insert_id |
|----------|
|75        |
|----------|

[2024-12-10 10:33:38 INFO http-nio-8080-exec-2] [com.green.greengram.user.UserController] UserController > getUserInfo > p : UserInfoGetReq(signedUserId=1, profileUserId=1)
[2024-12-10 10:33:38 INFO http-nio-8080-exec-10] [com.green.greengram.feed.FeedController] FeedController > getFeedList > p: FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=1, profileUserId=1)
[2024-12-10 10:33:38 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT A.user_id AS userId, A.pic, A.created_at AS createdAt
        , IF(A.nick_name IS NULL, A.uid, A.nick_name) AS nickName
        , COUNT(DISTINCT F1.from_user_id, F1.to_user_id) AS `follower`
        , COUNT(DISTINCT F2.from_user_id, F2.to_user_id) AS `following`
        , COUNT(DISTINCT F3.feed_id) AS feedCount
        , COUNT(DISTINCT F4.feed_id, F4.user_id) AS myFeedLikeCount
        , MAX(IF(F1.from_user_id = 1, 1, 0))
        + MAX(IF(F2.to_user_id = 1, 2, 0)) AS followState
        FROM user A
        LEFT JOIN user_follow F1
        ON A.user_id = F1.to_user_id
        LEFT JOIN user_follow F2
        ON A.user_id = F2.from_user_id
        LEFT JOIN feed F3
        ON A.user_id = F3.writer_user_id
        LEFT JOIN feed_like F4
        ON F3.feed_id = F4.feed_id
        WHERE A.user_id = 1;
 {executed in 1 msec}
[2024-12-10 10:33:38 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
12. SELECT A.feed_id AS feedId, A.contents, A.location
             , A.created_at AS createdAt
             , B.user_id AS writerUserId
             , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
             , B.pic AS writerPic
             , IF(C.feed_id IS NULL, 0, 1) AS isLike
          FROM feed A
         INNER JOIN user B
            ON A.writer_user_id = B.user_id

            AND B.user_id = 1

        LEFT JOIN feed_like C
            ON A.feed_id = C.feed_id
           AND C.user_id = 1
         ORDER BY A.feed_id DESC
         LIMIT 0, 20
 {executed in 0 msec}
[2024-12-10 10:33:38 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|--------|-----------------------------------------|--------------------|---------|---------|----------|----------|----------------|------------|
|user_id |pic                                      |created_at          |nickname |follower |following |feedcount |myfeedlikecount |followstate |
|--------|-----------------------------------------|--------------------|---------|---------|----------|----------|----------------|------------|
|1       |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |2024-11-28 12:39:46 |123456   |2        |3         |1         |1               |0           |
|--------|-----------------------------------------|--------------------|---------|---------|----------|----------|----------------|------------|

[2024-12-10 10:33:38 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|--------|---------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|feed_id |contents |location |created_at          |user_id |writernm |pic                                      |islike |
|--------|---------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|23      |         |         |2024-12-10 10:32:52 |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |1      |
|--------|---------|---------|--------------------|--------|---------|-----------------------------------------|-------|

[2024-12-10 10:33:38 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
12. SELECT pic
          FROM feed_pic
         WHERE feed_id = 23
 {executed in 0 msec}
[2024-12-10 10:33:38 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|fc832a2b-b79a-4c20-bbbb-172a705de2d1.jpg |
|-----------------------------------------|

[2024-12-10 10:33:38 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
12. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , B.user_id AS writerUserId
             , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
             , B.pic AS writerPic
          FROM feed_comment A
         INNER JOIN user B
            ON A.user_id = B.user_id
         WHERE A.feed_id = 23
         ORDER BY A.feed_comment_id DESC
         LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 10:33:38 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|75              |누나 취향   |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-10 10:33:39 INFO http-nio-8080-exec-4] [com.green.greengram.feed.FeedController] FeedController > deleteFeed > p: com.green.greengram.feed.model.FeedDeleteReq@731b575a
[2024-12-10 10:33:39 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. DELETE B, C, D
        FROM feed A
        LEFT JOIN feed_like B
        ON A.feed_id = B.feed_id
        LEFT JOIN feed_comment C
        ON A.feed_id = C.feed_id
        LEFT JOIN feed_pic D
        ON A.feed_id = D.feed_id
        WHERE A.feed_id = 23
        AND A.writer_user_id = 1
 {executed in 1 msec}
[2024-12-10 10:33:39 INFO http-nio-8080-exec-4] [com.green.greengram.feed.FeedService] affectedRows: 3
[2024-12-10 10:33:39 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. DELETE FROM feed
        WHERE feed_id = 23
        AND writer_user_id = 1
 {executed in 0 msec}
[2024-12-10 10:33:40 INFO http-nio-8080-exec-9] [com.green.greengram.feed.FeedController] FeedController > getFeedList > p: FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=1, profileUserId=null)
[2024-12-10 10:33:40 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT A.feed_id AS feedId, A.contents, A.location
             , A.created_at AS createdAt
             , B.user_id AS writerUserId
             , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
             , B.pic AS writerPic
             , IF(C.feed_id IS NULL, 0, 1) AS isLike
          FROM feed A
         INNER JOIN user B
            ON A.writer_user_id = B.user_id

        LEFT JOIN feed_like C
            ON A.feed_id = C.feed_id
           AND C.user_id = 1
         ORDER BY A.feed_id DESC
         LIMIT 0, 20
 {executed in 1 msec}
[2024-12-10 10:33:40 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|---------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|feed_id |contents |location |created_at          |user_id |writernm |pic                                      |islike |
|--------|---------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|22      |         |         |2024-12-09 16:30:06 |6       |8        |292cc9ec-541d-454e-beda-2233f6bb26b2.gif |0      |
|21      |         |         |2024-12-09 16:29:56 |6       |8        |292cc9ec-541d-454e-beda-2233f6bb26b2.gif |0      |
|19      |         |         |2024-12-09 11:54:50 |6       |8        |292cc9ec-541d-454e-beda-2233f6bb26b2.gif |1      |
|18      |         |         |2024-12-06 12:45:10 |6       |8        |292cc9ec-541d-454e-beda-2233f6bb26b2.gif |1      |
|5       |123      |중앙로      |2024-11-29 10:36:12 |2       |홍길동      |6d88f58a-0c38-4010-b703-3ccb187071d8.jpg |0      |
|--------|---------|---------|--------------------|--------|---------|-----------------------------------------|-------|

[2024-12-10 10:33:40 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT pic
          FROM feed_pic
         WHERE feed_id = 22
 {executed in 1 msec}
[2024-12-10 10:33:40 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|71b713ca-7094-4c0a-939c-29d119340ee6.gif |
|-----------------------------------------|

[2024-12-10 10:33:40 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , B.user_id AS writerUserId
             , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
             , B.pic AS writerPic
          FROM feed_comment A
         INNER JOIN user B
            ON A.user_id = B.user_id
         WHERE A.feed_id = 22
         ORDER BY A.feed_comment_id DESC
         LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 10:33:40 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 10:33:40 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT pic
          FROM feed_pic
         WHERE feed_id = 21
 {executed in 0 msec}
[2024-12-10 10:33:40 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|6d6e94d5-499f-454f-aa08-d40373161e86.gif |
|-----------------------------------------|

[2024-12-10 10:33:40 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , B.user_id AS writerUserId
             , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
             , B.pic AS writerPic
          FROM feed_comment A
         INNER JOIN user B
            ON A.user_id = B.user_id
         WHERE A.feed_id = 21
         ORDER BY A.feed_comment_id DESC
         LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 10:33:40 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 10:33:40 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT pic
          FROM feed_pic
         WHERE feed_id = 19
 {executed in 0 msec}
[2024-12-10 10:33:40 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|83e83807-46f8-4040-8f70-667accd3c76f.gif |
|-----------------------------------------|

[2024-12-10 10:33:40 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , B.user_id AS writerUserId
             , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
             , B.pic AS writerPic
          FROM feed_comment A
         INNER JOIN user B
            ON A.user_id = B.user_id
         WHERE A.feed_id = 19
         ORDER BY A.feed_comment_id DESC
         LIMIT 0, 4
 {executed in 1 msec}
[2024-12-10 10:33:40 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 10:33:40 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT pic
          FROM feed_pic
         WHERE feed_id = 18
 {executed in 0 msec}
[2024-12-10 10:33:40 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a773e1e8-508b-4ce5-8c6f-e3af220615dc.gif |
|-----------------------------------------|

[2024-12-10 10:33:40 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , B.user_id AS writerUserId
             , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
             , B.pic AS writerPic
          FROM feed_comment A
         INNER JOIN user B
            ON A.user_id = B.user_id
         WHERE A.feed_id = 18
         ORDER BY A.feed_comment_id DESC
         LIMIT 0, 4
 {executed in 1 msec}
[2024-12-10 10:33:40 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 10:33:40 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT pic
          FROM feed_pic
         WHERE feed_id = 5
 {executed in 0 msec}
[2024-12-10 10:33:40 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|675d9f82-0c18-4f6e-91a3-9858129aeb7e.jpg |
|c95cc439-e1e7-40f4-81fa-013b069631ca.jpg |
|f490d2ad-c64d-4006-a74a-8235888e3e87.jpg |
|-----------------------------------------|

[2024-12-10 10:33:40 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , B.user_id AS writerUserId
             , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
             , B.pic AS writerPic
          FROM feed_comment A
         INNER JOIN user B
            ON A.user_id = B.user_id
         WHERE A.feed_id = 5
         ORDER BY A.feed_comment_id DESC
         LIMIT 0, 4
 {executed in 1 msec}
[2024-12-10 10:33:40 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 10:42:16 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown initiated...
[2024-12-10 10:42:16 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown completed.
[2024-12-10 10:42:18 INFO restartedMain] [com.green.greengram.GreenGramApplication] Starting GreenGramVer3Application using Java 17.0.12 with PID 10328 (D:\BHB\GreenGramVer3\build\classes\java\main started by Administrator in D:\BHB\GreenGramVer3)
[2024-12-10 10:42:18 INFO restartedMain] [com.green.greengram.GreenGramApplication] No active profile set, falling back to 1 default profile: "default"
[2024-12-10 10:42:18 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-10 10:42:18 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-10 10:42:19 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-10 10:42:19 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-10 10:42:19 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-10 10:42:19 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-10 10:42:19 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-10 10:42:19 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 883 ms
[2024-12-10 10:42:19 INFO restartedMain] [com.green.greengram.common.MyFileUtils] MyFileUtils - 생성자: D:\BHB\download\greengram_ver3
[2024-12-10 10:42:19 INFO restartedMain] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Starting...
[2024-12-10 10:42:19 INFO restartedMain] [com.zaxxer.hikari.pool.HikariPool] HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@52d71fb5
[2024-12-10 10:42:19 INFO restartedMain] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Start completed.
[2024-12-10 10:42:20 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-10 10:42:20 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-10 10:42:20 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-10 10:42:20 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-10 10:42:20 INFO restartedMain] [com.green.greengram.GreenGramApplication] Started GreenGramVer3Application in 1.979 seconds (process running for 2.504)
[2024-12-10 10:42:54 INFO http-nio-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring DispatcherServlet 'dispatcherServlet'
[2024-12-10 10:42:54 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[2024-12-10 10:42:54 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Completed initialization in 1 ms
[2024-12-10 10:42:54 INFO http-nio-8080-exec-6] [com.green.greengram.feed.FeedController] FeedController > getFeedList > p: FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=1, profileUserId=null)
[2024-12-10 10:42:54 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId, A.contents, A.location
             , A.created_at AS createdAt
             , B.user_id AS writerUserId
             , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
             , B.pic AS writerPic
             , IF(C.feed_id IS NULL, 0, 1) AS isLike
          FROM feed A
         INNER JOIN user B
            ON A.writer_user_id = B.user_id

        LEFT JOIN feed_like C
            ON A.feed_id = C.feed_id
           AND C.user_id = 1
         ORDER BY A.feed_id DESC
         LIMIT 0, 20
 {executed in 1 msec}
[2024-12-10 10:42:54 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|--------|---------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|feed_id |contents |location |created_at          |user_id |writernm |pic                                      |islike |
|--------|---------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|22      |         |         |2024-12-09 16:30:06 |6       |8        |292cc9ec-541d-454e-beda-2233f6bb26b2.gif |0      |
|21      |         |         |2024-12-09 16:29:56 |6       |8        |292cc9ec-541d-454e-beda-2233f6bb26b2.gif |0      |
|19      |         |         |2024-12-09 11:54:50 |6       |8        |292cc9ec-541d-454e-beda-2233f6bb26b2.gif |1      |
|18      |         |         |2024-12-06 12:45:10 |6       |8        |292cc9ec-541d-454e-beda-2233f6bb26b2.gif |1      |
|5       |123      |중앙로      |2024-11-29 10:36:12 |2       |홍길동      |6d88f58a-0c38-4010-b703-3ccb187071d8.jpg |0      |
|--------|---------|---------|--------------------|--------|---------|-----------------------------------------|-------|

[2024-12-10 10:42:54 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
          FROM feed_pic
         WHERE feed_id = 22
 {executed in 1 msec}
[2024-12-10 10:42:54 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|71b713ca-7094-4c0a-939c-29d119340ee6.gif |
|-----------------------------------------|

[2024-12-10 10:42:54 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , B.user_id AS writerUserId
             , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
             , B.pic AS writerPic
          FROM feed_comment A
         INNER JOIN user B
            ON A.user_id = B.user_id
         WHERE A.feed_id = 22
         ORDER BY A.feed_comment_id DESC
         LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 10:42:54 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 10:42:54 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
          FROM feed_pic
         WHERE feed_id = 21
 {executed in 0 msec}
[2024-12-10 10:42:54 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|6d6e94d5-499f-454f-aa08-d40373161e86.gif |
|-----------------------------------------|

[2024-12-10 10:42:54 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , B.user_id AS writerUserId
             , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
             , B.pic AS writerPic
          FROM feed_comment A
         INNER JOIN user B
            ON A.user_id = B.user_id
         WHERE A.feed_id = 21
         ORDER BY A.feed_comment_id DESC
         LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 10:42:54 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 10:42:54 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
          FROM feed_pic
         WHERE feed_id = 19
 {executed in 0 msec}
[2024-12-10 10:42:54 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|83e83807-46f8-4040-8f70-667accd3c76f.gif |
|-----------------------------------------|

[2024-12-10 10:42:54 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , B.user_id AS writerUserId
             , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
             , B.pic AS writerPic
          FROM feed_comment A
         INNER JOIN user B
            ON A.user_id = B.user_id
         WHERE A.feed_id = 19
         ORDER BY A.feed_comment_id DESC
         LIMIT 0, 4
 {executed in 1 msec}
[2024-12-10 10:42:54 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 10:42:54 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
          FROM feed_pic
         WHERE feed_id = 18
 {executed in 0 msec}
[2024-12-10 10:42:54 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a773e1e8-508b-4ce5-8c6f-e3af220615dc.gif |
|-----------------------------------------|

[2024-12-10 10:42:54 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , B.user_id AS writerUserId
             , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
             , B.pic AS writerPic
          FROM feed_comment A
         INNER JOIN user B
            ON A.user_id = B.user_id
         WHERE A.feed_id = 18
         ORDER BY A.feed_comment_id DESC
         LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 10:42:54 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 10:42:54 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
          FROM feed_pic
         WHERE feed_id = 5
 {executed in 1 msec}
[2024-12-10 10:42:54 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|675d9f82-0c18-4f6e-91a3-9858129aeb7e.jpg |
|c95cc439-e1e7-40f4-81fa-013b069631ca.jpg |
|f490d2ad-c64d-4006-a74a-8235888e3e87.jpg |
|-----------------------------------------|

[2024-12-10 10:42:54 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , B.user_id AS writerUserId
             , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
             , B.pic AS writerPic
          FROM feed_comment A
         INNER JOIN user B
            ON A.user_id = B.user_id
         WHERE A.feed_id = 5
         ORDER BY A.feed_comment_id DESC
         LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 10:42:54 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 13:07:58 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown initiated...
[2024-12-10 13:07:58 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown completed.
[2024-12-10 15:34:43 INFO restartedMain] [com.green.greengram.GreenGramApplication] Starting GreenGramVer3Application using Java 17.0.12 with PID 3400 (D:\BHB\GreenGramVer3\build\classes\java\main started by Administrator in D:\BHB\GreenGramVer3)
[2024-12-10 15:34:43 INFO restartedMain] [com.green.greengram.GreenGramApplication] No active profile set, falling back to 1 default profile: "default"
[2024-12-10 15:34:43 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-10 15:34:43 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-10 15:34:44 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-10 15:34:44 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-10 15:34:44 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-10 15:34:44 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-10 15:34:44 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-10 15:34:44 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 895 ms
[2024-12-10 15:34:44 INFO restartedMain] [com.green.greengram.common.MyFileUtils] MyFileUtils - 생성자: D:\BHB\download\greengram_ver3
[2024-12-10 15:34:44 INFO restartedMain] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Starting...
[2024-12-10 15:34:44 INFO restartedMain] [com.zaxxer.hikari.pool.HikariPool] HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@726a41c1
[2024-12-10 15:34:44 INFO restartedMain] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Start completed.
[2024-12-10 15:34:44 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-10 15:34:44 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-10 15:34:44 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-10 15:34:44 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-10 15:34:45 INFO restartedMain] [com.green.greengram.GreenGramApplication] Started GreenGramVer3Application in 1.953 seconds (process running for 2.655)
[2024-12-10 15:34:52 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown initiated...
[2024-12-10 15:34:52 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown completed.
[2024-12-10 16:00:03 INFO restartedMain] [com.green.greengram.GreenGramApplication] Starting GreenGramVer3Application using Java 17.0.12 with PID 3600 (D:\BHB\GreenGramVer3\build\classes\java\main started by Administrator in D:\BHB\GreenGramVer3)
[2024-12-10 16:00:03 INFO restartedMain] [com.green.greengram.GreenGramApplication] No active profile set, falling back to 1 default profile: "default"
[2024-12-10 16:00:03 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-10 16:00:03 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-10 16:00:04 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-10 16:00:04 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-10 16:00:04 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-10 16:00:04 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-10 16:00:04 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-10 16:00:04 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 782 ms
[2024-12-10 16:00:04 INFO restartedMain] [com.green.greengram.common.MyFileUtils] MyFileUtils - 생성자: D:\BHB\download\greengram_ver3
[2024-12-10 16:00:04 INFO restartedMain] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Starting...
[2024-12-10 16:00:04 INFO restartedMain] [com.zaxxer.hikari.pool.HikariPool] HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@2596a20d
[2024-12-10 16:00:04 INFO restartedMain] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Start completed.
[2024-12-10 16:00:04 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-10 16:00:04 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-10 16:00:04 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-10 16:00:04 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-10 16:00:04 INFO restartedMain] [com.green.greengram.GreenGramApplication] Started GreenGramVer3Application in 1.732 seconds (process running for 2.08)
[2024-12-10 16:27:06 INFO http-nio-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring DispatcherServlet 'dispatcherServlet'
[2024-12-10 16:27:06 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[2024-12-10 16:27:06 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Completed initialization in 0 ms
[2024-12-10 16:27:06 INFO http-nio-8080-exec-1] [com.green.greengram.feed.like.FeedLikeController] FeedLikeController > feedLikeToggle > p: com.green.greengram.feed.like.model.FeedLikeReq@578584d8
[2024-12-10 16:27:06 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. DELETE FROM feed_like
         WHERE feed_id = 22
           AND user_id = 1
 {executed in 15 msec}
[2024-12-10 16:27:06 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO feed_like
           SET feed_id = 22
             , user_id = 1
 {executed in 3 msec}
[2024-12-10 16:27:08 INFO http-nio-8080-exec-5] [com.green.greengram.feed.like.FeedLikeController] FeedLikeController > feedLikeToggle > p: com.green.greengram.feed.like.model.FeedLikeReq@431f7d01
[2024-12-10 16:27:08 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. DELETE FROM feed_like
         WHERE feed_id = 21
           AND user_id = 1
 {executed in 0 msec}
[2024-12-10 16:27:08 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO feed_like
           SET feed_id = 21
             , user_id = 1
 {executed in 0 msec}
[2024-12-10 16:27:13 INFO http-nio-8080-exec-8] [com.green.greengram.feed.comment.FeedCommentController] FeedCommentController > postFeedComment > p: FeedCommentPostReq(feedCommentId=0, feedId=22, userId=1, comment=댓)
[2024-12-10 16:27:13 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO feed_comment
           SET `feed_id` = 22
             , `user_id` = 1
             , `comment` = '댓'
 {executed in 0 msec}
[2024-12-10 16:27:13 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
1. getGeneratedKeys on query: INSERT INTO feed_comment
           SET `feed_id` = 22
             , `user_id` = 1
             , `comment` = '댓'
 {executed in 0 msec}
[2024-12-10 16:27:13 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------|
|insert_id |
|----------|
|76        |
|----------|

[2024-12-10 16:27:14 INFO http-nio-8080-exec-10] [com.green.greengram.feed.comment.FeedCommentController] FeedCommentController > postFeedComment > p: FeedCommentPostReq(feedCommentId=0, feedId=22, userId=1, comment=글)
[2024-12-10 16:27:14 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO feed_comment
           SET `feed_id` = 22
             , `user_id` = 1
             , `comment` = '글'
 {executed in 3 msec}
[2024-12-10 16:27:14 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
1. getGeneratedKeys on query: INSERT INTO feed_comment
           SET `feed_id` = 22
             , `user_id` = 1
             , `comment` = '글'
 {executed in 0 msec}
[2024-12-10 16:27:14 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------|
|insert_id |
|----------|
|77        |
|----------|

[2024-12-10 16:27:15 INFO http-nio-8080-exec-2] [com.green.greengram.feed.comment.FeedCommentController] FeedCommentController > postFeedComment > p: FeedCommentPostReq(feedCommentId=0, feedId=22, userId=1, comment=있)
[2024-12-10 16:27:15 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO feed_comment
           SET `feed_id` = 22
             , `user_id` = 1
             , `comment` = '있'
 {executed in 0 msec}
[2024-12-10 16:27:15 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
1. getGeneratedKeys on query: INSERT INTO feed_comment
           SET `feed_id` = 22
             , `user_id` = 1
             , `comment` = '있'
 {executed in 0 msec}
[2024-12-10 16:27:15 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------|
|insert_id |
|----------|
|78        |
|----------|

[2024-12-10 16:27:16 INFO http-nio-8080-exec-6] [com.green.greengram.feed.comment.FeedCommentController] FeedCommentController > postFeedComment > p: FeedCommentPostReq(feedCommentId=0, feedId=22, userId=1, comment=어)
[2024-12-10 16:27:16 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO feed_comment
           SET `feed_id` = 22
             , `user_id` = 1
             , `comment` = '어'
 {executed in 2 msec}
[2024-12-10 16:27:16 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
1. getGeneratedKeys on query: INSERT INTO feed_comment
           SET `feed_id` = 22
             , `user_id` = 1
             , `comment` = '어'
 {executed in 0 msec}
[2024-12-10 16:27:16 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------|
|insert_id |
|----------|
|79        |
|----------|

[2024-12-10 16:27:16 INFO http-nio-8080-exec-7] [com.green.greengram.feed.comment.FeedCommentController] FeedCommentController > postFeedComment > p: FeedCommentPostReq(feedCommentId=0, feedId=22, userId=1, comment=야)
[2024-12-10 16:27:16 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO feed_comment
           SET `feed_id` = 22
             , `user_id` = 1
             , `comment` = '야'
 {executed in 2 msec}
[2024-12-10 16:27:16 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
1. getGeneratedKeys on query: INSERT INTO feed_comment
           SET `feed_id` = 22
             , `user_id` = 1
             , `comment` = '야'
 {executed in 0 msec}
[2024-12-10 16:27:16 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------|
|insert_id |
|----------|
|80        |
|----------|

[2024-12-10 16:27:17 INFO http-nio-8080-exec-3] [com.green.greengram.feed.comment.FeedCommentController] FeedCommentController > postFeedComment > p: FeedCommentPostReq(feedCommentId=0, feedId=22, userId=1, comment=함)
[2024-12-10 16:27:17 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO feed_comment
           SET `feed_id` = 22
             , `user_id` = 1
             , `comment` = '함'
 {executed in 2 msec}
[2024-12-10 16:27:17 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
1. getGeneratedKeys on query: INSERT INTO feed_comment
           SET `feed_id` = 22
             , `user_id` = 1
             , `comment` = '함'
 {executed in 0 msec}
[2024-12-10 16:27:17 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------|
|insert_id |
|----------|
|81        |
|----------|

[2024-12-10 16:27:20 INFO http-nio-8080-exec-9] [com.green.greengram.feed.comment.FeedCommentController] FeedCommentController > postFeedComment > p: FeedCommentPostReq(feedCommentId=0, feedId=21, userId=1, comment=댓)
[2024-12-10 16:27:20 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO feed_comment
           SET `feed_id` = 21
             , `user_id` = 1
             , `comment` = '댓'
 {executed in 2 msec}
[2024-12-10 16:27:20 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
1. getGeneratedKeys on query: INSERT INTO feed_comment
           SET `feed_id` = 21
             , `user_id` = 1
             , `comment` = '댓'
 {executed in 0 msec}
[2024-12-10 16:27:20 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------|
|insert_id |
|----------|
|82        |
|----------|

[2024-12-10 16:27:20 INFO http-nio-8080-exec-4] [com.green.greengram.feed.comment.FeedCommentController] FeedCommentController > postFeedComment > p: FeedCommentPostReq(feedCommentId=0, feedId=21, userId=1, comment=글)
[2024-12-10 16:27:20 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO feed_comment
           SET `feed_id` = 21
             , `user_id` = 1
             , `comment` = '글'
 {executed in 2 msec}
[2024-12-10 16:27:20 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
1. getGeneratedKeys on query: INSERT INTO feed_comment
           SET `feed_id` = 21
             , `user_id` = 1
             , `comment` = '글'
 {executed in 0 msec}
[2024-12-10 16:27:20 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------|
|insert_id |
|----------|
|83        |
|----------|

[2024-12-10 16:27:21 INFO http-nio-8080-exec-1] [com.green.greengram.feed.comment.FeedCommentController] FeedCommentController > postFeedComment > p: FeedCommentPostReq(feedCommentId=0, feedId=21, userId=1, comment=있)
[2024-12-10 16:27:21 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO feed_comment
           SET `feed_id` = 21
             , `user_id` = 1
             , `comment` = '있'
 {executed in 0 msec}
[2024-12-10 16:27:21 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
1. getGeneratedKeys on query: INSERT INTO feed_comment
           SET `feed_id` = 21
             , `user_id` = 1
             , `comment` = '있'
 {executed in 0 msec}
[2024-12-10 16:27:21 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------|
|insert_id |
|----------|
|84        |
|----------|

[2024-12-10 16:27:22 INFO http-nio-8080-exec-5] [com.green.greengram.feed.comment.FeedCommentController] FeedCommentController > postFeedComment > p: FeedCommentPostReq(feedCommentId=0, feedId=21, userId=1, comment=어)
[2024-12-10 16:27:22 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO feed_comment
           SET `feed_id` = 21
             , `user_id` = 1
             , `comment` = '어'
 {executed in 2 msec}
[2024-12-10 16:27:22 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
1. getGeneratedKeys on query: INSERT INTO feed_comment
           SET `feed_id` = 21
             , `user_id` = 1
             , `comment` = '어'
 {executed in 0 msec}
[2024-12-10 16:27:22 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------|
|insert_id |
|----------|
|85        |
|----------|

[2024-12-10 16:27:22 INFO http-nio-8080-exec-8] [com.green.greengram.feed.comment.FeedCommentController] FeedCommentController > postFeedComment > p: FeedCommentPostReq(feedCommentId=0, feedId=21, userId=1, comment=야)
[2024-12-10 16:27:22 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO feed_comment
           SET `feed_id` = 21
             , `user_id` = 1
             , `comment` = '야'
 {executed in 2 msec}
[2024-12-10 16:27:22 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
1. getGeneratedKeys on query: INSERT INTO feed_comment
           SET `feed_id` = 21
             , `user_id` = 1
             , `comment` = '야'
 {executed in 0 msec}
[2024-12-10 16:27:22 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------|
|insert_id |
|----------|
|86        |
|----------|

[2024-12-10 16:27:23 INFO http-nio-8080-exec-10] [com.green.greengram.feed.comment.FeedCommentController] FeedCommentController > postFeedComment > p: FeedCommentPostReq(feedCommentId=0, feedId=21, userId=1, comment=함)
[2024-12-10 16:27:23 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO feed_comment
           SET `feed_id` = 21
             , `user_id` = 1
             , `comment` = '함'
 {executed in 0 msec}
[2024-12-10 16:27:23 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
1. getGeneratedKeys on query: INSERT INTO feed_comment
           SET `feed_id` = 21
             , `user_id` = 1
             , `comment` = '함'
 {executed in 0 msec}
[2024-12-10 16:27:23 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------|
|insert_id |
|----------|
|87        |
|----------|

[2024-12-10 16:27:26 INFO http-nio-8080-exec-2] [com.green.greengram.feed.comment.FeedCommentController] FeedCommentController > postFeedComment > p: FeedCommentPostReq(feedCommentId=0, feedId=19, userId=1, comment=댓)
[2024-12-10 16:27:26 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO feed_comment
           SET `feed_id` = 19
             , `user_id` = 1
             , `comment` = '댓'
 {executed in 15 msec}
[2024-12-10 16:27:26 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
1. getGeneratedKeys on query: INSERT INTO feed_comment
           SET `feed_id` = 19
             , `user_id` = 1
             , `comment` = '댓'
 {executed in 0 msec}
[2024-12-10 16:27:26 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------|
|insert_id |
|----------|
|88        |
|----------|

[2024-12-10 16:27:26 INFO http-nio-8080-exec-6] [com.green.greengram.feed.comment.FeedCommentController] FeedCommentController > postFeedComment > p: FeedCommentPostReq(feedCommentId=0, feedId=19, userId=1, comment=글)
[2024-12-10 16:27:26 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO feed_comment
           SET `feed_id` = 19
             , `user_id` = 1
             , `comment` = '글'
 {executed in 3 msec}
[2024-12-10 16:27:26 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
1. getGeneratedKeys on query: INSERT INTO feed_comment
           SET `feed_id` = 19
             , `user_id` = 1
             , `comment` = '글'
 {executed in 0 msec}
[2024-12-10 16:27:26 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------|
|insert_id |
|----------|
|89        |
|----------|

[2024-12-10 16:27:27 INFO http-nio-8080-exec-7] [com.green.greengram.feed.comment.FeedCommentController] FeedCommentController > postFeedComment > p: FeedCommentPostReq(feedCommentId=0, feedId=19, userId=1, comment=있)
[2024-12-10 16:27:27 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO feed_comment
           SET `feed_id` = 19
             , `user_id` = 1
             , `comment` = '있'
 {executed in 3 msec}
[2024-12-10 16:27:27 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
1. getGeneratedKeys on query: INSERT INTO feed_comment
           SET `feed_id` = 19
             , `user_id` = 1
             , `comment` = '있'
 {executed in 0 msec}
[2024-12-10 16:27:27 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------|
|insert_id |
|----------|
|90        |
|----------|

[2024-12-10 16:27:27 INFO http-nio-8080-exec-3] [com.green.greengram.feed.comment.FeedCommentController] FeedCommentController > postFeedComment > p: FeedCommentPostReq(feedCommentId=0, feedId=19, userId=1, comment=어)
[2024-12-10 16:27:27 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO feed_comment
           SET `feed_id` = 19
             , `user_id` = 1
             , `comment` = '어'
 {executed in 0 msec}
[2024-12-10 16:27:28 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
1. getGeneratedKeys on query: INSERT INTO feed_comment
           SET `feed_id` = 19
             , `user_id` = 1
             , `comment` = '어'
 {executed in 0 msec}
[2024-12-10 16:27:28 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------|
|insert_id |
|----------|
|91        |
|----------|

[2024-12-10 16:27:28 INFO http-nio-8080-exec-9] [com.green.greengram.feed.comment.FeedCommentController] FeedCommentController > postFeedComment > p: FeedCommentPostReq(feedCommentId=0, feedId=19, userId=1, comment=야)
[2024-12-10 16:27:28 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO feed_comment
           SET `feed_id` = 19
             , `user_id` = 1
             , `comment` = '야'
 {executed in 17 msec}
[2024-12-10 16:27:28 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
1. getGeneratedKeys on query: INSERT INTO feed_comment
           SET `feed_id` = 19
             , `user_id` = 1
             , `comment` = '야'
 {executed in 0 msec}
[2024-12-10 16:27:28 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------|
|insert_id |
|----------|
|92        |
|----------|

[2024-12-10 16:27:28 INFO http-nio-8080-exec-4] [com.green.greengram.feed.comment.FeedCommentController] FeedCommentController > postFeedComment > p: FeedCommentPostReq(feedCommentId=0, feedId=19, userId=1, comment=함)
[2024-12-10 16:27:28 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO feed_comment
           SET `feed_id` = 19
             , `user_id` = 1
             , `comment` = '함'
 {executed in 0 msec}
[2024-12-10 16:27:28 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
1. getGeneratedKeys on query: INSERT INTO feed_comment
           SET `feed_id` = 19
             , `user_id` = 1
             , `comment` = '함'
 {executed in 0 msec}
[2024-12-10 16:27:29 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------|
|insert_id |
|----------|
|93        |
|----------|

[2024-12-10 16:27:31 INFO http-nio-8080-exec-7] [com.green.greengram.feed.FeedController] FeedController > getFeedList > p: FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=1, profileUserId=null)
[2024-12-10 16:27:31 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId, A.contents, A.location
             , A.created_at AS createdAt
             , B.user_id AS writerUserId
             , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
             , B.pic AS writerPic
             , IF(C.feed_id IS NULL, 0, 1) AS isLike
          FROM feed A
         INNER JOIN user B
            ON A.writer_user_id = B.user_id

        LEFT JOIN feed_like C
            ON A.feed_id = C.feed_id
           AND C.user_id = 1
         ORDER BY A.feed_id DESC
         LIMIT 0, 20
 {executed in 0 msec}
[2024-12-10 16:27:31 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|--------|---------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|feed_id |contents |location |created_at          |user_id |writernm |pic                                      |islike |
|--------|---------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|22      |         |         |2024-12-09 16:30:06 |6       |8        |292cc9ec-541d-454e-beda-2233f6bb26b2.gif |1      |
|21      |         |         |2024-12-09 16:29:56 |6       |8        |292cc9ec-541d-454e-beda-2233f6bb26b2.gif |1      |
|19      |         |         |2024-12-09 11:54:50 |6       |8        |292cc9ec-541d-454e-beda-2233f6bb26b2.gif |1      |
|18      |         |         |2024-12-06 12:45:10 |6       |8        |292cc9ec-541d-454e-beda-2233f6bb26b2.gif |1      |
|5       |123      |중앙로      |2024-11-29 10:36:12 |2       |홍길동      |6d88f58a-0c38-4010-b703-3ccb187071d8.jpg |0      |
|--------|---------|---------|--------------------|--------|---------|-----------------------------------------|-------|

[2024-12-10 16:27:31 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
          FROM feed_pic
         WHERE feed_id = 22
 {executed in 1 msec}
[2024-12-10 16:27:31 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|71b713ca-7094-4c0a-939c-29d119340ee6.gif |
|-----------------------------------------|

[2024-12-10 16:27:31 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , B.user_id AS writerUserId
             , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
             , B.pic AS writerPic
          FROM feed_comment A
         INNER JOIN user B
            ON A.user_id = B.user_id
         WHERE A.feed_id = 22
         ORDER BY A.feed_comment_id DESC
         LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 16:27:31 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|81              |함       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|80              |야       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|79              |어       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|78              |있       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-10 16:27:31 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
          FROM feed_pic
         WHERE feed_id = 21
 {executed in 0 msec}
[2024-12-10 16:27:31 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|6d6e94d5-499f-454f-aa08-d40373161e86.gif |
|-----------------------------------------|

[2024-12-10 16:27:31 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , B.user_id AS writerUserId
             , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
             , B.pic AS writerPic
          FROM feed_comment A
         INNER JOIN user B
            ON A.user_id = B.user_id
         WHERE A.feed_id = 21
         ORDER BY A.feed_comment_id DESC
         LIMIT 0, 4
 {executed in 1 msec}
[2024-12-10 16:27:31 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|87              |함       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|86              |야       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|85              |어       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|84              |있       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-10 16:27:31 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
          FROM feed_pic
         WHERE feed_id = 19
 {executed in 1 msec}
[2024-12-10 16:27:31 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|83e83807-46f8-4040-8f70-667accd3c76f.gif |
|-----------------------------------------|

[2024-12-10 16:27:31 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , B.user_id AS writerUserId
             , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
             , B.pic AS writerPic
          FROM feed_comment A
         INNER JOIN user B
            ON A.user_id = B.user_id
         WHERE A.feed_id = 19
         ORDER BY A.feed_comment_id DESC
         LIMIT 0, 4
 {executed in 1 msec}
[2024-12-10 16:27:31 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|93              |함       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|92              |야       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|91              |어       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|90              |있       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-10 16:27:31 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
          FROM feed_pic
         WHERE feed_id = 18
 {executed in 0 msec}
[2024-12-10 16:27:31 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a773e1e8-508b-4ce5-8c6f-e3af220615dc.gif |
|-----------------------------------------|

[2024-12-10 16:27:31 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , B.user_id AS writerUserId
             , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
             , B.pic AS writerPic
          FROM feed_comment A
         INNER JOIN user B
            ON A.user_id = B.user_id
         WHERE A.feed_id = 18
         ORDER BY A.feed_comment_id DESC
         LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 16:27:31 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 16:27:31 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
          FROM feed_pic
         WHERE feed_id = 5
 {executed in 0 msec}
[2024-12-10 16:27:31 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|675d9f82-0c18-4f6e-91a3-9858129aeb7e.jpg |
|c95cc439-e1e7-40f4-81fa-013b069631ca.jpg |
|f490d2ad-c64d-4006-a74a-8235888e3e87.jpg |
|-----------------------------------------|

[2024-12-10 16:27:31 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , B.user_id AS writerUserId
             , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
             , B.pic AS writerPic
          FROM feed_comment A
         INNER JOIN user B
            ON A.user_id = B.user_id
         WHERE A.feed_id = 5
         ORDER BY A.feed_comment_id DESC
         LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 16:27:31 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 16:50:10 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown initiated...
[2024-12-10 16:50:10 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown completed.
[2024-12-10 16:50:12 INFO restartedMain] [com.green.greengram.GreenGramApplication] Starting GreenGramVer3Application using Java 17.0.12 with PID 12696 (D:\BHB\GreenGramVer3\build\classes\java\main started by Administrator in D:\BHB\GreenGramVer3)
[2024-12-10 16:50:12 INFO restartedMain] [com.green.greengram.GreenGramApplication] No active profile set, falling back to 1 default profile: "default"
[2024-12-10 16:50:12 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-10 16:50:12 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-10 16:50:13 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-10 16:50:13 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-10 16:50:13 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-10 16:50:13 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-10 16:50:13 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-10 16:50:13 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 780 ms
[2024-12-10 16:50:13 INFO restartedMain] [com.green.greengram.common.MyFileUtils] MyFileUtils - 생성자: D:\BHB\download\greengram_ver3
[2024-12-10 16:50:13 INFO restartedMain] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Starting...
[2024-12-10 16:50:13 INFO restartedMain] [com.zaxxer.hikari.pool.HikariPool] HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@53541935
[2024-12-10 16:50:13 INFO restartedMain] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Start completed.
[2024-12-10 16:50:13 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-10 16:50:13 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-10 16:50:13 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-10 16:50:13 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-10 16:50:13 INFO restartedMain] [com.green.greengram.GreenGramApplication] Started GreenGramVer3Application in 1.733 seconds (process running for 2.094)
[2024-12-10 16:50:18 INFO http-nio-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring DispatcherServlet 'dispatcherServlet'
[2024-12-10 16:50:18 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[2024-12-10 16:50:18 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Completed initialization in 0 ms
[2024-12-10 16:50:18 INFO http-nio-8080-exec-4] [com.green.greengram.feed.FeedController] FeedController > getFeedList > p: FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=1, profileUserId=null)
[2024-12-10 16:50:18 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId, A.contents, A.location
             , A.created_at AS createdAt
             , B.user_id AS writerUserId
             , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
             , B.pic AS writerPic
             , IF(C.feed_id IS NULL, 0, 1) AS isLike
          FROM feed A
         INNER JOIN user B
            ON A.writer_user_id = B.user_id

        LEFT JOIN feed_like C
            ON A.feed_id = C.feed_id
           AND C.user_id = 1
         ORDER BY A.feed_id DESC
         LIMIT 0, 20
 {executed in 1 msec}
[2024-12-10 16:50:18 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|--------|---------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|feed_id |contents |location |created_at          |user_id |writernm |pic                                      |islike |
|--------|---------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|22      |         |         |2024-12-09 16:30:06 |6       |8        |292cc9ec-541d-454e-beda-2233f6bb26b2.gif |1      |
|21      |         |         |2024-12-09 16:29:56 |6       |8        |292cc9ec-541d-454e-beda-2233f6bb26b2.gif |1      |
|19      |         |         |2024-12-09 11:54:50 |6       |8        |292cc9ec-541d-454e-beda-2233f6bb26b2.gif |1      |
|18      |         |         |2024-12-06 12:45:10 |6       |8        |292cc9ec-541d-454e-beda-2233f6bb26b2.gif |1      |
|5       |123      |중앙로      |2024-11-29 10:36:12 |2       |홍길동      |6d88f58a-0c38-4010-b703-3ccb187071d8.jpg |0      |
|--------|---------|---------|--------------------|--------|---------|-----------------------------------------|-------|

[2024-12-10 16:50:18 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
          FROM feed_pic
         WHERE feed_id = 22
 {executed in 1 msec}
[2024-12-10 16:50:18 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|71b713ca-7094-4c0a-939c-29d119340ee6.gif |
|-----------------------------------------|

[2024-12-10 16:50:18 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , B.user_id AS writerUserId
             , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
             , B.pic AS writerPic
          FROM feed_comment A
         INNER JOIN user B
            ON A.user_id = B.user_id
         WHERE A.feed_id = 22
         ORDER BY A.feed_comment_id DESC
         LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 16:50:18 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|81              |함       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|80              |야       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|79              |어       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|78              |있       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-10 16:50:18 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
          FROM feed_pic
         WHERE feed_id = 21
 {executed in 0 msec}
[2024-12-10 16:50:18 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|6d6e94d5-499f-454f-aa08-d40373161e86.gif |
|-----------------------------------------|

[2024-12-10 16:50:18 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , B.user_id AS writerUserId
             , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
             , B.pic AS writerPic
          FROM feed_comment A
         INNER JOIN user B
            ON A.user_id = B.user_id
         WHERE A.feed_id = 21
         ORDER BY A.feed_comment_id DESC
         LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 16:50:18 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|87              |함       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|86              |야       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|85              |어       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|84              |있       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-10 16:50:18 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
          FROM feed_pic
         WHERE feed_id = 19
 {executed in 0 msec}
[2024-12-10 16:50:18 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|83e83807-46f8-4040-8f70-667accd3c76f.gif |
|-----------------------------------------|

[2024-12-10 16:50:18 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , B.user_id AS writerUserId
             , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
             , B.pic AS writerPic
          FROM feed_comment A
         INNER JOIN user B
            ON A.user_id = B.user_id
         WHERE A.feed_id = 19
         ORDER BY A.feed_comment_id DESC
         LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 16:50:18 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|93              |함       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|92              |야       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|91              |어       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|90              |있       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-10 16:50:18 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
          FROM feed_pic
         WHERE feed_id = 18
 {executed in 0 msec}
[2024-12-10 16:50:18 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a773e1e8-508b-4ce5-8c6f-e3af220615dc.gif |
|-----------------------------------------|

[2024-12-10 16:50:18 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , B.user_id AS writerUserId
             , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
             , B.pic AS writerPic
          FROM feed_comment A
         INNER JOIN user B
            ON A.user_id = B.user_id
         WHERE A.feed_id = 18
         ORDER BY A.feed_comment_id DESC
         LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 16:50:18 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 16:50:18 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
          FROM feed_pic
         WHERE feed_id = 5
 {executed in 0 msec}
[2024-12-10 16:50:18 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|675d9f82-0c18-4f6e-91a3-9858129aeb7e.jpg |
|c95cc439-e1e7-40f4-81fa-013b069631ca.jpg |
|f490d2ad-c64d-4006-a74a-8235888e3e87.jpg |
|-----------------------------------------|

[2024-12-10 16:50:18 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , B.user_id AS writerUserId
             , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
             , B.pic AS writerPic
          FROM feed_comment A
         INNER JOIN user B
            ON A.user_id = B.user_id
         WHERE A.feed_id = 5
         ORDER BY A.feed_comment_id DESC
         LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 16:50:18 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 16:50:20 INFO http-nio-8080-exec-2] [com.green.greengram.feed.comment.FeedCommentController] FeedCommentController > getFeedComment > p: FeedCommentGetReq(feedId=22, startIdx=3, size=21)
[2024-12-10 16:50:20 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , B.user_id AS writerUserId
             , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
             , B.pic AS writerPic
          FROM feed_comment A
         INNER JOIN user B
            ON A.user_id = B.user_id
         WHERE A.feed_id = 22
         ORDER BY A.feed_comment_id DESC
         LIMIT 3, 21
 {executed in 1 msec}
[2024-12-10 16:50:20 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|78              |있       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|77              |글       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|76              |댓       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-10 17:00:36 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown initiated...
[2024-12-10 17:00:36 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown completed.
[2024-12-10 17:00:45 INFO restartedMain] [com.green.greengram.GreenGramApplication] Starting GreenGramVer3Application using Java 17.0.12 with PID 1548 (D:\BHB\GreenGramVer3\build\classes\java\main started by Administrator in D:\BHB\GreenGramVer3)
[2024-12-10 17:00:45 INFO restartedMain] [com.green.greengram.GreenGramApplication] No active profile set, falling back to 1 default profile: "default"
[2024-12-10 17:00:45 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-10 17:00:45 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-10 17:00:46 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-10 17:00:46 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-10 17:00:46 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-10 17:00:46 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-10 17:00:46 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-10 17:00:46 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 779 ms
[2024-12-10 17:00:46 INFO restartedMain] [com.green.greengram.common.MyFileUtils] MyFileUtils - 생성자: D:\BHB\download\greengram_ver3
[2024-12-10 17:00:46 INFO restartedMain] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Starting...
[2024-12-10 17:00:46 INFO restartedMain] [com.zaxxer.hikari.pool.HikariPool] HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@6900d2e9
[2024-12-10 17:00:46 INFO restartedMain] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Start completed.
[2024-12-10 17:00:46 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-10 17:00:46 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-10 17:00:46 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-10 17:00:46 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-10 17:00:46 INFO restartedMain] [com.green.greengram.GreenGramApplication] Started GreenGramVer3Application in 1.732 seconds (process running for 2.079)
[2024-12-10 17:00:52 INFO http-nio-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring DispatcherServlet 'dispatcherServlet'
[2024-12-10 17:00:52 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[2024-12-10 17:00:52 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Completed initialization in 1 ms
[2024-12-10 17:00:52 INFO http-nio-8080-exec-6] [com.green.greengram.feed.FeedController] FeedController > getFeedList > p: FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=1, profileUserId=null)
[2024-12-10 17:00:52 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId, A.contents, A.location
             , A.created_at AS createdAt
             , B.user_id AS writerUserId
             , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
             , B.pic AS writerPic
             , IF(C.feed_id IS NULL, 0, 1) AS isLike
          FROM feed A
         INNER JOIN user B
            ON A.writer_user_id = B.user_id

        LEFT JOIN feed_like C
            ON A.feed_id = C.feed_id
           AND C.user_id = 1
         ORDER BY A.feed_id DESC
         LIMIT 0, 20
 {executed in 1 msec}
[2024-12-10 17:00:52 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|--------|---------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|feed_id |contents |location |created_at          |user_id |writernm |pic                                      |islike |
|--------|---------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|22      |         |         |2024-12-09 16:30:06 |6       |8        |292cc9ec-541d-454e-beda-2233f6bb26b2.gif |1      |
|21      |         |         |2024-12-09 16:29:56 |6       |8        |292cc9ec-541d-454e-beda-2233f6bb26b2.gif |1      |
|19      |         |         |2024-12-09 11:54:50 |6       |8        |292cc9ec-541d-454e-beda-2233f6bb26b2.gif |1      |
|18      |         |         |2024-12-06 12:45:10 |6       |8        |292cc9ec-541d-454e-beda-2233f6bb26b2.gif |1      |
|5       |123      |중앙로      |2024-11-29 10:36:12 |2       |홍길동      |6d88f58a-0c38-4010-b703-3ccb187071d8.jpg |0      |
|--------|---------|---------|--------------------|--------|---------|-----------------------------------------|-------|

[2024-12-10 17:00:52 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
          FROM feed_pic
         WHERE feed_id = 22
 {executed in 0 msec}
[2024-12-10 17:00:52 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|71b713ca-7094-4c0a-939c-29d119340ee6.gif |
|-----------------------------------------|

[2024-12-10 17:00:52 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , B.user_id AS writerUserId
             , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
             , B.pic AS writerPic
          FROM feed_comment A
         INNER JOIN user B
            ON A.user_id = B.user_id
         WHERE A.feed_id = 22
         ORDER BY A.feed_comment_id DESC
         LIMIT 0, 4
 {executed in 1 msec}
[2024-12-10 17:00:52 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|81              |함       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|80              |야       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|79              |어       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|78              |있       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-10 17:00:52 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
          FROM feed_pic
         WHERE feed_id = 21
 {executed in 1 msec}
[2024-12-10 17:00:52 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|6d6e94d5-499f-454f-aa08-d40373161e86.gif |
|-----------------------------------------|

[2024-12-10 17:00:52 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , B.user_id AS writerUserId
             , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
             , B.pic AS writerPic
          FROM feed_comment A
         INNER JOIN user B
            ON A.user_id = B.user_id
         WHERE A.feed_id = 21
         ORDER BY A.feed_comment_id DESC
         LIMIT 0, 4
 {executed in 1 msec}
[2024-12-10 17:00:52 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|87              |함       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|86              |야       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|85              |어       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|84              |있       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-10 17:00:52 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
          FROM feed_pic
         WHERE feed_id = 19
 {executed in 0 msec}
[2024-12-10 17:00:52 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|83e83807-46f8-4040-8f70-667accd3c76f.gif |
|-----------------------------------------|

[2024-12-10 17:00:52 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , B.user_id AS writerUserId
             , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
             , B.pic AS writerPic
          FROM feed_comment A
         INNER JOIN user B
            ON A.user_id = B.user_id
         WHERE A.feed_id = 19
         ORDER BY A.feed_comment_id DESC
         LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 17:00:52 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|93              |함       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|92              |야       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|91              |어       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|90              |있       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-10 17:00:52 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
          FROM feed_pic
         WHERE feed_id = 18
 {executed in 0 msec}
[2024-12-10 17:00:52 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a773e1e8-508b-4ce5-8c6f-e3af220615dc.gif |
|-----------------------------------------|

[2024-12-10 17:00:52 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , B.user_id AS writerUserId
             , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
             , B.pic AS writerPic
          FROM feed_comment A
         INNER JOIN user B
            ON A.user_id = B.user_id
         WHERE A.feed_id = 18
         ORDER BY A.feed_comment_id DESC
         LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 17:00:52 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 17:00:52 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
          FROM feed_pic
         WHERE feed_id = 5
 {executed in 0 msec}
[2024-12-10 17:00:52 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|675d9f82-0c18-4f6e-91a3-9858129aeb7e.jpg |
|c95cc439-e1e7-40f4-81fa-013b069631ca.jpg |
|f490d2ad-c64d-4006-a74a-8235888e3e87.jpg |
|-----------------------------------------|

[2024-12-10 17:00:52 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , B.user_id AS writerUserId
             , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
             , B.pic AS writerPic
          FROM feed_comment A
         INNER JOIN user B
            ON A.user_id = B.user_id
         WHERE A.feed_id = 5
         ORDER BY A.feed_comment_id DESC
         LIMIT 0, 4
 {executed in 1 msec}
[2024-12-10 17:00:52 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 17:00:55 INFO http-nio-8080-exec-9] [com.green.greengram.feed.comment.FeedCommentController] FeedCommentController > getFeedComment > p: FeedCommentGetReq(feedId=22, startIdx=3, size=21)
[2024-12-10 17:00:55 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , B.user_id AS writerUserId
             , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
             , B.pic AS writerPic
          FROM feed_comment A
         INNER JOIN user B
            ON A.user_id = B.user_id
         WHERE A.feed_id = 22
         ORDER BY A.feed_comment_id DESC
         LIMIT 3, 21
 {executed in 1 msec}
[2024-12-10 17:00:55 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|78              |있       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|77              |글       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|76              |댓       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-10 17:02:48 INFO File Watcher] [org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener] Restarting due to 1 class path change (0 additions, 0 deletions, 1 modification)
[2024-12-10 17:02:48 INFO Thread-5] [org.apache.coyote.http11.Http11NioProtocol] Stopping ProtocolHandler ["http-nio-8080"]
[2024-12-10 17:02:48 INFO Thread-5] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown initiated...
[2024-12-10 17:02:48 INFO Thread-5] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown completed.
[2024-12-10 17:02:49 INFO restartedMain] [com.green.greengram.GreenGramApplication] Starting GreenGramVer3Application using Java 17.0.12 with PID 1548 (D:\BHB\GreenGramVer3\build\classes\java\main started by Administrator in D:\BHB\GreenGramVer3)
[2024-12-10 17:02:49 INFO restartedMain] [com.green.greengram.GreenGramApplication] No active profile set, falling back to 1 default profile: "default"
[2024-12-10 17:02:49 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-10 17:02:49 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-10 17:02:49 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-10 17:02:49 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-10 17:02:49 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-10 17:02:49 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 217 ms
[2024-12-10 17:02:49 INFO restartedMain] [com.green.greengram.common.MyFileUtils] MyFileUtils - 생성자: D:\BHB\download\greengram_ver3
[2024-12-10 17:02:49 INFO restartedMain] [com.zaxxer.hikari.HikariDataSource] HikariPool-2 - Starting...
[2024-12-10 17:02:49 INFO restartedMain] [com.zaxxer.hikari.pool.HikariPool] HikariPool-2 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@5d23fbbb
[2024-12-10 17:02:49 INFO restartedMain] [com.zaxxer.hikari.HikariDataSource] HikariPool-2 - Start completed.
[2024-12-10 17:02:49 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-10 17:02:49 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-10 17:02:49 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-10 17:02:49 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-10 17:02:49 INFO restartedMain] [com.green.greengram.GreenGramApplication] Started GreenGramVer3Application in 0.391 seconds (process running for 124.532)
[2024-12-10 17:02:49 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener] Condition evaluation unchanged
[2024-12-10 17:06:52 INFO File Watcher] [org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener] Restarting due to 9 class path changes (0 additions, 0 deletions, 9 modifications)
[2024-12-10 17:06:52 INFO Thread-7] [org.apache.coyote.http11.Http11NioProtocol] Stopping ProtocolHandler ["http-nio-8080"]
[2024-12-10 17:06:52 INFO Thread-7] [com.zaxxer.hikari.HikariDataSource] HikariPool-2 - Shutdown initiated...
[2024-12-10 17:06:52 INFO Thread-7] [com.zaxxer.hikari.HikariDataSource] HikariPool-2 - Shutdown completed.
[2024-12-10 17:06:52 INFO restartedMain] [com.green.greengram.GreenGramApplication] Starting GreenGramVer3Application using Java 17.0.12 with PID 1548 (D:\BHB\GreenGramVer3\build\classes\java\main started by Administrator in D:\BHB\GreenGramVer3)
[2024-12-10 17:06:52 INFO restartedMain] [com.green.greengram.GreenGramApplication] No active profile set, falling back to 1 default profile: "default"
[2024-12-10 17:06:52 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-10 17:06:52 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-10 17:06:52 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-10 17:06:52 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-10 17:06:52 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-10 17:06:52 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 191 ms
[2024-12-10 17:06:52 INFO restartedMain] [com.green.greengram.common.MyFileUtils] MyFileUtils - 생성자: D:\BHB\download\greengram_ver3
[2024-12-10 17:06:52 INFO restartedMain] [com.zaxxer.hikari.HikariDataSource] HikariPool-3 - Starting...
[2024-12-10 17:06:52 INFO restartedMain] [com.zaxxer.hikari.pool.HikariPool] HikariPool-3 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@5fdf899d
[2024-12-10 17:06:52 INFO restartedMain] [com.zaxxer.hikari.HikariDataSource] HikariPool-3 - Start completed.
[2024-12-10 17:06:52 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-10 17:06:52 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-10 17:06:52 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-10 17:06:52 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-10 17:06:52 INFO restartedMain] [com.green.greengram.GreenGramApplication] Started GreenGramVer3Application in 0.332 seconds (process running for 367.533)
[2024-12-10 17:06:52 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener] Condition evaluation unchanged
[2024-12-10 17:07:19 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-3 - Shutdown initiated...
[2024-12-10 17:07:19 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-3 - Shutdown completed.
[2024-12-10 17:07:20 INFO restartedMain] [com.green.greengram.GreenGramApplication] Starting GreenGramVer3Application using Java 17.0.12 with PID 2768 (D:\BHB\GreenGramVer3\build\classes\java\main started by Administrator in D:\BHB\GreenGramVer3)
[2024-12-10 17:07:20 INFO restartedMain] [com.green.greengram.GreenGramApplication] No active profile set, falling back to 1 default profile: "default"
[2024-12-10 17:07:20 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-10 17:07:20 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-10 17:07:21 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-10 17:07:21 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-10 17:07:21 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-10 17:07:21 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-10 17:07:21 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-10 17:07:21 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 797 ms
[2024-12-10 17:07:21 INFO restartedMain] [com.green.greengram.common.MyFileUtils] MyFileUtils - 생성자: D:\BHB\download\greengram_ver3
[2024-12-10 17:07:21 INFO restartedMain] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Starting...
[2024-12-10 17:07:21 INFO restartedMain] [com.zaxxer.hikari.pool.HikariPool] HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@12c6ac13
[2024-12-10 17:07:21 INFO restartedMain] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Start completed.
[2024-12-10 17:07:21 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-10 17:07:22 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-10 17:07:22 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-10 17:07:22 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-10 17:07:22 INFO restartedMain] [com.green.greengram.GreenGramApplication] Started GreenGramVer3Application in 1.744 seconds (process running for 2.088)
[2024-12-10 17:07:25 INFO http-nio-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring DispatcherServlet 'dispatcherServlet'
[2024-12-10 17:07:25 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[2024-12-10 17:07:25 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Completed initialization in 1 ms
[2024-12-10 17:07:25 INFO http-nio-8080-exec-6] [com.green.greengram.feed.FeedController] FeedController > getFeedList > p: FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=1, profileUserId=null)
[2024-12-10 17:07:25 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId, A.contents, A.location
             , A.created_at AS createdAt
             , B.user_id AS writerUserId
             , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
             , B.pic AS writerPic
             , IF(C.feed_id IS NULL, 0, 1) AS isLike
          FROM feed A
         INNER JOIN user B
            ON A.writer_user_id = B.user_id

        LEFT JOIN feed_like C
            ON A.feed_id = C.feed_id
           AND C.user_id = 1
         ORDER BY A.feed_id DESC
         LIMIT 0, 20
 {executed in 0 msec}
[2024-12-10 17:07:25 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|--------|---------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|feed_id |contents |location |created_at          |user_id |writernm |pic                                      |islike |
|--------|---------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|22      |         |         |2024-12-09 16:30:06 |6       |8        |292cc9ec-541d-454e-beda-2233f6bb26b2.gif |1      |
|21      |         |         |2024-12-09 16:29:56 |6       |8        |292cc9ec-541d-454e-beda-2233f6bb26b2.gif |1      |
|19      |         |         |2024-12-09 11:54:50 |6       |8        |292cc9ec-541d-454e-beda-2233f6bb26b2.gif |1      |
|18      |         |         |2024-12-06 12:45:10 |6       |8        |292cc9ec-541d-454e-beda-2233f6bb26b2.gif |1      |
|5       |123      |중앙로      |2024-11-29 10:36:12 |2       |홍길동      |6d88f58a-0c38-4010-b703-3ccb187071d8.jpg |0      |
|--------|---------|---------|--------------------|--------|---------|-----------------------------------------|-------|

[2024-12-10 17:07:25 INFO http-nio-8080-exec-6] [com.green.greengram.feed.FeedService] feedIds : [22, 21, 19, 18, 5]
[2024-12-10 17:07:25 ERRORhttp-nio-8080-exec-6] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.apache.ibatis.binding.BindingException: Invalid bound statement (not found): com.green.greengram.feed.FeedPicMapper.selFeedPicListByFeedId] with root cause
org.apache.ibatis.binding.BindingException: Invalid bound statement (not found): com.green.greengram.feed.FeedPicMapper.selFeedPicListByFeedId
	at org.apache.ibatis.binding.MapperMethod$SqlCommand.<init>(MapperMethod.java:229)
	at org.apache.ibatis.binding.MapperMethod.<init>(MapperMethod.java:53)
	at org.apache.ibatis.binding.MapperProxy.lambda$cachedInvoker$0(MapperProxy.java:96)
	at java.base/java.util.concurrent.ConcurrentHashMap.computeIfAbsent(ConcurrentHashMap.java:1708)
	at org.apache.ibatis.util.MapUtil.computeIfAbsent(MapUtil.java:36)
	at org.apache.ibatis.binding.MapperProxy.cachedInvoker(MapperProxy.java:94)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy4/jdk.proxy4.$Proxy88.selFeedPicListByFeedId(Unknown Source)
	at com.green.greengram.feed.FeedService.getFeedList3(FeedService.java:112)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:355)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:716)
	at com.green.greengram.feed.FeedService$$SpringCGLIB$$0.getFeedList3(<generated>)
	at com.green.greengram.feed.FeedController.getFeedList(FeedController.java:38)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-10 17:08:44 INFO File Watcher] [org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener] Restarting due to 28 class path changes (0 additions, 0 deletions, 28 modifications)
[2024-12-10 17:08:44 INFO Thread-5] [org.apache.coyote.http11.Http11NioProtocol] Stopping ProtocolHandler ["http-nio-8080"]
[2024-12-10 17:08:45 INFO Thread-5] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown initiated...
[2024-12-10 17:08:45 INFO Thread-5] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown completed.
[2024-12-10 17:08:45 INFO restartedMain] [com.green.greengram.GreenGramApplication] Starting GreenGramVer3Application using Java 17.0.12 with PID 2768 (D:\BHB\GreenGramVer3\build\classes\java\main started by Administrator in D:\BHB\GreenGramVer3)
[2024-12-10 17:08:45 INFO restartedMain] [com.green.greengram.GreenGramApplication] No active profile set, falling back to 1 default profile: "default"
[2024-12-10 17:08:45 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-10 17:08:45 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-10 17:08:45 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-10 17:08:45 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-10 17:08:45 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-10 17:08:45 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 201 ms
[2024-12-10 17:08:45 INFO restartedMain] [com.green.greengram.common.MyFileUtils] MyFileUtils - 생성자: D:\BHB\download\greengram_ver3
[2024-12-10 17:08:45 INFO restartedMain] [com.zaxxer.hikari.HikariDataSource] HikariPool-2 - Starting...
[2024-12-10 17:08:45 INFO restartedMain] [com.zaxxer.hikari.pool.HikariPool] HikariPool-2 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@4e2def90
[2024-12-10 17:08:45 INFO restartedMain] [com.zaxxer.hikari.HikariDataSource] HikariPool-2 - Start completed.
[2024-12-10 17:08:45 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-10 17:08:45 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-10 17:08:45 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-10 17:08:45 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-10 17:08:45 INFO restartedMain] [com.green.greengram.GreenGramApplication] Started GreenGramVer3Application in 0.368 seconds (process running for 85.437)
[2024-12-10 17:08:45 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener] Condition evaluation unchanged
[2024-12-10 17:18:10 INFO http-nio-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring DispatcherServlet 'dispatcherServlet'
[2024-12-10 17:18:10 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[2024-12-10 17:18:10 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Completed initialization in 0 ms
[2024-12-10 17:18:10 INFO http-nio-8080-exec-3] [com.green.greengram.feed.FeedController] FeedController > getFeedList > p: FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=1, profileUserId=null)
[2024-12-10 17:18:10 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT A.feed_id AS feedId, A.contents, A.location
             , A.created_at AS createdAt
             , B.user_id AS writerUserId
             , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
             , B.pic AS writerPic
             , IF(C.feed_id IS NULL, 0, 1) AS isLike
          FROM feed A
         INNER JOIN user B
            ON A.writer_user_id = B.user_id

        LEFT JOIN feed_like C
            ON A.feed_id = C.feed_id
           AND C.user_id = 1
         ORDER BY A.feed_id DESC
         LIMIT 0, 20
 {executed in 0 msec}
[2024-12-10 17:18:10 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|--------|---------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|feed_id |contents |location |created_at          |user_id |writernm |pic                                      |islike |
|--------|---------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|22      |         |         |2024-12-09 16:30:06 |6       |8        |292cc9ec-541d-454e-beda-2233f6bb26b2.gif |1      |
|21      |         |         |2024-12-09 16:29:56 |6       |8        |292cc9ec-541d-454e-beda-2233f6bb26b2.gif |1      |
|19      |         |         |2024-12-09 11:54:50 |6       |8        |292cc9ec-541d-454e-beda-2233f6bb26b2.gif |1      |
|18      |         |         |2024-12-06 12:45:10 |6       |8        |292cc9ec-541d-454e-beda-2233f6bb26b2.gif |1      |
|5       |123      |중앙로      |2024-11-29 10:36:12 |2       |홍길동      |6d88f58a-0c38-4010-b703-3ccb187071d8.jpg |0      |
|--------|---------|---------|--------------------|--------|---------|-----------------------------------------|-------|

[2024-12-10 17:18:10 INFO http-nio-8080-exec-3] [com.green.greengram.feed.FeedService] feedIds : [22, 21, 19, 18, 5]
[2024-12-10 17:18:10 ERRORhttp-nio-8080-exec-3] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.apache.ibatis.binding.BindingException: Invalid bound statement (not found): com.green.greengram.feed.FeedPicMapper.selFeedPicListByFeedId] with root cause
org.apache.ibatis.binding.BindingException: Invalid bound statement (not found): com.green.greengram.feed.FeedPicMapper.selFeedPicListByFeedId
	at org.apache.ibatis.binding.MapperMethod$SqlCommand.<init>(MapperMethod.java:229)
	at org.apache.ibatis.binding.MapperMethod.<init>(MapperMethod.java:53)
	at org.apache.ibatis.binding.MapperProxy.lambda$cachedInvoker$0(MapperProxy.java:96)
	at java.base/java.util.concurrent.ConcurrentHashMap.computeIfAbsent(ConcurrentHashMap.java:1708)
	at org.apache.ibatis.util.MapUtil.computeIfAbsent(MapUtil.java:36)
	at org.apache.ibatis.binding.MapperProxy.cachedInvoker(MapperProxy.java:94)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy5/jdk.proxy5.$Proxy108.selFeedPicListByFeedId(Unknown Source)
	at com.green.greengram.feed.FeedService.getFeedList3(FeedService.java:112)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:355)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:716)
	at com.green.greengram.feed.FeedService$$SpringCGLIB$$0.getFeedList3(<generated>)
	at com.green.greengram.feed.FeedController.getFeedList(FeedController.java:38)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-10 17:18:42 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-2 - Shutdown initiated...
[2024-12-10 17:18:42 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-2 - Shutdown completed.
[2024-12-10 17:18:44 INFO restartedMain] [com.green.greengram.GreenGramApplication] Starting GreenGramVer3Application using Java 17.0.12 with PID 11348 (D:\BHB\GreenGramVer3\build\classes\java\main started by Administrator in D:\BHB\GreenGramVer3)
[2024-12-10 17:18:44 INFO restartedMain] [com.green.greengram.GreenGramApplication] No active profile set, falling back to 1 default profile: "default"
[2024-12-10 17:18:44 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-10 17:18:44 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-10 17:18:44 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-10 17:18:44 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-10 17:18:44 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-10 17:18:44 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-10 17:18:44 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-10 17:18:44 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 781 ms
[2024-12-10 17:18:44 INFO restartedMain] [com.green.greengram.common.MyFileUtils] MyFileUtils - 생성자: D:\BHB\download\greengram_ver3
[2024-12-10 17:18:44 INFO restartedMain] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Starting...
[2024-12-10 17:18:45 INFO restartedMain] [com.zaxxer.hikari.pool.HikariPool] HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@53541935
[2024-12-10 17:18:45 INFO restartedMain] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Start completed.
[2024-12-10 17:18:45 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-10 17:18:45 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-10 17:18:45 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-10 17:18:45 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-10 17:18:45 INFO restartedMain] [com.green.greengram.GreenGramApplication] Started GreenGramVer3Application in 1.725 seconds (process running for 2.06)
[2024-12-10 17:18:47 INFO http-nio-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring DispatcherServlet 'dispatcherServlet'
[2024-12-10 17:18:47 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[2024-12-10 17:18:47 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Completed initialization in 1 ms
[2024-12-10 17:18:47 INFO http-nio-8080-exec-6] [com.green.greengram.feed.FeedController] FeedController > getFeedList > p: FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=1, profileUserId=null)
[2024-12-10 17:18:47 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId, A.contents, A.location
             , A.created_at AS createdAt
             , B.user_id AS writerUserId
             , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
             , B.pic AS writerPic
             , IF(C.feed_id IS NULL, 0, 1) AS isLike
          FROM feed A
         INNER JOIN user B
            ON A.writer_user_id = B.user_id

        LEFT JOIN feed_like C
            ON A.feed_id = C.feed_id
           AND C.user_id = 1
         ORDER BY A.feed_id DESC
         LIMIT 0, 20
 {executed in 2 msec}
[2024-12-10 17:18:47 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|--------|---------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|feed_id |contents |location |created_at          |user_id |writernm |pic                                      |islike |
|--------|---------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|22      |         |         |2024-12-09 16:30:06 |6       |8        |292cc9ec-541d-454e-beda-2233f6bb26b2.gif |1      |
|21      |         |         |2024-12-09 16:29:56 |6       |8        |292cc9ec-541d-454e-beda-2233f6bb26b2.gif |1      |
|19      |         |         |2024-12-09 11:54:50 |6       |8        |292cc9ec-541d-454e-beda-2233f6bb26b2.gif |1      |
|18      |         |         |2024-12-06 12:45:10 |6       |8        |292cc9ec-541d-454e-beda-2233f6bb26b2.gif |1      |
|5       |123      |중앙로      |2024-11-29 10:36:12 |2       |홍길동      |6d88f58a-0c38-4010-b703-3ccb187071d8.jpg |0      |
|--------|---------|---------|--------------------|--------|---------|-----------------------------------------|-------|

[2024-12-10 17:18:47 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
          FROM feed_pic
         WHERE feed_id = 22
 {executed in 0 msec}
[2024-12-10 17:18:47 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|71b713ca-7094-4c0a-939c-29d119340ee6.gif |
|-----------------------------------------|

[2024-12-10 17:18:47 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , B.user_id AS writerUserId
             , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
             , B.pic AS writerPic
          FROM feed_comment A
         INNER JOIN user B
            ON A.user_id = B.user_id
         WHERE A.feed_id = 22
         ORDER BY A.feed_comment_id DESC
         LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 17:18:47 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|81              |함       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|80              |야       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|79              |어       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|78              |있       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-10 17:18:47 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
          FROM feed_pic
         WHERE feed_id = 21
 {executed in 1 msec}
[2024-12-10 17:18:47 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|6d6e94d5-499f-454f-aa08-d40373161e86.gif |
|-----------------------------------------|

[2024-12-10 17:18:47 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , B.user_id AS writerUserId
             , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
             , B.pic AS writerPic
          FROM feed_comment A
         INNER JOIN user B
            ON A.user_id = B.user_id
         WHERE A.feed_id = 21
         ORDER BY A.feed_comment_id DESC
         LIMIT 0, 4
 {executed in 1 msec}
[2024-12-10 17:18:47 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|87              |함       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|86              |야       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|85              |어       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|84              |있       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-10 17:18:47 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
          FROM feed_pic
         WHERE feed_id = 19
 {executed in 0 msec}
[2024-12-10 17:18:47 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|83e83807-46f8-4040-8f70-667accd3c76f.gif |
|-----------------------------------------|

[2024-12-10 17:18:47 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , B.user_id AS writerUserId
             , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
             , B.pic AS writerPic
          FROM feed_comment A
         INNER JOIN user B
            ON A.user_id = B.user_id
         WHERE A.feed_id = 19
         ORDER BY A.feed_comment_id DESC
         LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 17:18:47 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|93              |함       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|92              |야       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|91              |어       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|90              |있       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-10 17:18:47 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
          FROM feed_pic
         WHERE feed_id = 18
 {executed in 0 msec}
[2024-12-10 17:18:47 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a773e1e8-508b-4ce5-8c6f-e3af220615dc.gif |
|-----------------------------------------|

[2024-12-10 17:18:47 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , B.user_id AS writerUserId
             , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
             , B.pic AS writerPic
          FROM feed_comment A
         INNER JOIN user B
            ON A.user_id = B.user_id
         WHERE A.feed_id = 18
         ORDER BY A.feed_comment_id DESC
         LIMIT 0, 4
 {executed in 0 msec}
[2024-12-10 17:18:47 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 17:18:47 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
          FROM feed_pic
         WHERE feed_id = 5
 {executed in 0 msec}
[2024-12-10 17:18:47 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|675d9f82-0c18-4f6e-91a3-9858129aeb7e.jpg |
|c95cc439-e1e7-40f4-81fa-013b069631ca.jpg |
|f490d2ad-c64d-4006-a74a-8235888e3e87.jpg |
|-----------------------------------------|

[2024-12-10 17:18:47 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , B.user_id AS writerUserId
             , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
             , B.pic AS writerPic
          FROM feed_comment A
         INNER JOIN user B
            ON A.user_id = B.user_id
         WHERE A.feed_id = 5
         ORDER BY A.feed_comment_id DESC
         LIMIT 0, 4
 {executed in 1 msec}
[2024-12-10 17:18:47 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-10 17:18:51 INFO http-nio-8080-exec-10] [com.green.greengram.feed.comment.FeedCommentController] FeedCommentController > postFeedComment > p: FeedCommentPostReq(feedCommentId=0, feedId=18, userId=1, comment=ㅁㄴㅇ)
[2024-12-10 17:18:51 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO feed_comment
           SET `feed_id` = 18
             , `user_id` = 1
             , `comment` = 'ㅁㄴㅇ'
 {executed in 2 msec}
[2024-12-10 17:18:51 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
1. getGeneratedKeys on query: INSERT INTO feed_comment
           SET `feed_id` = 18
             , `user_id` = 1
             , `comment` = 'ㅁㄴㅇ'
 {executed in 0 msec}
[2024-12-10 17:18:51 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------|
|insert_id |
|----------|
|94        |
|----------|

[2024-12-10 17:18:53 INFO http-nio-8080-exec-2] [com.green.greengram.feed.comment.FeedCommentController] FeedCommentController > postFeedComment > p: FeedCommentPostReq(feedCommentId=0, feedId=5, userId=1, comment=ㅁㄴㅇ)
[2024-12-10 17:18:53 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO feed_comment
           SET `feed_id` = 5
             , `user_id` = 1
             , `comment` = 'ㅁㄴㅇ'
 {executed in 2 msec}
[2024-12-10 17:18:53 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
1. getGeneratedKeys on query: INSERT INTO feed_comment
           SET `feed_id` = 5
             , `user_id` = 1
             , `comment` = 'ㅁㄴㅇ'
 {executed in 0 msec}
[2024-12-10 17:18:53 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------|
|insert_id |
|----------|
|95        |
|----------|

[2024-12-10 17:18:57 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown initiated...
[2024-12-10 17:18:57 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown completed.
[2024-12-10 17:18:58 INFO restartedMain] [com.green.greengram.GreenGramApplication] Starting GreenGramVer3Application using Java 17.0.12 with PID 11832 (D:\BHB\GreenGramVer3\build\classes\java\main started by Administrator in D:\BHB\GreenGramVer3)
[2024-12-10 17:18:58 INFO restartedMain] [com.green.greengram.GreenGramApplication] No active profile set, falling back to 1 default profile: "default"
[2024-12-10 17:18:58 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-10 17:18:58 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-10 17:18:59 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-10 17:18:59 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-10 17:18:59 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-10 17:18:59 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-10 17:18:59 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-10 17:18:59 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 773 ms
[2024-12-10 17:18:59 INFO restartedMain] [com.green.greengram.common.MyFileUtils] MyFileUtils - 생성자: D:\BHB\download\greengram_ver3
[2024-12-10 17:18:59 INFO restartedMain] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Starting...
[2024-12-10 17:18:59 INFO restartedMain] [com.zaxxer.hikari.pool.HikariPool] HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@52d71fb5
[2024-12-10 17:18:59 INFO restartedMain] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Start completed.
[2024-12-10 17:19:00 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-10 17:19:00 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-10 17:19:00 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-10 17:19:00 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-10 17:19:00 INFO restartedMain] [com.green.greengram.GreenGramApplication] Started GreenGramVer3Application in 1.714 seconds (process running for 2.062)
[2024-12-10 17:19:02 INFO http-nio-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring DispatcherServlet 'dispatcherServlet'
[2024-12-10 17:19:02 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[2024-12-10 17:19:02 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Completed initialization in 1 ms
[2024-12-10 17:19:02 INFO http-nio-8080-exec-6] [com.green.greengram.feed.FeedController] FeedController > getFeedList > p: FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=1, profileUserId=null)
[2024-12-10 17:19:02 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId, A.contents, A.location
             , A.created_at AS createdAt
             , B.user_id AS writerUserId
             , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
             , B.pic AS writerPic
             , IF(C.feed_id IS NULL, 0, 1) AS isLike
          FROM feed A
         INNER JOIN user B
            ON A.writer_user_id = B.user_id

        LEFT JOIN feed_like C
            ON A.feed_id = C.feed_id
           AND C.user_id = 1
         ORDER BY A.feed_id DESC
         LIMIT 0, 20
 {executed in 1 msec}
[2024-12-10 17:19:02 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|--------|---------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|feed_id |contents |location |created_at          |user_id |writernm |pic                                      |islike |
|--------|---------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|22      |         |         |2024-12-09 16:30:06 |6       |8        |292cc9ec-541d-454e-beda-2233f6bb26b2.gif |1      |
|21      |         |         |2024-12-09 16:29:56 |6       |8        |292cc9ec-541d-454e-beda-2233f6bb26b2.gif |1      |
|19      |         |         |2024-12-09 11:54:50 |6       |8        |292cc9ec-541d-454e-beda-2233f6bb26b2.gif |1      |
|18      |         |         |2024-12-06 12:45:10 |6       |8        |292cc9ec-541d-454e-beda-2233f6bb26b2.gif |1      |
|5       |123      |중앙로      |2024-11-29 10:36:12 |2       |홍길동      |6d88f58a-0c38-4010-b703-3ccb187071d8.jpg |0      |
|--------|---------|---------|--------------------|--------|---------|-----------------------------------------|-------|

[2024-12-10 17:19:02 INFO http-nio-8080-exec-6] [com.green.greengram.feed.FeedService] feedIds : [22, 21, 19, 18, 5]
[2024-12-10 17:19:02 ERRORhttp-nio-8080-exec-6] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.apache.ibatis.binding.BindingException: Invalid bound statement (not found): com.green.greengram.feed.FeedPicMapper.selFeedPicListByFeedId] with root cause
org.apache.ibatis.binding.BindingException: Invalid bound statement (not found): com.green.greengram.feed.FeedPicMapper.selFeedPicListByFeedId
	at org.apache.ibatis.binding.MapperMethod$SqlCommand.<init>(MapperMethod.java:229)
	at org.apache.ibatis.binding.MapperMethod.<init>(MapperMethod.java:53)
	at org.apache.ibatis.binding.MapperProxy.lambda$cachedInvoker$0(MapperProxy.java:96)
	at java.base/java.util.concurrent.ConcurrentHashMap.computeIfAbsent(ConcurrentHashMap.java:1708)
	at org.apache.ibatis.util.MapUtil.computeIfAbsent(MapUtil.java:36)
	at org.apache.ibatis.binding.MapperProxy.cachedInvoker(MapperProxy.java:94)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy4/jdk.proxy4.$Proxy88.selFeedPicListByFeedId(Unknown Source)
	at com.green.greengram.feed.FeedService.getFeedList3(FeedService.java:112)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:355)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:716)
	at com.green.greengram.feed.FeedService$$SpringCGLIB$$0.getFeedList3(<generated>)
	at com.green.greengram.feed.FeedController.getFeedList(FeedController.java:38)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-10 17:19:03 INFO http-nio-8080-exec-10] [com.green.greengram.feed.FeedController] FeedController > getFeedList > p: FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=1, profileUserId=null)
[2024-12-10 17:19:03 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId, A.contents, A.location
             , A.created_at AS createdAt
             , B.user_id AS writerUserId
             , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
             , B.pic AS writerPic
             , IF(C.feed_id IS NULL, 0, 1) AS isLike
          FROM feed A
         INNER JOIN user B
            ON A.writer_user_id = B.user_id

        LEFT JOIN feed_like C
            ON A.feed_id = C.feed_id
           AND C.user_id = 1
         ORDER BY A.feed_id DESC
         LIMIT 0, 20
 {executed in 1 msec}
[2024-12-10 17:19:03 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|--------|---------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|feed_id |contents |location |created_at          |user_id |writernm |pic                                      |islike |
|--------|---------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|22      |         |         |2024-12-09 16:30:06 |6       |8        |292cc9ec-541d-454e-beda-2233f6bb26b2.gif |1      |
|21      |         |         |2024-12-09 16:29:56 |6       |8        |292cc9ec-541d-454e-beda-2233f6bb26b2.gif |1      |
|19      |         |         |2024-12-09 11:54:50 |6       |8        |292cc9ec-541d-454e-beda-2233f6bb26b2.gif |1      |
|18      |         |         |2024-12-06 12:45:10 |6       |8        |292cc9ec-541d-454e-beda-2233f6bb26b2.gif |1      |
|5       |123      |중앙로      |2024-11-29 10:36:12 |2       |홍길동      |6d88f58a-0c38-4010-b703-3ccb187071d8.jpg |0      |
|--------|---------|---------|--------------------|--------|---------|-----------------------------------------|-------|

[2024-12-10 17:19:03 INFO http-nio-8080-exec-10] [com.green.greengram.feed.FeedService] feedIds : [22, 21, 19, 18, 5]
[2024-12-10 17:19:03 ERRORhttp-nio-8080-exec-10] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.apache.ibatis.binding.BindingException: Invalid bound statement (not found): com.green.greengram.feed.FeedPicMapper.selFeedPicListByFeedId] with root cause
org.apache.ibatis.binding.BindingException: Invalid bound statement (not found): com.green.greengram.feed.FeedPicMapper.selFeedPicListByFeedId
	at org.apache.ibatis.binding.MapperMethod$SqlCommand.<init>(MapperMethod.java:229)
	at org.apache.ibatis.binding.MapperMethod.<init>(MapperMethod.java:53)
	at org.apache.ibatis.binding.MapperProxy.lambda$cachedInvoker$0(MapperProxy.java:96)
	at java.base/java.util.concurrent.ConcurrentHashMap.computeIfAbsent(ConcurrentHashMap.java:1708)
	at org.apache.ibatis.util.MapUtil.computeIfAbsent(MapUtil.java:36)
	at org.apache.ibatis.binding.MapperProxy.cachedInvoker(MapperProxy.java:94)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy4/jdk.proxy4.$Proxy88.selFeedPicListByFeedId(Unknown Source)
	at com.green.greengram.feed.FeedService.getFeedList3(FeedService.java:112)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:355)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:716)
	at com.green.greengram.feed.FeedService$$SpringCGLIB$$0.getFeedList3(<generated>)
	at com.green.greengram.feed.FeedController.getFeedList(FeedController.java:38)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-10 17:21:25 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown initiated...
[2024-12-10 17:21:25 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown completed.
[2024-12-10 17:21:27 INFO restartedMain] [com.green.greengram.GreenGramApplication] Starting GreenGramVer3Application using Java 17.0.12 with PID 5296 (D:\BHB\GreenGramVer3\build\classes\java\main started by Administrator in D:\BHB\GreenGramVer3)
[2024-12-10 17:21:27 INFO restartedMain] [com.green.greengram.GreenGramApplication] No active profile set, falling back to 1 default profile: "default"
[2024-12-10 17:21:27 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-10 17:21:27 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-10 17:21:28 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-10 17:21:28 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-10 17:21:28 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-10 17:21:28 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-10 17:21:28 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-10 17:21:28 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 788 ms
[2024-12-10 17:21:28 INFO restartedMain] [com.green.greengram.common.MyFileUtils] MyFileUtils - 생성자: D:\BHB\download\greengram_ver3
[2024-12-10 17:21:28 INFO restartedMain] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Starting...
[2024-12-10 17:21:28 INFO restartedMain] [com.zaxxer.hikari.pool.HikariPool] HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@5af8ebeb
[2024-12-10 17:21:28 INFO restartedMain] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Start completed.
[2024-12-10 17:21:28 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-10 17:21:28 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-10 17:21:28 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-10 17:21:28 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-10 17:21:28 INFO restartedMain] [com.green.greengram.GreenGramApplication] Started GreenGramVer3Application in 1.701 seconds (process running for 2.063)
[2024-12-10 17:21:33 INFO http-nio-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring DispatcherServlet 'dispatcherServlet'
[2024-12-10 17:21:33 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[2024-12-10 17:21:33 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Completed initialization in 1 ms
[2024-12-10 17:21:33 INFO http-nio-8080-exec-6] [com.green.greengram.feed.FeedController] FeedController > getFeedList > p: FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=1, profileUserId=null)
[2024-12-10 17:21:33 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId, A.contents, A.location
             , A.created_at AS createdAt
             , B.user_id AS writerUserId
             , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
             , B.pic AS writerPic
             , IF(C.feed_id IS NULL, 0, 1) AS isLike
          FROM feed A
         INNER JOIN user B
            ON A.writer_user_id = B.user_id

        LEFT JOIN feed_like C
            ON A.feed_id = C.feed_id
           AND C.user_id = 1
         ORDER BY A.feed_id DESC
         LIMIT 0, 20
 {executed in 1 msec}
[2024-12-10 17:21:34 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|--------|---------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|feed_id |contents |location |created_at          |user_id |writernm |pic                                      |islike |
|--------|---------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|22      |         |         |2024-12-09 16:30:06 |6       |8        |292cc9ec-541d-454e-beda-2233f6bb26b2.gif |1      |
|21      |         |         |2024-12-09 16:29:56 |6       |8        |292cc9ec-541d-454e-beda-2233f6bb26b2.gif |1      |
|19      |         |         |2024-12-09 11:54:50 |6       |8        |292cc9ec-541d-454e-beda-2233f6bb26b2.gif |1      |
|18      |         |         |2024-12-06 12:45:10 |6       |8        |292cc9ec-541d-454e-beda-2233f6bb26b2.gif |1      |
|5       |123      |중앙로      |2024-11-29 10:36:12 |2       |홍길동      |6d88f58a-0c38-4010-b703-3ccb187071d8.jpg |0      |
|--------|---------|---------|--------------------|--------|---------|-----------------------------------------|-------|

[2024-12-10 17:21:34 INFO http-nio-8080-exec-6] [com.green.greengram.feed.FeedService] feedIds : [22, 21, 19, 18, 5]
[2024-12-10 17:21:34 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select feed_id AS feedId, pic
        from feed_pic
        where feed_id in
         (  
            22
         , 
            21
         , 
            19
         , 
            18
         , 
            5
         ) 
        order by feed_id desc
 {executed in 1 msec}
[2024-12-10 17:21:34 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|--------|-----------------------------------------|
|feed_id |pic                                      |
|--------|-----------------------------------------|
|22      |71b713ca-7094-4c0a-939c-29d119340ee6.gif |
|21      |6d6e94d5-499f-454f-aa08-d40373161e86.gif |
|19      |83e83807-46f8-4040-8f70-667accd3c76f.gif |
|18      |a773e1e8-508b-4ce5-8c6f-e3af220615dc.gif |
|5       |f490d2ad-c64d-4006-a74a-8235888e3e87.jpg |
|5       |c95cc439-e1e7-40f4-81fa-013b069631ca.jpg |
|5       |675d9f82-0c18-4f6e-91a3-9858129aeb7e.jpg |
|--------|-----------------------------------------|

[2024-12-10 17:21:34 INFO http-nio-8080-exec-6] [com.green.greengram.feed.FeedService] feedPicList : [com.green.greengram.feed.model.FeedPicSel@3cbdc7b0, com.green.greengram.feed.model.FeedPicSel@6724b482, com.green.greengram.feed.model.FeedPicSel@61240a3a, com.green.greengram.feed.model.FeedPicSel@7d5a818d, com.green.greengram.feed.model.FeedPicSel@2f0859d1, com.green.greengram.feed.model.FeedPicSel@6dca7816, com.green.greengram.feed.model.FeedPicSel@2c7eda4f]
[2024-12-10 17:21:34 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT T.feedId, T.feedCommentId, T.comment
        FROM (
        SELECT ROW_NUMBER() OVER (PARTITION BY A.feed_id ORDER BY A.feed_id, A.feed_comment_id DESC) AS num
        , A.feed_id AS feedId
        , A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id IN
         (  
            22
         , 
            21
         , 
            19
         , 
            18
         , 
            5
         ) 
        )T
        WHERE T.num    <=   4
 {executed in 1 msec}
[2024-12-10 17:21:34 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-------|--------------|--------|
|feedid |feedcommentid |comment |
|-------|--------------|--------|
|5      |95            |ㅁㄴㅇ     |
|18     |94            |ㅁㄴㅇ     |
|19     |93            |함       |
|19     |92            |야       |
|19     |91            |어       |
|19     |90            |있       |
|21     |87            |함       |
|21     |86            |야       |
|21     |85            |어       |
|21     |84            |있       |
|22     |81            |함       |
|22     |80            |야       |
|22     |79            |어       |
|22     |78            |있       |
|-------|--------------|--------|

[2024-12-10 17:21:34 INFO http-nio-8080-exec-6] [com.green.greengram.feed.FeedService] List : [com.green.greengram.feed.model.FeedGetRes@1a3023b1, com.green.greengram.feed.model.FeedGetRes@53768b32, com.green.greengram.feed.model.FeedGetRes@42c916ed, com.green.greengram.feed.model.FeedGetRes@2206b5a7, com.green.greengram.feed.model.FeedGetRes@393027fd]
[2024-12-10 17:29:56 INFO File Watcher] [org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener] Restarting due to 45 class path changes (0 additions, 0 deletions, 45 modifications)
[2024-12-10 17:29:56 INFO Thread-5] [org.apache.coyote.http11.Http11NioProtocol] Stopping ProtocolHandler ["http-nio-8080"]
[2024-12-10 17:29:56 INFO Thread-5] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown initiated...
[2024-12-10 17:29:56 INFO Thread-5] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown completed.
[2024-12-10 17:29:57 INFO restartedMain] [com.green.greengram.GreenGramApplication] Starting GreenGramVer3Application using Java 17.0.12 with PID 5296 (D:\BHB\GreenGramVer3\build\classes\java\main started by Administrator in D:\BHB\GreenGramVer3)
[2024-12-10 17:29:57 INFO restartedMain] [com.green.greengram.GreenGramApplication] No active profile set, falling back to 1 default profile: "default"
[2024-12-10 17:29:57 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-10 17:29:57 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-10 17:29:57 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-10 17:29:57 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-10 17:29:57 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-10 17:29:57 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 209 ms
[2024-12-10 17:29:57 INFO restartedMain] [com.green.greengram.common.MyFileUtils] MyFileUtils - 생성자: D:\BHB\download\greengram_ver3
[2024-12-10 17:29:57 INFO restartedMain] [com.zaxxer.hikari.HikariDataSource] HikariPool-2 - Starting...
[2024-12-10 17:29:57 INFO restartedMain] [com.zaxxer.hikari.pool.HikariPool] HikariPool-2 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@11539a75
[2024-12-10 17:29:57 INFO restartedMain] [com.zaxxer.hikari.HikariDataSource] HikariPool-2 - Start completed.
[2024-12-10 17:29:57 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-10 17:29:57 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-10 17:29:57 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-10 17:29:57 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-10 17:29:57 INFO restartedMain] [com.green.greengram.GreenGramApplication] Started GreenGramVer3Application in 0.398 seconds (process running for 510.85)
[2024-12-10 17:29:57 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener] Condition evaluation unchanged
[2024-12-10 17:40:59 INFO File Watcher] [org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener] Restarting due to 2 class path changes (0 additions, 0 deletions, 2 modifications)
[2024-12-10 17:41:00 INFO Thread-7] [org.apache.coyote.http11.Http11NioProtocol] Stopping ProtocolHandler ["http-nio-8080"]
[2024-12-10 17:41:00 INFO Thread-7] [com.zaxxer.hikari.HikariDataSource] HikariPool-2 - Shutdown initiated...
[2024-12-10 17:41:00 INFO Thread-7] [com.zaxxer.hikari.HikariDataSource] HikariPool-2 - Shutdown completed.
[2024-12-10 17:41:00 INFO restartedMain] [com.green.greengram.GreenGramApplication] Starting GreenGramVer3Application using Java 17.0.12 with PID 5296 (D:\BHB\GreenGramVer3\build\classes\java\main started by Administrator in D:\BHB\GreenGramVer3)
[2024-12-10 17:41:00 INFO restartedMain] [com.green.greengram.GreenGramApplication] No active profile set, falling back to 1 default profile: "default"
[2024-12-10 17:41:00 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-10 17:41:00 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-10 17:41:00 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-10 17:41:00 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-10 17:41:00 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-10 17:41:00 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 228 ms
[2024-12-10 17:41:00 INFO restartedMain] [com.green.greengram.common.MyFileUtils] MyFileUtils - 생성자: D:\BHB\download\greengram_ver3
[2024-12-10 17:41:00 INFO restartedMain] [com.zaxxer.hikari.HikariDataSource] HikariPool-3 - Starting...
[2024-12-10 17:41:00 INFO restartedMain] [com.zaxxer.hikari.pool.HikariPool] HikariPool-3 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@7a29888
[2024-12-10 17:41:00 INFO restartedMain] [com.zaxxer.hikari.HikariDataSource] HikariPool-3 - Start completed.
[2024-12-10 17:41:00 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-10 17:41:00 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-10 17:41:00 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-10 17:41:00 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-10 17:41:00 INFO restartedMain] [com.green.greengram.GreenGramApplication] Started GreenGramVer3Application in 0.376 seconds (process running for 1173.888)
[2024-12-10 17:41:00 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener] Condition evaluation unchanged
[2024-12-10 17:41:10 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-3 - Shutdown initiated...
[2024-12-10 17:41:10 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-3 - Shutdown completed.
