[2024-12-03 10:45:12 INFO restartedMain] [com.green.greengram.GreenGramApplication] Starting GreenGramVer2Application using Java 17.0.12 with PID 10488 (D:\BHB\GreenGramVer2\build\classes\java\main started by Administrator in D:\BHB\GreenGramVer2)
[2024-12-03 10:45:12 INFO restartedMain] [com.green.greengram.GreenGramApplication] No active profile set, falling back to 1 default profile: "default"
[2024-12-03 10:45:12 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-03 10:45:12 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-03 10:45:13 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-03 10:45:13 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-0.0.0.0-8080"]
[2024-12-03 10:45:13 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-03 10:45:13 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-03 10:45:13 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-03 10:45:13 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 887 ms
[2024-12-03 10:45:13 INFO restartedMain] [com.green.greengram.common.MyFileUtils] MyFileUtils - 생성자 D:/BHB/download/greengram_ver2
[2024-12-03 10:45:13 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-03 10:45:13 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-03 10:45:13 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-0.0.0.0-8080"]
[2024-12-03 10:45:13 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-03 10:45:13 INFO restartedMain] [com.green.greengram.GreenGramApplication] Started GreenGramVer2Application in 1.887 seconds (process running for 2.35)
[2024-12-03 10:46:32 INFO restartedMain] [com.green.greengram.GreenGramApplication] Starting GreenGramVer2Application using Java 17.0.12 with PID 3744 (D:\BHB\GreenGramVer2\build\classes\java\main started by Administrator in D:\BHB\GreenGramVer2)
[2024-12-03 10:46:32 INFO restartedMain] [com.green.greengram.GreenGramApplication] No active profile set, falling back to 1 default profile: "default"
[2024-12-03 10:46:32 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-03 10:46:32 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-03 10:46:32 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-03 10:46:32 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-0.0.0.0-8080"]
[2024-12-03 10:46:32 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-03 10:46:32 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-03 10:46:32 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-03 10:46:32 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 790 ms
[2024-12-03 10:46:32 INFO restartedMain] [com.green.greengram.common.MyFileUtils] MyFileUtils - 생성자 D:/BHB/download/greengram_ver2
[2024-12-03 10:46:33 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-03 10:46:33 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-03 10:46:33 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-0.0.0.0-8080"]
[2024-12-03 10:46:33 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-03 10:46:33 INFO restartedMain] [com.green.greengram.GreenGramApplication] Started GreenGramVer2Application in 1.631 seconds (process running for 2.065)
[2024-12-03 10:46:47 INFO http-nio-0.0.0.0-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring DispatcherServlet 'dispatcherServlet'
[2024-12-03 10:46:47 INFO http-nio-0.0.0.0-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[2024-12-03 10:46:47 INFO http-nio-0.0.0.0-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Completed initialization in 1 ms
[2024-12-03 10:46:47 INFO http-nio-0.0.0.0-8080-exec-10] [com.green.greengram.feed.model.FeedGetReq] page : 1, size : null, userId : 1
[2024-12-03 10:46:47 INFO http-nio-0.0.0.0-8080-exec-10] [com.green.greengram.feed.FeedController] FeedController > getFeedList > p : FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=1)
[2024-12-03 10:46:47 INFO http-nio-0.0.0.0-8080-exec-10] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Starting...
[2024-12-03 10:46:48 INFO http-nio-0.0.0.0-8080-exec-10] [com.zaxxer.hikari.pool.HikariPool] HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@1eeef0c0
[2024-12-03 10:46:48 INFO http-nio-0.0.0.0-8080-exec-10] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Start completed.
[2024-12-03 10:46:48 DEBUGhttp-nio-0.0.0.0-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId,
        C.user_id AS writerUserId,
        if(C.nick_name IS NULL, C.uid, C.nick_name) AS writerNm,
        C.pic AS writerPic,
        contents, location,
        A.created_at AS createdAt,
        if(D.feed_id IS NULL, 0, 1) AS isLike
        from feed A
        JOIN user C
        ON A.writer_user_id = C.user_id
        LEFT JOIN feed_like D
        ON C.user_id = D.user_id
        AND D.user_id = 1
        order BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 10 msec}
[2024-12-03 10:46:48 INFO http-nio-0.0.0.0-8080-exec-10] [jdbc.resultsettable] 
|--------|--------|---------|-----------------------------------------|---------|---------|--------------------|-------|
|feed_id |user_id |writernm |pic                                      |contents |location |created_at          |islike |
|--------|--------|---------|-----------------------------------------|---------|---------|--------------------|-------|
|12      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |ㅁㄴㅇ      |ㅁㄴㅇ      |2024-11-29 16:17:53 |1      |
|12      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |ㅁㄴㅇ      |ㅁㄴㅇ      |2024-11-29 16:17:53 |1      |
|11      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |         |         |2024-11-29 16:12:11 |1      |
|11      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |         |         |2024-11-29 16:12:11 |1      |
|10      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |asd      |asd      |2024-11-29 16:05:52 |1      |
|10      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |asd      |asd      |2024-11-29 16:05:52 |1      |
|9       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |sda      |asd      |2024-11-29 16:00:32 |1      |
|9       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |sda      |asd      |2024-11-29 16:00:32 |1      |
|5       |2       |홍길동      |6d88f58a-0c38-4010-b703-3ccb187071d8.jpg |123      |중앙로      |2024-11-29 10:36:12 |0      |
|4       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |123      |그린컴      |2024-11-28 17:24:40 |1      |
|4       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |123      |그린컴      |2024-11-28 17:24:40 |1      |
|--------|--------|---------|-----------------------------------------|---------|---------|--------------------|-------|

[2024-12-03 10:46:48 DEBUGhttp-nio-0.0.0.0-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 12
 {executed in 1 msec}
[2024-12-03 10:46:48 INFO http-nio-0.0.0.0-8080-exec-10] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-03 10:46:48 DEBUGhttp-nio-0.0.0.0-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 12
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-03 10:46:48 INFO http-nio-0.0.0.0-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|24              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|23              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|22              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|21              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-03 10:46:48 DEBUGhttp-nio-0.0.0.0-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 12
 {executed in 0 msec}
[2024-12-03 10:46:48 INFO http-nio-0.0.0.0-8080-exec-10] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-03 10:46:48 DEBUGhttp-nio-0.0.0.0-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 12
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 10:46:48 INFO http-nio-0.0.0.0-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|24              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|23              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|22              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|21              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-03 10:46:48 DEBUGhttp-nio-0.0.0.0-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 11
 {executed in 0 msec}
[2024-12-03 10:46:48 INFO http-nio-0.0.0.0-8080-exec-10] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-03 10:46:48 DEBUGhttp-nio-0.0.0.0-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 11
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 10:46:48 INFO http-nio-0.0.0.0-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-03 10:46:48 DEBUGhttp-nio-0.0.0.0-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 11
 {executed in 1 msec}
[2024-12-03 10:46:48 INFO http-nio-0.0.0.0-8080-exec-10] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-03 10:46:48 DEBUGhttp-nio-0.0.0.0-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 11
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 10:46:48 INFO http-nio-0.0.0.0-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-03 10:46:48 DEBUGhttp-nio-0.0.0.0-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 10
 {executed in 0 msec}
[2024-12-03 10:46:48 INFO http-nio-0.0.0.0-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|53da69e7-7ae4-4e7b-b95b-a4c4ca01bdc8.jpg |
|-----------------------------------------|

[2024-12-03 10:46:48 DEBUGhttp-nio-0.0.0.0-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 10
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 10:46:48 INFO http-nio-0.0.0.0-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|29              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|28              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|27              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|26              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-03 10:46:48 DEBUGhttp-nio-0.0.0.0-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 10
 {executed in 0 msec}
[2024-12-03 10:46:48 INFO http-nio-0.0.0.0-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|53da69e7-7ae4-4e7b-b95b-a4c4ca01bdc8.jpg |
|-----------------------------------------|

[2024-12-03 10:46:48 DEBUGhttp-nio-0.0.0.0-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 10
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 10:46:48 INFO http-nio-0.0.0.0-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|29              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|28              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|27              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|26              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-03 10:46:48 DEBUGhttp-nio-0.0.0.0-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 9
 {executed in 0 msec}
[2024-12-03 10:46:48 INFO http-nio-0.0.0.0-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|7875594b-3649-4059-a29a-5c09feeab0ad.jpg |
|-----------------------------------------|

[2024-12-03 10:46:48 DEBUGhttp-nio-0.0.0.0-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 9
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-03 10:46:48 INFO http-nio-0.0.0.0-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-03 10:46:48 DEBUGhttp-nio-0.0.0.0-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 9
 {executed in 0 msec}
[2024-12-03 10:46:48 INFO http-nio-0.0.0.0-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|7875594b-3649-4059-a29a-5c09feeab0ad.jpg |
|-----------------------------------------|

[2024-12-03 10:46:48 DEBUGhttp-nio-0.0.0.0-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 9
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 10:46:48 INFO http-nio-0.0.0.0-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-03 10:46:48 DEBUGhttp-nio-0.0.0.0-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 5
 {executed in 0 msec}
[2024-12-03 10:46:48 INFO http-nio-0.0.0.0-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|675d9f82-0c18-4f6e-91a3-9858129aeb7e.jpg |
|c95cc439-e1e7-40f4-81fa-013b069631ca.jpg |
|f490d2ad-c64d-4006-a74a-8235888e3e87.jpg |
|-----------------------------------------|

[2024-12-03 10:46:48 DEBUGhttp-nio-0.0.0.0-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 5
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-03 10:46:48 INFO http-nio-0.0.0.0-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-03 10:46:48 DEBUGhttp-nio-0.0.0.0-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 4
 {executed in 0 msec}
[2024-12-03 10:46:48 INFO http-nio-0.0.0.0-8080-exec-10] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-03 10:46:48 DEBUGhttp-nio-0.0.0.0-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 4
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 10:46:48 INFO http-nio-0.0.0.0-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-03 10:46:48 DEBUGhttp-nio-0.0.0.0-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 4
 {executed in 0 msec}
[2024-12-03 10:46:48 INFO http-nio-0.0.0.0-8080-exec-10] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-03 10:46:48 DEBUGhttp-nio-0.0.0.0-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 4
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-03 10:46:48 INFO http-nio-0.0.0.0-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-03 10:46:53 INFO http-nio-0.0.0.0-8080-exec-3] [com.green.greengram.feed.model.FeedGetReq] page : 1, size : null, userId : 1
[2024-12-03 10:46:53 INFO http-nio-0.0.0.0-8080-exec-3] [com.green.greengram.feed.FeedController] FeedController > getFeedList > p : FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=1)
[2024-12-03 10:46:53 DEBUGhttp-nio-0.0.0.0-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId,
        C.user_id AS writerUserId,
        if(C.nick_name IS NULL, C.uid, C.nick_name) AS writerNm,
        C.pic AS writerPic,
        contents, location,
        A.created_at AS createdAt,
        if(D.feed_id IS NULL, 0, 1) AS isLike
        from feed A
        JOIN user C
        ON A.writer_user_id = C.user_id
        LEFT JOIN feed_like D
        ON C.user_id = D.user_id
        AND D.user_id = 1
        order BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 1 msec}
[2024-12-03 10:46:53 INFO http-nio-0.0.0.0-8080-exec-3] [jdbc.resultsettable] 
|--------|--------|---------|-----------------------------------------|---------|---------|--------------------|-------|
|feed_id |user_id |writernm |pic                                      |contents |location |created_at          |islike |
|--------|--------|---------|-----------------------------------------|---------|---------|--------------------|-------|
|12      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |ㅁㄴㅇ      |ㅁㄴㅇ      |2024-11-29 16:17:53 |1      |
|12      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |ㅁㄴㅇ      |ㅁㄴㅇ      |2024-11-29 16:17:53 |1      |
|11      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |         |         |2024-11-29 16:12:11 |1      |
|11      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |         |         |2024-11-29 16:12:11 |1      |
|10      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |asd      |asd      |2024-11-29 16:05:52 |1      |
|10      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |asd      |asd      |2024-11-29 16:05:52 |1      |
|9       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |sda      |asd      |2024-11-29 16:00:32 |1      |
|9       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |sda      |asd      |2024-11-29 16:00:32 |1      |
|5       |2       |홍길동      |6d88f58a-0c38-4010-b703-3ccb187071d8.jpg |123      |중앙로      |2024-11-29 10:36:12 |0      |
|4       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |123      |그린컴      |2024-11-28 17:24:40 |1      |
|4       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |123      |그린컴      |2024-11-28 17:24:40 |1      |
|--------|--------|---------|-----------------------------------------|---------|---------|--------------------|-------|

[2024-12-03 10:46:53 DEBUGhttp-nio-0.0.0.0-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 12
 {executed in 1 msec}
[2024-12-03 10:46:53 INFO http-nio-0.0.0.0-8080-exec-3] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-03 10:46:53 DEBUGhttp-nio-0.0.0.0-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 12
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 10:46:53 INFO http-nio-0.0.0.0-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|24              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|23              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|22              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|21              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-03 10:46:53 DEBUGhttp-nio-0.0.0.0-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 12
 {executed in 0 msec}
[2024-12-03 10:46:53 INFO http-nio-0.0.0.0-8080-exec-3] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-03 10:46:53 DEBUGhttp-nio-0.0.0.0-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 12
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 10:46:53 INFO http-nio-0.0.0.0-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|24              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|23              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|22              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|21              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-03 10:46:53 DEBUGhttp-nio-0.0.0.0-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 11
 {executed in 0 msec}
[2024-12-03 10:46:53 INFO http-nio-0.0.0.0-8080-exec-3] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-03 10:46:53 DEBUGhttp-nio-0.0.0.0-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 11
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-03 10:46:53 INFO http-nio-0.0.0.0-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-03 10:46:53 DEBUGhttp-nio-0.0.0.0-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 11
 {executed in 1 msec}
[2024-12-03 10:46:53 INFO http-nio-0.0.0.0-8080-exec-3] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-03 10:46:53 DEBUGhttp-nio-0.0.0.0-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 11
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 10:46:53 INFO http-nio-0.0.0.0-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-03 10:46:53 DEBUGhttp-nio-0.0.0.0-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 10
 {executed in 0 msec}
[2024-12-03 10:46:53 INFO http-nio-0.0.0.0-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|53da69e7-7ae4-4e7b-b95b-a4c4ca01bdc8.jpg |
|-----------------------------------------|

[2024-12-03 10:46:53 DEBUGhttp-nio-0.0.0.0-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 10
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 10:46:53 INFO http-nio-0.0.0.0-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|29              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|28              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|27              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|26              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-03 10:46:53 DEBUGhttp-nio-0.0.0.0-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 10
 {executed in 0 msec}
[2024-12-03 10:46:53 INFO http-nio-0.0.0.0-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|53da69e7-7ae4-4e7b-b95b-a4c4ca01bdc8.jpg |
|-----------------------------------------|

[2024-12-03 10:46:53 DEBUGhttp-nio-0.0.0.0-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 10
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 10:46:53 INFO http-nio-0.0.0.0-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|29              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|28              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|27              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|26              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-03 10:46:53 DEBUGhttp-nio-0.0.0.0-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 9
 {executed in 0 msec}
[2024-12-03 10:46:53 INFO http-nio-0.0.0.0-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|7875594b-3649-4059-a29a-5c09feeab0ad.jpg |
|-----------------------------------------|

[2024-12-03 10:46:53 DEBUGhttp-nio-0.0.0.0-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 9
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-03 10:46:53 INFO http-nio-0.0.0.0-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-03 10:46:53 DEBUGhttp-nio-0.0.0.0-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 9
 {executed in 0 msec}
[2024-12-03 10:46:53 INFO http-nio-0.0.0.0-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|7875594b-3649-4059-a29a-5c09feeab0ad.jpg |
|-----------------------------------------|

[2024-12-03 10:46:53 DEBUGhttp-nio-0.0.0.0-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 9
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-03 10:46:53 INFO http-nio-0.0.0.0-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-03 10:46:53 DEBUGhttp-nio-0.0.0.0-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 5
 {executed in 0 msec}
[2024-12-03 10:46:53 INFO http-nio-0.0.0.0-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|675d9f82-0c18-4f6e-91a3-9858129aeb7e.jpg |
|c95cc439-e1e7-40f4-81fa-013b069631ca.jpg |
|f490d2ad-c64d-4006-a74a-8235888e3e87.jpg |
|-----------------------------------------|

[2024-12-03 10:46:53 DEBUGhttp-nio-0.0.0.0-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 5
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 10:46:53 INFO http-nio-0.0.0.0-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-03 10:46:53 DEBUGhttp-nio-0.0.0.0-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 4
 {executed in 0 msec}
[2024-12-03 10:46:53 INFO http-nio-0.0.0.0-8080-exec-3] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-03 10:46:53 DEBUGhttp-nio-0.0.0.0-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 4
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 10:46:53 INFO http-nio-0.0.0.0-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-03 10:46:53 DEBUGhttp-nio-0.0.0.0-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 4
 {executed in 0 msec}
[2024-12-03 10:46:53 INFO http-nio-0.0.0.0-8080-exec-3] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-03 10:46:53 DEBUGhttp-nio-0.0.0.0-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 4
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-03 10:46:53 INFO http-nio-0.0.0.0-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-03 10:55:04 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown initiated...
[2024-12-03 10:55:04 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown completed.
[2024-12-03 10:55:06 INFO restartedMain] [com.green.greengram.GreenGramApplication] Starting GreenGramVer2Application using Java 17.0.12 with PID 7496 (D:\BHB\GreenGramVer2\build\classes\java\main started by Administrator in D:\BHB\GreenGramVer2)
[2024-12-03 10:55:06 INFO restartedMain] [com.green.greengram.GreenGramApplication] No active profile set, falling back to 1 default profile: "default"
[2024-12-03 10:55:06 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-03 10:55:06 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-03 10:55:07 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-03 10:55:07 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-0.0.0.0-8080"]
[2024-12-03 10:55:07 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-03 10:55:07 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-03 10:55:07 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-03 10:55:07 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 777 ms
[2024-12-03 10:55:07 INFO restartedMain] [com.green.greengram.common.MyFileUtils] MyFileUtils - 생성자 D:/BHB/download/greengram_ver2
[2024-12-03 10:55:07 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-03 10:55:07 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-03 10:55:07 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-0.0.0.0-8080"]
[2024-12-03 10:55:07 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-03 10:55:07 INFO restartedMain] [com.green.greengram.GreenGramApplication] Started GreenGramVer2Application in 1.625 seconds (process running for 1.978)
[2024-12-03 10:55:10 INFO http-nio-0.0.0.0-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring DispatcherServlet 'dispatcherServlet'
[2024-12-03 10:55:10 INFO http-nio-0.0.0.0-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[2024-12-03 10:55:10 INFO http-nio-0.0.0.0-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Completed initialization in 1 ms
[2024-12-03 10:55:10 INFO http-nio-0.0.0.0-8080-exec-7] [com.green.greengram.feed.model.FeedGetReq] page : 1, size : null, userId : 1
[2024-12-03 10:55:10 INFO http-nio-0.0.0.0-8080-exec-7] [com.green.greengram.feed.FeedController] FeedController > getFeedList > p : FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=1)
[2024-12-03 10:55:10 INFO http-nio-0.0.0.0-8080-exec-7] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Starting...
[2024-12-03 10:55:11 INFO http-nio-0.0.0.0-8080-exec-7] [com.zaxxer.hikari.pool.HikariPool] HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@c94c903
[2024-12-03 10:55:11 INFO http-nio-0.0.0.0-8080-exec-7] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Start completed.
[2024-12-03 10:55:11 DEBUGhttp-nio-0.0.0.0-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId,
        C.user_id AS writerUserId,
        if(C.nick_name IS NULL, C.uid, C.nick_name) AS writerNm,
        C.pic AS writerPic,
        contents, location,
        A.created_at AS createdAt,
        if(D.feed_id IS NULL, 0, 1) AS isLike
        from feed A
        JOIN user C
        ON A.writer_user_id = C.user_id
        LEFT JOIN feed_like D
        ON C.user_id = D.user_id
        AND D.user_id = 1
        order BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 0 msec}
[2024-12-03 10:55:11 INFO http-nio-0.0.0.0-8080-exec-7] [jdbc.resultsettable] 
|--------|--------|---------|-----------------------------------------|---------|---------|--------------------|-------|
|feed_id |user_id |writernm |pic                                      |contents |location |created_at          |islike |
|--------|--------|---------|-----------------------------------------|---------|---------|--------------------|-------|
|12      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |ㅁㄴㅇ      |ㅁㄴㅇ      |2024-11-29 16:17:53 |1      |
|12      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |ㅁㄴㅇ      |ㅁㄴㅇ      |2024-11-29 16:17:53 |1      |
|11      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |         |         |2024-11-29 16:12:11 |1      |
|11      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |         |         |2024-11-29 16:12:11 |1      |
|10      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |asd      |asd      |2024-11-29 16:05:52 |1      |
|10      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |asd      |asd      |2024-11-29 16:05:52 |1      |
|9       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |sda      |asd      |2024-11-29 16:00:32 |1      |
|9       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |sda      |asd      |2024-11-29 16:00:32 |1      |
|5       |2       |홍길동      |6d88f58a-0c38-4010-b703-3ccb187071d8.jpg |123      |중앙로      |2024-11-29 10:36:12 |0      |
|4       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |123      |그린컴      |2024-11-28 17:24:40 |1      |
|4       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |123      |그린컴      |2024-11-28 17:24:40 |1      |
|--------|--------|---------|-----------------------------------------|---------|---------|--------------------|-------|

[2024-12-03 10:55:11 DEBUGhttp-nio-0.0.0.0-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 12
 {executed in 1 msec}
[2024-12-03 10:55:11 INFO http-nio-0.0.0.0-8080-exec-7] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-03 10:55:11 DEBUGhttp-nio-0.0.0.0-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 12
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 2 msec}
[2024-12-03 10:55:11 INFO http-nio-0.0.0.0-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|24              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|23              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|22              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|21              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-03 10:55:11 DEBUGhttp-nio-0.0.0.0-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 12
 {executed in 0 msec}
[2024-12-03 10:55:11 INFO http-nio-0.0.0.0-8080-exec-7] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-03 10:55:11 DEBUGhttp-nio-0.0.0.0-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 12
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-03 10:55:11 INFO http-nio-0.0.0.0-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|24              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|23              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|22              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|21              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-03 10:55:11 DEBUGhttp-nio-0.0.0.0-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 11
 {executed in 0 msec}
[2024-12-03 10:55:11 INFO http-nio-0.0.0.0-8080-exec-7] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-03 10:55:11 DEBUGhttp-nio-0.0.0.0-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 11
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-03 10:55:11 INFO http-nio-0.0.0.0-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-03 10:55:11 DEBUGhttp-nio-0.0.0.0-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 11
 {executed in 0 msec}
[2024-12-03 10:55:11 INFO http-nio-0.0.0.0-8080-exec-7] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-03 10:55:11 DEBUGhttp-nio-0.0.0.0-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 11
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 10:55:11 INFO http-nio-0.0.0.0-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-03 10:55:11 DEBUGhttp-nio-0.0.0.0-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 10
 {executed in 1 msec}
[2024-12-03 10:55:11 INFO http-nio-0.0.0.0-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|53da69e7-7ae4-4e7b-b95b-a4c4ca01bdc8.jpg |
|-----------------------------------------|

[2024-12-03 10:55:11 DEBUGhttp-nio-0.0.0.0-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 10
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 10:55:11 INFO http-nio-0.0.0.0-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|29              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|28              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|27              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|26              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-03 10:55:11 DEBUGhttp-nio-0.0.0.0-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 10
 {executed in 0 msec}
[2024-12-03 10:55:11 INFO http-nio-0.0.0.0-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|53da69e7-7ae4-4e7b-b95b-a4c4ca01bdc8.jpg |
|-----------------------------------------|

[2024-12-03 10:55:11 DEBUGhttp-nio-0.0.0.0-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 10
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-03 10:55:11 INFO http-nio-0.0.0.0-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|29              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|28              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|27              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|26              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-03 10:55:11 DEBUGhttp-nio-0.0.0.0-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 9
 {executed in 1 msec}
[2024-12-03 10:55:11 INFO http-nio-0.0.0.0-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|7875594b-3649-4059-a29a-5c09feeab0ad.jpg |
|-----------------------------------------|

[2024-12-03 10:55:11 DEBUGhttp-nio-0.0.0.0-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 9
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 10:55:11 INFO http-nio-0.0.0.0-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-03 10:55:11 DEBUGhttp-nio-0.0.0.0-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 9
 {executed in 0 msec}
[2024-12-03 10:55:11 INFO http-nio-0.0.0.0-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|7875594b-3649-4059-a29a-5c09feeab0ad.jpg |
|-----------------------------------------|

[2024-12-03 10:55:11 DEBUGhttp-nio-0.0.0.0-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 9
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 10:55:11 INFO http-nio-0.0.0.0-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-03 10:55:11 DEBUGhttp-nio-0.0.0.0-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 5
 {executed in 0 msec}
[2024-12-03 10:55:11 INFO http-nio-0.0.0.0-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|675d9f82-0c18-4f6e-91a3-9858129aeb7e.jpg |
|c95cc439-e1e7-40f4-81fa-013b069631ca.jpg |
|f490d2ad-c64d-4006-a74a-8235888e3e87.jpg |
|-----------------------------------------|

[2024-12-03 10:55:11 DEBUGhttp-nio-0.0.0.0-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 5
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-03 10:55:11 INFO http-nio-0.0.0.0-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-03 10:55:11 DEBUGhttp-nio-0.0.0.0-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 4
 {executed in 0 msec}
[2024-12-03 10:55:11 INFO http-nio-0.0.0.0-8080-exec-7] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-03 10:55:11 DEBUGhttp-nio-0.0.0.0-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 4
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 10:55:11 INFO http-nio-0.0.0.0-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-03 10:55:11 DEBUGhttp-nio-0.0.0.0-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 4
 {executed in 0 msec}
[2024-12-03 10:55:11 INFO http-nio-0.0.0.0-8080-exec-7] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-03 10:55:11 DEBUGhttp-nio-0.0.0.0-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 4
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 10:55:11 INFO http-nio-0.0.0.0-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-03 10:55:12 DEBUGhttp-nio-0.0.0.0-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 0
        ORDER BY A.feed_comment_id DESC
        LIMIT 3, 21
 {executed in 0 msec}
[2024-12-03 10:55:12 INFO http-nio-0.0.0.0-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-03 10:55:16 INFO http-nio-0.0.0.0-8080-exec-3] [com.green.greengram.feed.model.FeedGetReq] page : 1, size : null, userId : 1
[2024-12-03 10:55:16 INFO http-nio-0.0.0.0-8080-exec-3] [com.green.greengram.feed.FeedController] FeedController > getFeedList > p : FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=1)
[2024-12-03 10:55:16 DEBUGhttp-nio-0.0.0.0-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId,
        C.user_id AS writerUserId,
        if(C.nick_name IS NULL, C.uid, C.nick_name) AS writerNm,
        C.pic AS writerPic,
        contents, location,
        A.created_at AS createdAt,
        if(D.feed_id IS NULL, 0, 1) AS isLike
        from feed A
        JOIN user C
        ON A.writer_user_id = C.user_id
        LEFT JOIN feed_like D
        ON C.user_id = D.user_id
        AND D.user_id = 1
        order BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 0 msec}
[2024-12-03 10:55:16 INFO http-nio-0.0.0.0-8080-exec-3] [jdbc.resultsettable] 
|--------|--------|---------|-----------------------------------------|---------|---------|--------------------|-------|
|feed_id |user_id |writernm |pic                                      |contents |location |created_at          |islike |
|--------|--------|---------|-----------------------------------------|---------|---------|--------------------|-------|
|12      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |ㅁㄴㅇ      |ㅁㄴㅇ      |2024-11-29 16:17:53 |1      |
|12      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |ㅁㄴㅇ      |ㅁㄴㅇ      |2024-11-29 16:17:53 |1      |
|11      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |         |         |2024-11-29 16:12:11 |1      |
|11      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |         |         |2024-11-29 16:12:11 |1      |
|10      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |asd      |asd      |2024-11-29 16:05:52 |1      |
|10      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |asd      |asd      |2024-11-29 16:05:52 |1      |
|9       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |sda      |asd      |2024-11-29 16:00:32 |1      |
|9       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |sda      |asd      |2024-11-29 16:00:32 |1      |
|5       |2       |홍길동      |6d88f58a-0c38-4010-b703-3ccb187071d8.jpg |123      |중앙로      |2024-11-29 10:36:12 |0      |
|4       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |123      |그린컴      |2024-11-28 17:24:40 |1      |
|4       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |123      |그린컴      |2024-11-28 17:24:40 |1      |
|--------|--------|---------|-----------------------------------------|---------|---------|--------------------|-------|

[2024-12-03 10:55:16 DEBUGhttp-nio-0.0.0.0-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 12
 {executed in 0 msec}
[2024-12-03 10:55:16 INFO http-nio-0.0.0.0-8080-exec-3] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-03 10:55:16 DEBUGhttp-nio-0.0.0.0-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 12
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-03 10:55:16 INFO http-nio-0.0.0.0-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|24              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|23              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|22              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|21              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-03 10:55:16 DEBUGhttp-nio-0.0.0.0-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 12
 {executed in 1 msec}
[2024-12-03 10:55:16 INFO http-nio-0.0.0.0-8080-exec-3] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-03 10:55:16 DEBUGhttp-nio-0.0.0.0-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 12
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 10:55:16 INFO http-nio-0.0.0.0-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|24              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|23              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|22              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|21              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-03 10:55:16 DEBUGhttp-nio-0.0.0.0-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 11
 {executed in 0 msec}
[2024-12-03 10:55:16 INFO http-nio-0.0.0.0-8080-exec-3] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-03 10:55:16 DEBUGhttp-nio-0.0.0.0-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 11
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-03 10:55:16 INFO http-nio-0.0.0.0-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-03 10:55:16 DEBUGhttp-nio-0.0.0.0-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 11
 {executed in 0 msec}
[2024-12-03 10:55:16 INFO http-nio-0.0.0.0-8080-exec-3] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-03 10:55:16 DEBUGhttp-nio-0.0.0.0-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 11
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-03 10:55:16 INFO http-nio-0.0.0.0-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-03 10:55:16 DEBUGhttp-nio-0.0.0.0-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 10
 {executed in 0 msec}
[2024-12-03 10:55:16 INFO http-nio-0.0.0.0-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|53da69e7-7ae4-4e7b-b95b-a4c4ca01bdc8.jpg |
|-----------------------------------------|

[2024-12-03 10:55:16 DEBUGhttp-nio-0.0.0.0-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 10
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-03 10:55:16 INFO http-nio-0.0.0.0-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|29              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|28              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|27              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|26              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-03 10:55:16 DEBUGhttp-nio-0.0.0.0-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 10
 {executed in 0 msec}
[2024-12-03 10:55:16 INFO http-nio-0.0.0.0-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|53da69e7-7ae4-4e7b-b95b-a4c4ca01bdc8.jpg |
|-----------------------------------------|

[2024-12-03 10:55:16 DEBUGhttp-nio-0.0.0.0-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 10
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 10:55:16 INFO http-nio-0.0.0.0-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|29              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|28              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|27              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|26              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-03 10:55:16 DEBUGhttp-nio-0.0.0.0-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 9
 {executed in 0 msec}
[2024-12-03 10:55:16 INFO http-nio-0.0.0.0-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|7875594b-3649-4059-a29a-5c09feeab0ad.jpg |
|-----------------------------------------|

[2024-12-03 10:55:16 DEBUGhttp-nio-0.0.0.0-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 9
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 10:55:16 INFO http-nio-0.0.0.0-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-03 10:55:16 DEBUGhttp-nio-0.0.0.0-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 9
 {executed in 0 msec}
[2024-12-03 10:55:16 INFO http-nio-0.0.0.0-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|7875594b-3649-4059-a29a-5c09feeab0ad.jpg |
|-----------------------------------------|

[2024-12-03 10:55:16 DEBUGhttp-nio-0.0.0.0-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 9
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-03 10:55:16 INFO http-nio-0.0.0.0-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-03 10:55:16 DEBUGhttp-nio-0.0.0.0-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 5
 {executed in 0 msec}
[2024-12-03 10:55:16 INFO http-nio-0.0.0.0-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|675d9f82-0c18-4f6e-91a3-9858129aeb7e.jpg |
|c95cc439-e1e7-40f4-81fa-013b069631ca.jpg |
|f490d2ad-c64d-4006-a74a-8235888e3e87.jpg |
|-----------------------------------------|

[2024-12-03 10:55:17 DEBUGhttp-nio-0.0.0.0-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 5
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 10:55:17 INFO http-nio-0.0.0.0-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-03 10:55:17 DEBUGhttp-nio-0.0.0.0-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 4
 {executed in 0 msec}
[2024-12-03 10:55:17 INFO http-nio-0.0.0.0-8080-exec-3] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-03 10:55:17 DEBUGhttp-nio-0.0.0.0-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 4
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 10:55:17 INFO http-nio-0.0.0.0-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-03 10:55:17 DEBUGhttp-nio-0.0.0.0-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 4
 {executed in 0 msec}
[2024-12-03 10:55:17 INFO http-nio-0.0.0.0-8080-exec-3] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-03 10:55:17 DEBUGhttp-nio-0.0.0.0-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 4
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 10:55:17 INFO http-nio-0.0.0.0-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-03 11:08:07 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown initiated...
[2024-12-03 11:08:07 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown completed.
[2024-12-03 11:08:09 INFO restartedMain] [com.green.greengram.GreenGramApplication] Starting GreenGramVer2Application using Java 17.0.12 with PID 1804 (D:\BHB\GreenGramVer2\build\classes\java\main started by Administrator in D:\BHB\GreenGramVer2)
[2024-12-03 11:08:09 INFO restartedMain] [com.green.greengram.GreenGramApplication] No active profile set, falling back to 1 default profile: "default"
[2024-12-03 11:08:09 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-03 11:08:09 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-03 11:08:10 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-03 11:08:10 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-0.0.0.0-8080"]
[2024-12-03 11:08:10 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-03 11:08:10 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-03 11:08:10 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-03 11:08:10 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 797 ms
[2024-12-03 11:08:10 INFO restartedMain] [com.green.greengram.common.MyFileUtils] MyFileUtils - 생성자 D:/BHB/download/greengram_ver2
[2024-12-03 11:08:10 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-03 11:08:10 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-03 11:08:10 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-0.0.0.0-8080"]
[2024-12-03 11:08:10 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-03 11:08:10 INFO restartedMain] [com.green.greengram.GreenGramApplication] Started GreenGramVer2Application in 1.651 seconds (process running for 1.984)
[2024-12-03 11:08:12 INFO http-nio-0.0.0.0-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring DispatcherServlet 'dispatcherServlet'
[2024-12-03 11:08:12 INFO http-nio-0.0.0.0-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[2024-12-03 11:08:12 INFO http-nio-0.0.0.0-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Completed initialization in 1 ms
[2024-12-03 11:08:12 INFO http-nio-0.0.0.0-8080-exec-1] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Starting...
[2024-12-03 11:08:12 INFO http-nio-0.0.0.0-8080-exec-1] [com.zaxxer.hikari.pool.HikariPool] HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@3da4b23e
[2024-12-03 11:08:12 INFO http-nio-0.0.0.0-8080-exec-1] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Start completed.
[2024-12-03 11:08:12 DEBUGhttp-nio-0.0.0.0-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 0
        ORDER BY A.feed_comment_id DESC
        LIMIT 3, 21
 {executed in 0 msec}
[2024-12-03 11:08:12 INFO http-nio-0.0.0.0-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-03 11:08:14 INFO http-nio-0.0.0.0-8080-exec-3] [com.green.greengram.feed.model.FeedGetReq] page : 1, size : null, userId : 1
[2024-12-03 11:08:14 INFO http-nio-0.0.0.0-8080-exec-3] [com.green.greengram.feed.FeedController] FeedController > getFeedList > p : FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=1)
[2024-12-03 11:08:14 DEBUGhttp-nio-0.0.0.0-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId,
        C.user_id AS writerUserId,
        if(C.nick_name IS NULL, C.uid, C.nick_name) AS writerNm,
        C.pic AS writerPic,
        contents, location,
        A.created_at AS createdAt,
        if(D.feed_id IS NULL, 0, 1) AS isLike
        from feed A
        JOIN user C
        ON A.writer_user_id = C.user_id
        LEFT JOIN feed_like D
        ON C.user_id = D.user_id
        AND D.user_id = 1
        order BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 0 msec}
[2024-12-03 11:08:14 INFO http-nio-0.0.0.0-8080-exec-3] [jdbc.resultsettable] 
|--------|--------|---------|-----------------------------------------|---------|---------|--------------------|-------|
|feed_id |user_id |writernm |pic                                      |contents |location |created_at          |islike |
|--------|--------|---------|-----------------------------------------|---------|---------|--------------------|-------|
|12      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |ㅁㄴㅇ      |ㅁㄴㅇ      |2024-11-29 16:17:53 |1      |
|12      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |ㅁㄴㅇ      |ㅁㄴㅇ      |2024-11-29 16:17:53 |1      |
|11      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |         |         |2024-11-29 16:12:11 |1      |
|11      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |         |         |2024-11-29 16:12:11 |1      |
|10      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |asd      |asd      |2024-11-29 16:05:52 |1      |
|10      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |asd      |asd      |2024-11-29 16:05:52 |1      |
|9       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |sda      |asd      |2024-11-29 16:00:32 |1      |
|9       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |sda      |asd      |2024-11-29 16:00:32 |1      |
|5       |2       |홍길동      |6d88f58a-0c38-4010-b703-3ccb187071d8.jpg |123      |중앙로      |2024-11-29 10:36:12 |0      |
|4       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |123      |그린컴      |2024-11-28 17:24:40 |1      |
|4       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |123      |그린컴      |2024-11-28 17:24:40 |1      |
|--------|--------|---------|-----------------------------------------|---------|---------|--------------------|-------|

[2024-12-03 11:08:14 DEBUGhttp-nio-0.0.0.0-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 12
 {executed in 0 msec}
[2024-12-03 11:08:14 INFO http-nio-0.0.0.0-8080-exec-3] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-03 11:08:14 DEBUGhttp-nio-0.0.0.0-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 12
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 11:08:14 INFO http-nio-0.0.0.0-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|24              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|23              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|22              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|21              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-03 11:08:14 DEBUGhttp-nio-0.0.0.0-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 12
 {executed in 0 msec}
[2024-12-03 11:08:14 INFO http-nio-0.0.0.0-8080-exec-3] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-03 11:08:14 DEBUGhttp-nio-0.0.0.0-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 12
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 11:08:14 INFO http-nio-0.0.0.0-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|24              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|23              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|22              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|21              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-03 11:08:14 DEBUGhttp-nio-0.0.0.0-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 11
 {executed in 0 msec}
[2024-12-03 11:08:14 INFO http-nio-0.0.0.0-8080-exec-3] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-03 11:08:14 DEBUGhttp-nio-0.0.0.0-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 11
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 11:08:14 INFO http-nio-0.0.0.0-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-03 11:08:14 DEBUGhttp-nio-0.0.0.0-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 11
 {executed in 0 msec}
[2024-12-03 11:08:14 INFO http-nio-0.0.0.0-8080-exec-3] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-03 11:08:14 DEBUGhttp-nio-0.0.0.0-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 11
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-03 11:08:14 INFO http-nio-0.0.0.0-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-03 11:08:14 DEBUGhttp-nio-0.0.0.0-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 10
 {executed in 0 msec}
[2024-12-03 11:08:14 INFO http-nio-0.0.0.0-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|53da69e7-7ae4-4e7b-b95b-a4c4ca01bdc8.jpg |
|-----------------------------------------|

[2024-12-03 11:08:14 DEBUGhttp-nio-0.0.0.0-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 10
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 11:08:14 INFO http-nio-0.0.0.0-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|29              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|28              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|27              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|26              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-03 11:08:14 DEBUGhttp-nio-0.0.0.0-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 10
 {executed in 0 msec}
[2024-12-03 11:08:14 INFO http-nio-0.0.0.0-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|53da69e7-7ae4-4e7b-b95b-a4c4ca01bdc8.jpg |
|-----------------------------------------|

[2024-12-03 11:08:14 DEBUGhttp-nio-0.0.0.0-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 10
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 11:08:14 INFO http-nio-0.0.0.0-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|29              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|28              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|27              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|26              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-03 11:08:14 DEBUGhttp-nio-0.0.0.0-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 9
 {executed in 1 msec}
[2024-12-03 11:08:14 INFO http-nio-0.0.0.0-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|7875594b-3649-4059-a29a-5c09feeab0ad.jpg |
|-----------------------------------------|

[2024-12-03 11:08:14 DEBUGhttp-nio-0.0.0.0-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 9
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-03 11:08:14 INFO http-nio-0.0.0.0-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-03 11:08:14 DEBUGhttp-nio-0.0.0.0-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 9
 {executed in 0 msec}
[2024-12-03 11:08:14 INFO http-nio-0.0.0.0-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|7875594b-3649-4059-a29a-5c09feeab0ad.jpg |
|-----------------------------------------|

[2024-12-03 11:08:14 DEBUGhttp-nio-0.0.0.0-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 9
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-03 11:08:14 INFO http-nio-0.0.0.0-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-03 11:08:14 DEBUGhttp-nio-0.0.0.0-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 5
 {executed in 0 msec}
[2024-12-03 11:08:14 INFO http-nio-0.0.0.0-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|675d9f82-0c18-4f6e-91a3-9858129aeb7e.jpg |
|c95cc439-e1e7-40f4-81fa-013b069631ca.jpg |
|f490d2ad-c64d-4006-a74a-8235888e3e87.jpg |
|-----------------------------------------|

[2024-12-03 11:08:14 DEBUGhttp-nio-0.0.0.0-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 5
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-03 11:08:14 INFO http-nio-0.0.0.0-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-03 11:08:14 DEBUGhttp-nio-0.0.0.0-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 4
 {executed in 0 msec}
[2024-12-03 11:08:14 INFO http-nio-0.0.0.0-8080-exec-3] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-03 11:08:14 DEBUGhttp-nio-0.0.0.0-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 4
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-03 11:08:14 INFO http-nio-0.0.0.0-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-03 11:08:14 DEBUGhttp-nio-0.0.0.0-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 4
 {executed in 0 msec}
[2024-12-03 11:08:14 INFO http-nio-0.0.0.0-8080-exec-3] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-03 11:08:14 DEBUGhttp-nio-0.0.0.0-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 4
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 11:08:14 INFO http-nio-0.0.0.0-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-03 11:08:23 INFO http-nio-0.0.0.0-8080-exec-6] [com.green.greengram.feed.model.FeedGetReq] page : 1, size : null, userId : 1
[2024-12-03 11:08:23 INFO http-nio-0.0.0.0-8080-exec-6] [com.green.greengram.feed.FeedController] FeedController > getFeedList > p : FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=1)
[2024-12-03 11:08:23 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId,
        C.user_id AS writerUserId,
        if(C.nick_name IS NULL, C.uid, C.nick_name) AS writerNm,
        C.pic AS writerPic,
        contents, location,
        A.created_at AS createdAt,
        if(D.feed_id IS NULL, 0, 1) AS isLike
        from feed A
        JOIN user C
        ON A.writer_user_id = C.user_id
        LEFT JOIN feed_like D
        ON C.user_id = D.user_id
        AND D.user_id = 1
        order BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 0 msec}
[2024-12-03 11:08:23 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|--------|--------|---------|-----------------------------------------|---------|---------|--------------------|-------|
|feed_id |user_id |writernm |pic                                      |contents |location |created_at          |islike |
|--------|--------|---------|-----------------------------------------|---------|---------|--------------------|-------|
|12      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |ㅁㄴㅇ      |ㅁㄴㅇ      |2024-11-29 16:17:53 |1      |
|12      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |ㅁㄴㅇ      |ㅁㄴㅇ      |2024-11-29 16:17:53 |1      |
|11      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |         |         |2024-11-29 16:12:11 |1      |
|11      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |         |         |2024-11-29 16:12:11 |1      |
|10      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |asd      |asd      |2024-11-29 16:05:52 |1      |
|10      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |asd      |asd      |2024-11-29 16:05:52 |1      |
|9       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |sda      |asd      |2024-11-29 16:00:32 |1      |
|9       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |sda      |asd      |2024-11-29 16:00:32 |1      |
|5       |2       |홍길동      |6d88f58a-0c38-4010-b703-3ccb187071d8.jpg |123      |중앙로      |2024-11-29 10:36:12 |0      |
|4       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |123      |그린컴      |2024-11-28 17:24:40 |1      |
|4       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |123      |그린컴      |2024-11-28 17:24:40 |1      |
|--------|--------|---------|-----------------------------------------|---------|---------|--------------------|-------|

[2024-12-03 11:08:23 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 12
 {executed in 0 msec}
[2024-12-03 11:08:23 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-03 11:08:23 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 12
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 11:08:23 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|24              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|23              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|22              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|21              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-03 11:08:23 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 12
 {executed in 0 msec}
[2024-12-03 11:08:23 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-03 11:08:23 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 12
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 11:08:23 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|24              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|23              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|22              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|21              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-03 11:08:23 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 11
 {executed in 0 msec}
[2024-12-03 11:08:23 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-03 11:08:23 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 11
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 11:08:23 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-03 11:08:23 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 11
 {executed in 16 msec}
[2024-12-03 11:08:23 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-03 11:08:23 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 11
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 11:08:23 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-03 11:08:23 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 10
 {executed in 0 msec}
[2024-12-03 11:08:23 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|53da69e7-7ae4-4e7b-b95b-a4c4ca01bdc8.jpg |
|-----------------------------------------|

[2024-12-03 11:08:23 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 10
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 11:08:23 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|29              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|28              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|27              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|26              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-03 11:08:23 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 10
 {executed in 0 msec}
[2024-12-03 11:08:23 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|53da69e7-7ae4-4e7b-b95b-a4c4ca01bdc8.jpg |
|-----------------------------------------|

[2024-12-03 11:08:23 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 10
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 11:08:23 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|29              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|28              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|27              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|26              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-03 11:08:23 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 9
 {executed in 0 msec}
[2024-12-03 11:08:23 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|7875594b-3649-4059-a29a-5c09feeab0ad.jpg |
|-----------------------------------------|

[2024-12-03 11:08:23 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 9
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 11:08:23 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-03 11:08:23 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 9
 {executed in 0 msec}
[2024-12-03 11:08:23 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|7875594b-3649-4059-a29a-5c09feeab0ad.jpg |
|-----------------------------------------|

[2024-12-03 11:08:23 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 9
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 11:08:23 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-03 11:08:23 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 5
 {executed in 0 msec}
[2024-12-03 11:08:23 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|675d9f82-0c18-4f6e-91a3-9858129aeb7e.jpg |
|c95cc439-e1e7-40f4-81fa-013b069631ca.jpg |
|f490d2ad-c64d-4006-a74a-8235888e3e87.jpg |
|-----------------------------------------|

[2024-12-03 11:08:23 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 5
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 11:08:23 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-03 11:08:23 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 4
 {executed in 0 msec}
[2024-12-03 11:08:23 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-03 11:08:23 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 4
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 11:08:23 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-03 11:08:23 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 4
 {executed in 0 msec}
[2024-12-03 11:08:23 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-03 11:08:23 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 4
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 11:08:23 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-03 11:09:40 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown initiated...
[2024-12-03 11:09:40 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown completed.
[2024-12-03 11:09:42 INFO restartedMain] [com.green.greengram.GreenGramApplication] Starting GreenGramVer2Application using Java 17.0.12 with PID 5196 (D:\BHB\GreenGramVer2\build\classes\java\main started by Administrator in D:\BHB\GreenGramVer2)
[2024-12-03 11:09:42 INFO restartedMain] [com.green.greengram.GreenGramApplication] No active profile set, falling back to 1 default profile: "default"
[2024-12-03 11:09:42 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-03 11:09:42 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-03 11:09:43 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-03 11:09:43 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-0.0.0.0-8080"]
[2024-12-03 11:09:43 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-03 11:09:43 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-03 11:09:43 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-03 11:09:43 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 779 ms
[2024-12-03 11:09:43 INFO restartedMain] [com.green.greengram.common.MyFileUtils] MyFileUtils - 생성자 D:/BHB/download/greengram_ver2
[2024-12-03 11:09:43 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-03 11:09:43 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-03 11:09:43 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-0.0.0.0-8080"]
[2024-12-03 11:09:43 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-03 11:09:43 INFO restartedMain] [com.green.greengram.GreenGramApplication] Started GreenGramVer2Application in 1.625 seconds (process running for 1.98)
[2024-12-03 11:09:47 INFO http-nio-0.0.0.0-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring DispatcherServlet 'dispatcherServlet'
[2024-12-03 11:09:47 INFO http-nio-0.0.0.0-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[2024-12-03 11:09:47 INFO http-nio-0.0.0.0-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Completed initialization in 0 ms
[2024-12-03 11:09:47 INFO http-nio-0.0.0.0-8080-exec-6] [com.green.greengram.feed.model.FeedGetReq] page : 1, size : null, userId : 1
[2024-12-03 11:09:47 INFO http-nio-0.0.0.0-8080-exec-6] [com.green.greengram.feed.FeedController] FeedController > getFeedList > p : FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=1)
[2024-12-03 11:09:47 INFO http-nio-0.0.0.0-8080-exec-6] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Starting...
[2024-12-03 11:09:47 INFO http-nio-0.0.0.0-8080-exec-6] [com.zaxxer.hikari.pool.HikariPool] HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@50060c21
[2024-12-03 11:09:47 INFO http-nio-0.0.0.0-8080-exec-6] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Start completed.
[2024-12-03 11:09:47 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId,
        C.user_id AS writerUserId,
        if(C.nick_name IS NULL, C.uid, C.nick_name) AS writerNm,
        C.pic AS writerPic,
        contents, location,
        A.created_at AS createdAt,
        if(D.feed_id IS NULL, 0, 1) AS isLike
        from feed A
        JOIN user C
        ON A.writer_user_id = C.user_id
        LEFT JOIN feed_like D
        ON C.user_id = D.user_id
        AND D.user_id = 1
        order BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 0 msec}
[2024-12-03 11:09:47 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|--------|--------|---------|-----------------------------------------|---------|---------|--------------------|-------|
|feed_id |user_id |writernm |pic                                      |contents |location |created_at          |islike |
|--------|--------|---------|-----------------------------------------|---------|---------|--------------------|-------|
|12      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |ㅁㄴㅇ      |ㅁㄴㅇ      |2024-11-29 16:17:53 |1      |
|12      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |ㅁㄴㅇ      |ㅁㄴㅇ      |2024-11-29 16:17:53 |1      |
|11      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |         |         |2024-11-29 16:12:11 |1      |
|11      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |         |         |2024-11-29 16:12:11 |1      |
|10      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |asd      |asd      |2024-11-29 16:05:52 |1      |
|10      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |asd      |asd      |2024-11-29 16:05:52 |1      |
|9       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |sda      |asd      |2024-11-29 16:00:32 |1      |
|9       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |sda      |asd      |2024-11-29 16:00:32 |1      |
|5       |2       |홍길동      |6d88f58a-0c38-4010-b703-3ccb187071d8.jpg |123      |중앙로      |2024-11-29 10:36:12 |0      |
|4       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |123      |그린컴      |2024-11-28 17:24:40 |1      |
|4       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |123      |그린컴      |2024-11-28 17:24:40 |1      |
|--------|--------|---------|-----------------------------------------|---------|---------|--------------------|-------|

[2024-12-03 11:09:47 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 12
 {executed in 0 msec}
[2024-12-03 11:09:47 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-03 11:09:47 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 12
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 11:09:47 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|24              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|23              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|22              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|21              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-03 11:09:47 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 12
 {executed in 0 msec}
[2024-12-03 11:09:47 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-03 11:09:47 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 12
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 11:09:47 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|24              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|23              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|22              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|21              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-03 11:09:47 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 11
 {executed in 0 msec}
[2024-12-03 11:09:47 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-03 11:09:47 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 11
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 11:09:47 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-03 11:09:47 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 11
 {executed in 16 msec}
[2024-12-03 11:09:47 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-03 11:09:47 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 11
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 11:09:47 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-03 11:09:47 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 10
 {executed in 0 msec}
[2024-12-03 11:09:47 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|53da69e7-7ae4-4e7b-b95b-a4c4ca01bdc8.jpg |
|-----------------------------------------|

[2024-12-03 11:09:47 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 10
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 11:09:47 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|29              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|28              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|27              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|26              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-03 11:09:47 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 10
 {executed in 0 msec}
[2024-12-03 11:09:47 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|53da69e7-7ae4-4e7b-b95b-a4c4ca01bdc8.jpg |
|-----------------------------------------|

[2024-12-03 11:09:47 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 10
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 11:09:47 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|29              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|28              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|27              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|26              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-03 11:09:47 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 9
 {executed in 0 msec}
[2024-12-03 11:09:47 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|7875594b-3649-4059-a29a-5c09feeab0ad.jpg |
|-----------------------------------------|

[2024-12-03 11:09:47 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 9
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 11:09:47 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-03 11:09:47 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 9
 {executed in 0 msec}
[2024-12-03 11:09:47 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|7875594b-3649-4059-a29a-5c09feeab0ad.jpg |
|-----------------------------------------|

[2024-12-03 11:09:47 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 9
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 11:09:47 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-03 11:09:47 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 5
 {executed in 0 msec}
[2024-12-03 11:09:47 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|675d9f82-0c18-4f6e-91a3-9858129aeb7e.jpg |
|c95cc439-e1e7-40f4-81fa-013b069631ca.jpg |
|f490d2ad-c64d-4006-a74a-8235888e3e87.jpg |
|-----------------------------------------|

[2024-12-03 11:09:47 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 5
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 11:09:47 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-03 11:09:47 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 4
 {executed in 0 msec}
[2024-12-03 11:09:47 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-03 11:09:47 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 4
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 11:09:47 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-03 11:09:47 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 4
 {executed in 0 msec}
[2024-12-03 11:09:47 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-03 11:09:47 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 4
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 11:09:47 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-03 11:09:48 DEBUGhttp-nio-0.0.0.0-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 0
        ORDER BY A.feed_comment_id DESC
        LIMIT 3, 21
 {executed in 1 msec}
[2024-12-03 11:09:48 INFO http-nio-0.0.0.0-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-03 11:09:56 DEBUGhttp-nio-0.0.0.0-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 0
        ORDER BY A.feed_comment_id DESC
        LIMIT 3, 21
 {executed in 1 msec}
[2024-12-03 11:09:56 INFO http-nio-0.0.0.0-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-03 11:10:06 INFO http-nio-0.0.0.0-8080-exec-3] [com.green.greengram.feed.model.FeedGetReq] page : 1, size : null, userId : 1
[2024-12-03 11:10:06 INFO http-nio-0.0.0.0-8080-exec-3] [com.green.greengram.feed.FeedController] FeedController > getFeedList > p : FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=1)
[2024-12-03 11:10:06 DEBUGhttp-nio-0.0.0.0-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId,
        C.user_id AS writerUserId,
        if(C.nick_name IS NULL, C.uid, C.nick_name) AS writerNm,
        C.pic AS writerPic,
        contents, location,
        A.created_at AS createdAt,
        if(D.feed_id IS NULL, 0, 1) AS isLike
        from feed A
        JOIN user C
        ON A.writer_user_id = C.user_id
        LEFT JOIN feed_like D
        ON C.user_id = D.user_id
        AND D.user_id = 1
        order BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 0 msec}
[2024-12-03 11:10:06 INFO http-nio-0.0.0.0-8080-exec-3] [jdbc.resultsettable] 
|--------|--------|---------|-----------------------------------------|---------|---------|--------------------|-------|
|feed_id |user_id |writernm |pic                                      |contents |location |created_at          |islike |
|--------|--------|---------|-----------------------------------------|---------|---------|--------------------|-------|
|12      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |ㅁㄴㅇ      |ㅁㄴㅇ      |2024-11-29 16:17:53 |1      |
|12      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |ㅁㄴㅇ      |ㅁㄴㅇ      |2024-11-29 16:17:53 |1      |
|11      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |         |         |2024-11-29 16:12:11 |1      |
|11      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |         |         |2024-11-29 16:12:11 |1      |
|10      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |asd      |asd      |2024-11-29 16:05:52 |1      |
|10      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |asd      |asd      |2024-11-29 16:05:52 |1      |
|9       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |sda      |asd      |2024-11-29 16:00:32 |1      |
|9       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |sda      |asd      |2024-11-29 16:00:32 |1      |
|5       |2       |홍길동      |6d88f58a-0c38-4010-b703-3ccb187071d8.jpg |123      |중앙로      |2024-11-29 10:36:12 |0      |
|4       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |123      |그린컴      |2024-11-28 17:24:40 |1      |
|4       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |123      |그린컴      |2024-11-28 17:24:40 |1      |
|--------|--------|---------|-----------------------------------------|---------|---------|--------------------|-------|

[2024-12-03 11:10:06 DEBUGhttp-nio-0.0.0.0-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 12
 {executed in 0 msec}
[2024-12-03 11:10:06 INFO http-nio-0.0.0.0-8080-exec-3] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-03 11:10:06 DEBUGhttp-nio-0.0.0.0-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 12
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 11:10:06 INFO http-nio-0.0.0.0-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|24              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|23              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|22              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|21              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-03 11:10:06 DEBUGhttp-nio-0.0.0.0-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 12
 {executed in 0 msec}
[2024-12-03 11:10:06 INFO http-nio-0.0.0.0-8080-exec-3] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-03 11:10:06 DEBUGhttp-nio-0.0.0.0-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 12
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 11:10:06 INFO http-nio-0.0.0.0-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|24              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|23              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|22              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|21              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-03 11:10:06 DEBUGhttp-nio-0.0.0.0-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 11
 {executed in 0 msec}
[2024-12-03 11:10:06 INFO http-nio-0.0.0.0-8080-exec-3] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-03 11:10:06 DEBUGhttp-nio-0.0.0.0-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 11
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 11:10:06 INFO http-nio-0.0.0.0-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-03 11:10:06 DEBUGhttp-nio-0.0.0.0-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 11
 {executed in 0 msec}
[2024-12-03 11:10:06 INFO http-nio-0.0.0.0-8080-exec-3] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-03 11:10:06 DEBUGhttp-nio-0.0.0.0-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 11
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 11:10:06 INFO http-nio-0.0.0.0-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-03 11:10:06 DEBUGhttp-nio-0.0.0.0-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 10
 {executed in 0 msec}
[2024-12-03 11:10:06 INFO http-nio-0.0.0.0-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|53da69e7-7ae4-4e7b-b95b-a4c4ca01bdc8.jpg |
|-----------------------------------------|

[2024-12-03 11:10:06 DEBUGhttp-nio-0.0.0.0-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 10
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 11:10:06 INFO http-nio-0.0.0.0-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|29              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|28              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|27              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|26              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-03 11:10:06 DEBUGhttp-nio-0.0.0.0-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 10
 {executed in 0 msec}
[2024-12-03 11:10:06 INFO http-nio-0.0.0.0-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|53da69e7-7ae4-4e7b-b95b-a4c4ca01bdc8.jpg |
|-----------------------------------------|

[2024-12-03 11:10:06 DEBUGhttp-nio-0.0.0.0-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 10
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 11:10:06 INFO http-nio-0.0.0.0-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|29              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|28              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|27              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|26              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-03 11:10:06 DEBUGhttp-nio-0.0.0.0-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 9
 {executed in 0 msec}
[2024-12-03 11:10:06 INFO http-nio-0.0.0.0-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|7875594b-3649-4059-a29a-5c09feeab0ad.jpg |
|-----------------------------------------|

[2024-12-03 11:10:06 DEBUGhttp-nio-0.0.0.0-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 9
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 11:10:06 INFO http-nio-0.0.0.0-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-03 11:10:06 DEBUGhttp-nio-0.0.0.0-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 9
 {executed in 0 msec}
[2024-12-03 11:10:06 INFO http-nio-0.0.0.0-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|7875594b-3649-4059-a29a-5c09feeab0ad.jpg |
|-----------------------------------------|

[2024-12-03 11:10:06 DEBUGhttp-nio-0.0.0.0-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 9
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 11:10:06 INFO http-nio-0.0.0.0-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-03 11:10:06 DEBUGhttp-nio-0.0.0.0-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 5
 {executed in 0 msec}
[2024-12-03 11:10:06 INFO http-nio-0.0.0.0-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|675d9f82-0c18-4f6e-91a3-9858129aeb7e.jpg |
|c95cc439-e1e7-40f4-81fa-013b069631ca.jpg |
|f490d2ad-c64d-4006-a74a-8235888e3e87.jpg |
|-----------------------------------------|

[2024-12-03 11:10:06 DEBUGhttp-nio-0.0.0.0-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 5
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 11:10:06 INFO http-nio-0.0.0.0-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-03 11:10:06 DEBUGhttp-nio-0.0.0.0-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 4
 {executed in 0 msec}
[2024-12-03 11:10:06 INFO http-nio-0.0.0.0-8080-exec-3] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-03 11:10:06 DEBUGhttp-nio-0.0.0.0-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 4
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 11:10:06 INFO http-nio-0.0.0.0-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-03 11:10:06 DEBUGhttp-nio-0.0.0.0-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 4
 {executed in 0 msec}
[2024-12-03 11:10:06 INFO http-nio-0.0.0.0-8080-exec-3] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-03 11:10:06 DEBUGhttp-nio-0.0.0.0-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 4
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 11:10:06 INFO http-nio-0.0.0.0-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-03 11:10:13 DEBUGhttp-nio-0.0.0.0-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 0
        ORDER BY A.feed_comment_id DESC
        LIMIT 3, 21
 {executed in 1 msec}
[2024-12-03 11:10:13 INFO http-nio-0.0.0.0-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-03 11:14:31 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown initiated...
[2024-12-03 11:14:31 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown completed.
[2024-12-03 11:14:33 INFO restartedMain] [com.green.greengram.GreenGramApplication] Starting GreenGramVer2Application using Java 17.0.12 with PID 6292 (D:\BHB\GreenGramVer2\build\classes\java\main started by Administrator in D:\BHB\GreenGramVer2)
[2024-12-03 11:14:33 INFO restartedMain] [com.green.greengram.GreenGramApplication] No active profile set, falling back to 1 default profile: "default"
[2024-12-03 11:14:33 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-03 11:14:33 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-03 11:14:34 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-03 11:14:34 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-0.0.0.0-8080"]
[2024-12-03 11:14:34 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-03 11:14:34 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-03 11:14:34 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-03 11:14:34 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 770 ms
[2024-12-03 11:14:34 INFO restartedMain] [com.green.greengram.common.MyFileUtils] MyFileUtils - 생성자 D:/BHB/download/greengram_ver2
[2024-12-03 11:14:34 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-03 11:14:34 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-03 11:14:34 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-0.0.0.0-8080"]
[2024-12-03 11:14:34 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-03 11:14:34 INFO restartedMain] [com.green.greengram.GreenGramApplication] Started GreenGramVer2Application in 1.724 seconds (process running for 2.076)
[2024-12-03 11:14:37 INFO http-nio-0.0.0.0-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring DispatcherServlet 'dispatcherServlet'
[2024-12-03 11:14:37 INFO http-nio-0.0.0.0-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[2024-12-03 11:14:37 INFO http-nio-0.0.0.0-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Completed initialization in 0 ms
[2024-12-03 11:14:37 INFO http-nio-0.0.0.0-8080-exec-8] [com.green.greengram.feed.model.FeedGetReq] page : 1, size : null, userId : 1
[2024-12-03 11:14:37 INFO http-nio-0.0.0.0-8080-exec-8] [com.green.greengram.feed.FeedController] FeedController > getFeedList > p : FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=1)
[2024-12-03 11:14:37 INFO http-nio-0.0.0.0-8080-exec-8] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Starting...
[2024-12-03 11:14:38 INFO http-nio-0.0.0.0-8080-exec-8] [com.zaxxer.hikari.pool.HikariPool] HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@44dd7bbc
[2024-12-03 11:14:38 INFO http-nio-0.0.0.0-8080-exec-8] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Start completed.
[2024-12-03 11:14:38 DEBUGhttp-nio-0.0.0.0-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId,
        C.user_id AS writerUserId,
        if(C.nick_name IS NULL, C.uid, C.nick_name) AS writerNm,
        C.pic AS writerPic,
        contents, location,
        A.created_at AS createdAt,
        if(D.feed_id IS NULL, 0, 1) AS isLike
        from feed A
        JOIN user C
        ON A.writer_user_id = C.user_id
        LEFT JOIN feed_like D
        ON C.user_id = D.user_id
        AND D.user_id = 1
        order BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 0 msec}
[2024-12-03 11:14:38 INFO http-nio-0.0.0.0-8080-exec-8] [jdbc.resultsettable] 
|--------|--------|---------|-----------------------------------------|---------|---------|--------------------|-------|
|feed_id |user_id |writernm |pic                                      |contents |location |created_at          |islike |
|--------|--------|---------|-----------------------------------------|---------|---------|--------------------|-------|
|12      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |ㅁㄴㅇ      |ㅁㄴㅇ      |2024-11-29 16:17:53 |1      |
|12      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |ㅁㄴㅇ      |ㅁㄴㅇ      |2024-11-29 16:17:53 |1      |
|11      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |         |         |2024-11-29 16:12:11 |1      |
|11      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |         |         |2024-11-29 16:12:11 |1      |
|10      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |asd      |asd      |2024-11-29 16:05:52 |1      |
|10      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |asd      |asd      |2024-11-29 16:05:52 |1      |
|9       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |sda      |asd      |2024-11-29 16:00:32 |1      |
|9       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |sda      |asd      |2024-11-29 16:00:32 |1      |
|5       |2       |홍길동      |6d88f58a-0c38-4010-b703-3ccb187071d8.jpg |123      |중앙로      |2024-11-29 10:36:12 |0      |
|4       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |123      |그린컴      |2024-11-28 17:24:40 |1      |
|4       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |123      |그린컴      |2024-11-28 17:24:40 |1      |
|--------|--------|---------|-----------------------------------------|---------|---------|--------------------|-------|

[2024-12-03 11:14:38 DEBUGhttp-nio-0.0.0.0-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 12
 {executed in 0 msec}
[2024-12-03 11:14:38 INFO http-nio-0.0.0.0-8080-exec-8] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-03 11:14:38 DEBUGhttp-nio-0.0.0.0-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 12
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 11:14:38 INFO http-nio-0.0.0.0-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|24              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|23              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|22              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|21              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-03 11:14:38 DEBUGhttp-nio-0.0.0.0-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 12
 {executed in 0 msec}
[2024-12-03 11:14:38 INFO http-nio-0.0.0.0-8080-exec-8] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-03 11:14:38 DEBUGhttp-nio-0.0.0.0-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 12
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 11:14:38 INFO http-nio-0.0.0.0-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|24              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|23              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|22              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|21              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-03 11:14:38 DEBUGhttp-nio-0.0.0.0-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 11
 {executed in 0 msec}
[2024-12-03 11:14:38 INFO http-nio-0.0.0.0-8080-exec-8] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-03 11:14:38 DEBUGhttp-nio-0.0.0.0-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 11
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 11:14:38 INFO http-nio-0.0.0.0-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-03 11:14:38 DEBUGhttp-nio-0.0.0.0-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 11
 {executed in 0 msec}
[2024-12-03 11:14:38 INFO http-nio-0.0.0.0-8080-exec-8] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-03 11:14:38 DEBUGhttp-nio-0.0.0.0-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 11
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 11:14:38 INFO http-nio-0.0.0.0-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-03 11:14:38 DEBUGhttp-nio-0.0.0.0-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 10
 {executed in 0 msec}
[2024-12-03 11:14:38 INFO http-nio-0.0.0.0-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|53da69e7-7ae4-4e7b-b95b-a4c4ca01bdc8.jpg |
|-----------------------------------------|

[2024-12-03 11:14:38 DEBUGhttp-nio-0.0.0.0-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 10
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 11:14:38 INFO http-nio-0.0.0.0-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|29              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|28              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|27              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|26              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-03 11:14:38 DEBUGhttp-nio-0.0.0.0-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 10
 {executed in 15 msec}
[2024-12-03 11:14:38 INFO http-nio-0.0.0.0-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|53da69e7-7ae4-4e7b-b95b-a4c4ca01bdc8.jpg |
|-----------------------------------------|

[2024-12-03 11:14:38 DEBUGhttp-nio-0.0.0.0-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 10
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 11:14:38 INFO http-nio-0.0.0.0-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|29              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|28              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|27              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|26              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-03 11:14:38 DEBUGhttp-nio-0.0.0.0-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 9
 {executed in 0 msec}
[2024-12-03 11:14:38 INFO http-nio-0.0.0.0-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|7875594b-3649-4059-a29a-5c09feeab0ad.jpg |
|-----------------------------------------|

[2024-12-03 11:14:38 DEBUGhttp-nio-0.0.0.0-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 9
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 11:14:38 INFO http-nio-0.0.0.0-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-03 11:14:38 DEBUGhttp-nio-0.0.0.0-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 9
 {executed in 0 msec}
[2024-12-03 11:14:38 INFO http-nio-0.0.0.0-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|7875594b-3649-4059-a29a-5c09feeab0ad.jpg |
|-----------------------------------------|

[2024-12-03 11:14:38 DEBUGhttp-nio-0.0.0.0-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 9
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 11:14:38 INFO http-nio-0.0.0.0-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-03 11:14:38 DEBUGhttp-nio-0.0.0.0-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 5
 {executed in 0 msec}
[2024-12-03 11:14:38 INFO http-nio-0.0.0.0-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|675d9f82-0c18-4f6e-91a3-9858129aeb7e.jpg |
|c95cc439-e1e7-40f4-81fa-013b069631ca.jpg |
|f490d2ad-c64d-4006-a74a-8235888e3e87.jpg |
|-----------------------------------------|

[2024-12-03 11:14:38 DEBUGhttp-nio-0.0.0.0-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 5
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 11:14:38 INFO http-nio-0.0.0.0-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-03 11:14:38 DEBUGhttp-nio-0.0.0.0-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 4
 {executed in 0 msec}
[2024-12-03 11:14:38 INFO http-nio-0.0.0.0-8080-exec-8] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-03 11:14:38 DEBUGhttp-nio-0.0.0.0-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 4
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 11:14:38 INFO http-nio-0.0.0.0-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-03 11:14:38 DEBUGhttp-nio-0.0.0.0-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 4
 {executed in 0 msec}
[2024-12-03 11:14:38 INFO http-nio-0.0.0.0-8080-exec-8] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-03 11:14:38 DEBUGhttp-nio-0.0.0.0-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 4
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 11:14:38 INFO http-nio-0.0.0.0-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-03 11:14:39 DEBUGhttp-nio-0.0.0.0-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 0
        ORDER BY A.feed_comment_id DESC
        LIMIT 3, 21
 {executed in 0 msec}
[2024-12-03 11:14:39 INFO http-nio-0.0.0.0-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-03 11:15:02 DEBUGhttp-nio-0.0.0.0-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. insert into feed
        set writer_user_id = 1
        , contents = 'd'
        , location = 'd'
 {executed in 5 msec}
[2024-12-03 11:15:02 DEBUGhttp-nio-0.0.0.0-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
1. getGeneratedKeys on query: insert into feed
        set writer_user_id = 1
        , contents = 'd'
        , location = 'd'
 {executed in 0 msec}
[2024-12-03 11:15:02 INFO http-nio-0.0.0.0-8080-exec-1] [jdbc.resultsettable] 
|----------|
|insert_id |
|----------|
|13        |
|----------|

[2024-12-03 11:15:02 DEBUGhttp-nio-0.0.0.0-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. insert into feed_pics
        (feed_id, pic)
        values
         (  
            13, '7af273d9-3528-498f-b249-e48a4bc99755.jpg'
         )
 {executed in 0 msec}
[2024-12-03 11:15:05 INFO http-nio-0.0.0.0-8080-exec-7] [com.green.greengram.feed.model.FeedGetReq] page : 1, size : null, userId : 1
[2024-12-03 11:15:05 INFO http-nio-0.0.0.0-8080-exec-7] [com.green.greengram.feed.FeedController] FeedController > getFeedList > p : FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=1)
[2024-12-03 11:15:05 DEBUGhttp-nio-0.0.0.0-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId,
        C.user_id AS writerUserId,
        if(C.nick_name IS NULL, C.uid, C.nick_name) AS writerNm,
        C.pic AS writerPic,
        contents, location,
        A.created_at AS createdAt,
        if(D.feed_id IS NULL, 0, 1) AS isLike
        from feed A
        JOIN user C
        ON A.writer_user_id = C.user_id
        LEFT JOIN feed_like D
        ON C.user_id = D.user_id
        AND D.user_id = 1
        order BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 0 msec}
[2024-12-03 11:15:05 INFO http-nio-0.0.0.0-8080-exec-7] [jdbc.resultsettable] 
|--------|--------|---------|-----------------------------------------|---------|---------|--------------------|-------|
|feed_id |user_id |writernm |pic                                      |contents |location |created_at          |islike |
|--------|--------|---------|-----------------------------------------|---------|---------|--------------------|-------|
|13      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |d        |d        |2024-12-03 11:15:02 |1      |
|13      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |d        |d        |2024-12-03 11:15:02 |1      |
|12      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |ㅁㄴㅇ      |ㅁㄴㅇ      |2024-11-29 16:17:53 |1      |
|12      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |ㅁㄴㅇ      |ㅁㄴㅇ      |2024-11-29 16:17:53 |1      |
|11      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |         |         |2024-11-29 16:12:11 |1      |
|11      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |         |         |2024-11-29 16:12:11 |1      |
|10      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |asd      |asd      |2024-11-29 16:05:52 |1      |
|10      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |asd      |asd      |2024-11-29 16:05:52 |1      |
|9       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |sda      |asd      |2024-11-29 16:00:32 |1      |
|9       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |sda      |asd      |2024-11-29 16:00:32 |1      |
|5       |2       |홍길동      |6d88f58a-0c38-4010-b703-3ccb187071d8.jpg |123      |중앙로      |2024-11-29 10:36:12 |0      |
|4       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |123      |그린컴      |2024-11-28 17:24:40 |1      |
|4       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |123      |그린컴      |2024-11-28 17:24:40 |1      |
|--------|--------|---------|-----------------------------------------|---------|---------|--------------------|-------|

[2024-12-03 11:15:05 DEBUGhttp-nio-0.0.0.0-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 13
 {executed in 0 msec}
[2024-12-03 11:15:05 INFO http-nio-0.0.0.0-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|7af273d9-3528-498f-b249-e48a4bc99755.jpg |
|-----------------------------------------|

[2024-12-03 11:15:05 DEBUGhttp-nio-0.0.0.0-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 13
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 11:15:05 INFO http-nio-0.0.0.0-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-03 11:15:05 DEBUGhttp-nio-0.0.0.0-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 13
 {executed in 0 msec}
[2024-12-03 11:15:05 INFO http-nio-0.0.0.0-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|7af273d9-3528-498f-b249-e48a4bc99755.jpg |
|-----------------------------------------|

[2024-12-03 11:15:05 DEBUGhttp-nio-0.0.0.0-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 13
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 11:15:05 INFO http-nio-0.0.0.0-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-03 11:15:05 DEBUGhttp-nio-0.0.0.0-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 12
 {executed in 0 msec}
[2024-12-03 11:15:05 INFO http-nio-0.0.0.0-8080-exec-7] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-03 11:15:05 DEBUGhttp-nio-0.0.0.0-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 12
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 11:15:05 INFO http-nio-0.0.0.0-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|24              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|23              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|22              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|21              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-03 11:15:05 DEBUGhttp-nio-0.0.0.0-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 12
 {executed in 0 msec}
[2024-12-03 11:15:05 INFO http-nio-0.0.0.0-8080-exec-7] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-03 11:15:05 DEBUGhttp-nio-0.0.0.0-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 12
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 11:15:05 INFO http-nio-0.0.0.0-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|24              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|23              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|22              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|21              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-03 11:15:05 DEBUGhttp-nio-0.0.0.0-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 11
 {executed in 0 msec}
[2024-12-03 11:15:05 INFO http-nio-0.0.0.0-8080-exec-7] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-03 11:15:05 DEBUGhttp-nio-0.0.0.0-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 11
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 11:15:05 INFO http-nio-0.0.0.0-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-03 11:15:05 DEBUGhttp-nio-0.0.0.0-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 11
 {executed in 0 msec}
[2024-12-03 11:15:05 INFO http-nio-0.0.0.0-8080-exec-7] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-03 11:15:05 DEBUGhttp-nio-0.0.0.0-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 11
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 11:15:05 INFO http-nio-0.0.0.0-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-03 11:15:05 DEBUGhttp-nio-0.0.0.0-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 10
 {executed in 0 msec}
[2024-12-03 11:15:05 INFO http-nio-0.0.0.0-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|53da69e7-7ae4-4e7b-b95b-a4c4ca01bdc8.jpg |
|-----------------------------------------|

[2024-12-03 11:15:05 DEBUGhttp-nio-0.0.0.0-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 10
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 11:15:05 INFO http-nio-0.0.0.0-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|29              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|28              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|27              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|26              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-03 11:15:05 DEBUGhttp-nio-0.0.0.0-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 10
 {executed in 0 msec}
[2024-12-03 11:15:05 INFO http-nio-0.0.0.0-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|53da69e7-7ae4-4e7b-b95b-a4c4ca01bdc8.jpg |
|-----------------------------------------|

[2024-12-03 11:15:05 DEBUGhttp-nio-0.0.0.0-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 10
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 11:15:05 INFO http-nio-0.0.0.0-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|29              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|28              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|27              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|26              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-03 11:15:05 DEBUGhttp-nio-0.0.0.0-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 9
 {executed in 0 msec}
[2024-12-03 11:15:05 INFO http-nio-0.0.0.0-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|7875594b-3649-4059-a29a-5c09feeab0ad.jpg |
|-----------------------------------------|

[2024-12-03 11:15:05 DEBUGhttp-nio-0.0.0.0-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 9
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 11:15:05 INFO http-nio-0.0.0.0-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-03 11:15:05 DEBUGhttp-nio-0.0.0.0-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 9
 {executed in 0 msec}
[2024-12-03 11:15:05 INFO http-nio-0.0.0.0-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|7875594b-3649-4059-a29a-5c09feeab0ad.jpg |
|-----------------------------------------|

[2024-12-03 11:15:05 DEBUGhttp-nio-0.0.0.0-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 9
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 11:15:05 INFO http-nio-0.0.0.0-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-03 11:15:05 DEBUGhttp-nio-0.0.0.0-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 5
 {executed in 0 msec}
[2024-12-03 11:15:05 INFO http-nio-0.0.0.0-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|675d9f82-0c18-4f6e-91a3-9858129aeb7e.jpg |
|c95cc439-e1e7-40f4-81fa-013b069631ca.jpg |
|f490d2ad-c64d-4006-a74a-8235888e3e87.jpg |
|-----------------------------------------|

[2024-12-03 11:15:05 DEBUGhttp-nio-0.0.0.0-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 5
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 11:15:05 INFO http-nio-0.0.0.0-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-03 11:15:05 DEBUGhttp-nio-0.0.0.0-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 4
 {executed in 0 msec}
[2024-12-03 11:15:05 INFO http-nio-0.0.0.0-8080-exec-7] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-03 11:15:05 DEBUGhttp-nio-0.0.0.0-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 4
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 11:15:05 INFO http-nio-0.0.0.0-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-03 11:15:05 DEBUGhttp-nio-0.0.0.0-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 4
 {executed in 0 msec}
[2024-12-03 11:15:05 INFO http-nio-0.0.0.0-8080-exec-7] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-03 11:15:05 DEBUGhttp-nio-0.0.0.0-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 4
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 11:15:05 INFO http-nio-0.0.0.0-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-03 11:15:13 DEBUGhttp-nio-0.0.0.0-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. insert into feed_comment
        set `feed_id` = 13
        , `user_id` = 1
        , `COMMENT` = '1'
 {executed in 16 msec}
[2024-12-03 11:15:13 DEBUGhttp-nio-0.0.0.0-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
1. getGeneratedKeys on query: insert into feed_comment
        set `feed_id` = 13
        , `user_id` = 1
        , `COMMENT` = '1'
 {executed in 0 msec}
[2024-12-03 11:15:13 INFO http-nio-0.0.0.0-8080-exec-2] [jdbc.resultsettable] 
|----------|
|insert_id |
|----------|
|30        |
|----------|

[2024-12-03 11:15:13 DEBUGhttp-nio-0.0.0.0-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. insert into feed_comment
        set `feed_id` = 13
        , `user_id` = 1
        , `COMMENT` = '2'
 {executed in 0 msec}
[2024-12-03 11:15:13 DEBUGhttp-nio-0.0.0.0-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
1. getGeneratedKeys on query: insert into feed_comment
        set `feed_id` = 13
        , `user_id` = 1
        , `COMMENT` = '2'
 {executed in 0 msec}
[2024-12-03 11:15:13 INFO http-nio-0.0.0.0-8080-exec-5] [jdbc.resultsettable] 
|----------|
|insert_id |
|----------|
|31        |
|----------|

[2024-12-03 11:15:13 DEBUGhttp-nio-0.0.0.0-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. insert into feed_comment
        set `feed_id` = 13
        , `user_id` = 1
        , `COMMENT` = '3'
 {executed in 1 msec}
[2024-12-03 11:15:13 DEBUGhttp-nio-0.0.0.0-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
1. getGeneratedKeys on query: insert into feed_comment
        set `feed_id` = 13
        , `user_id` = 1
        , `COMMENT` = '3'
 {executed in 0 msec}
[2024-12-03 11:15:13 INFO http-nio-0.0.0.0-8080-exec-8] [jdbc.resultsettable] 
|----------|
|insert_id |
|----------|
|32        |
|----------|

[2024-12-03 11:15:14 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. insert into feed_comment
        set `feed_id` = 13
        , `user_id` = 1
        , `COMMENT` = '6'
 {executed in 0 msec}
[2024-12-03 11:15:14 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
1. getGeneratedKeys on query: insert into feed_comment
        set `feed_id` = 13
        , `user_id` = 1
        , `COMMENT` = '6'
 {executed in 0 msec}
[2024-12-03 11:15:14 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|----------|
|insert_id |
|----------|
|33        |
|----------|

[2024-12-03 11:15:17 DEBUGhttp-nio-0.0.0.0-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. insert into feed_comment
        set `feed_id` = 13
        , `user_id` = 1
        , `COMMENT` = '7'
 {executed in 0 msec}
[2024-12-03 11:15:17 DEBUGhttp-nio-0.0.0.0-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
1. getGeneratedKeys on query: insert into feed_comment
        set `feed_id` = 13
        , `user_id` = 1
        , `COMMENT` = '7'
 {executed in 0 msec}
[2024-12-03 11:15:17 INFO http-nio-0.0.0.0-8080-exec-9] [jdbc.resultsettable] 
|----------|
|insert_id |
|----------|
|34        |
|----------|

[2024-12-03 11:15:18 DEBUGhttp-nio-0.0.0.0-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. insert into feed_comment
        set `feed_id` = 13
        , `user_id` = 1
        , `COMMENT` = '8'
 {executed in 0 msec}
[2024-12-03 11:15:18 DEBUGhttp-nio-0.0.0.0-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
1. getGeneratedKeys on query: insert into feed_comment
        set `feed_id` = 13
        , `user_id` = 1
        , `COMMENT` = '8'
 {executed in 0 msec}
[2024-12-03 11:15:18 INFO http-nio-0.0.0.0-8080-exec-7] [jdbc.resultsettable] 
|----------|
|insert_id |
|----------|
|35        |
|----------|

[2024-12-03 11:15:18 DEBUGhttp-nio-0.0.0.0-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. insert into feed_comment
        set `feed_id` = 13
        , `user_id` = 1
        , `COMMENT` = '9'
 {executed in 0 msec}
[2024-12-03 11:15:18 DEBUGhttp-nio-0.0.0.0-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
1. getGeneratedKeys on query: insert into feed_comment
        set `feed_id` = 13
        , `user_id` = 1
        , `COMMENT` = '9'
 {executed in 0 msec}
[2024-12-03 11:15:18 INFO http-nio-0.0.0.0-8080-exec-10] [jdbc.resultsettable] 
|----------|
|insert_id |
|----------|
|36        |
|----------|

[2024-12-03 11:15:19 DEBUGhttp-nio-0.0.0.0-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. insert into feed_comment
        set `feed_id` = 13
        , `user_id` = 1
        , `COMMENT` = '10'
 {executed in 0 msec}
[2024-12-03 11:15:19 DEBUGhttp-nio-0.0.0.0-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
1. getGeneratedKeys on query: insert into feed_comment
        set `feed_id` = 13
        , `user_id` = 1
        , `COMMENT` = '10'
 {executed in 0 msec}
[2024-12-03 11:15:19 INFO http-nio-0.0.0.0-8080-exec-1] [jdbc.resultsettable] 
|----------|
|insert_id |
|----------|
|37        |
|----------|

[2024-12-03 11:15:20 DEBUGhttp-nio-0.0.0.0-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. insert into feed_comment
        set `feed_id` = 13
        , `user_id` = 1
        , `COMMENT` = '11'
 {executed in 0 msec}
[2024-12-03 11:15:20 DEBUGhttp-nio-0.0.0.0-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
1. getGeneratedKeys on query: insert into feed_comment
        set `feed_id` = 13
        , `user_id` = 1
        , `COMMENT` = '11'
 {executed in 0 msec}
[2024-12-03 11:15:20 INFO http-nio-0.0.0.0-8080-exec-4] [jdbc.resultsettable] 
|----------|
|insert_id |
|----------|
|38        |
|----------|

[2024-12-03 11:15:21 DEBUGhttp-nio-0.0.0.0-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. insert into feed_comment
        set `feed_id` = 13
        , `user_id` = 1
        , `COMMENT` = '12'
 {executed in 0 msec}
[2024-12-03 11:15:21 DEBUGhttp-nio-0.0.0.0-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
1. getGeneratedKeys on query: insert into feed_comment
        set `feed_id` = 13
        , `user_id` = 1
        , `COMMENT` = '12'
 {executed in 0 msec}
[2024-12-03 11:15:21 INFO http-nio-0.0.0.0-8080-exec-3] [jdbc.resultsettable] 
|----------|
|insert_id |
|----------|
|39        |
|----------|

[2024-12-03 11:15:22 DEBUGhttp-nio-0.0.0.0-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. insert into feed_comment
        set `feed_id` = 13
        , `user_id` = 1
        , `COMMENT` = '13'
 {executed in 0 msec}
[2024-12-03 11:15:22 DEBUGhttp-nio-0.0.0.0-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
1. getGeneratedKeys on query: insert into feed_comment
        set `feed_id` = 13
        , `user_id` = 1
        , `COMMENT` = '13'
 {executed in 0 msec}
[2024-12-03 11:15:22 INFO http-nio-0.0.0.0-8080-exec-2] [jdbc.resultsettable] 
|----------|
|insert_id |
|----------|
|40        |
|----------|

[2024-12-03 11:15:22 DEBUGhttp-nio-0.0.0.0-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. insert into feed_comment
        set `feed_id` = 13
        , `user_id` = 1
        , `COMMENT` = '14'
 {executed in 16 msec}
[2024-12-03 11:15:22 DEBUGhttp-nio-0.0.0.0-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
1. getGeneratedKeys on query: insert into feed_comment
        set `feed_id` = 13
        , `user_id` = 1
        , `COMMENT` = '14'
 {executed in 0 msec}
[2024-12-03 11:15:22 INFO http-nio-0.0.0.0-8080-exec-5] [jdbc.resultsettable] 
|----------|
|insert_id |
|----------|
|41        |
|----------|

[2024-12-03 11:15:23 DEBUGhttp-nio-0.0.0.0-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. insert into feed_comment
        set `feed_id` = 13
        , `user_id` = 1
        , `COMMENT` = '15'
 {executed in 0 msec}
[2024-12-03 11:15:23 DEBUGhttp-nio-0.0.0.0-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
1. getGeneratedKeys on query: insert into feed_comment
        set `feed_id` = 13
        , `user_id` = 1
        , `COMMENT` = '15'
 {executed in 0 msec}
[2024-12-03 11:15:23 INFO http-nio-0.0.0.0-8080-exec-8] [jdbc.resultsettable] 
|----------|
|insert_id |
|----------|
|42        |
|----------|

[2024-12-03 11:15:23 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. insert into feed_comment
        set `feed_id` = 13
        , `user_id` = 1
        , `COMMENT` = '16'
 {executed in 0 msec}
[2024-12-03 11:15:23 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
1. getGeneratedKeys on query: insert into feed_comment
        set `feed_id` = 13
        , `user_id` = 1
        , `COMMENT` = '16'
 {executed in 0 msec}
[2024-12-03 11:15:23 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|----------|
|insert_id |
|----------|
|43        |
|----------|

[2024-12-03 11:15:24 DEBUGhttp-nio-0.0.0.0-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. insert into feed_comment
        set `feed_id` = 13
        , `user_id` = 1
        , `COMMENT` = '17'
 {executed in 0 msec}
[2024-12-03 11:15:24 DEBUGhttp-nio-0.0.0.0-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
1. getGeneratedKeys on query: insert into feed_comment
        set `feed_id` = 13
        , `user_id` = 1
        , `COMMENT` = '17'
 {executed in 0 msec}
[2024-12-03 11:15:24 INFO http-nio-0.0.0.0-8080-exec-9] [jdbc.resultsettable] 
|----------|
|insert_id |
|----------|
|44        |
|----------|

[2024-12-03 11:15:25 DEBUGhttp-nio-0.0.0.0-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. insert into feed_comment
        set `feed_id` = 13
        , `user_id` = 1
        , `COMMENT` = '18'
 {executed in 0 msec}
[2024-12-03 11:15:25 DEBUGhttp-nio-0.0.0.0-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
1. getGeneratedKeys on query: insert into feed_comment
        set `feed_id` = 13
        , `user_id` = 1
        , `COMMENT` = '18'
 {executed in 0 msec}
[2024-12-03 11:15:25 INFO http-nio-0.0.0.0-8080-exec-7] [jdbc.resultsettable] 
|----------|
|insert_id |
|----------|
|45        |
|----------|

[2024-12-03 11:15:26 DEBUGhttp-nio-0.0.0.0-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. insert into feed_comment
        set `feed_id` = 13
        , `user_id` = 1
        , `COMMENT` = '19'
 {executed in 0 msec}
[2024-12-03 11:15:26 DEBUGhttp-nio-0.0.0.0-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
1. getGeneratedKeys on query: insert into feed_comment
        set `feed_id` = 13
        , `user_id` = 1
        , `COMMENT` = '19'
 {executed in 0 msec}
[2024-12-03 11:15:26 INFO http-nio-0.0.0.0-8080-exec-10] [jdbc.resultsettable] 
|----------|
|insert_id |
|----------|
|46        |
|----------|

[2024-12-03 11:15:26 DEBUGhttp-nio-0.0.0.0-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. insert into feed_comment
        set `feed_id` = 13
        , `user_id` = 1
        , `COMMENT` = '20'
 {executed in 16 msec}
[2024-12-03 11:15:26 DEBUGhttp-nio-0.0.0.0-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
1. getGeneratedKeys on query: insert into feed_comment
        set `feed_id` = 13
        , `user_id` = 1
        , `COMMENT` = '20'
 {executed in 0 msec}
[2024-12-03 11:15:26 INFO http-nio-0.0.0.0-8080-exec-1] [jdbc.resultsettable] 
|----------|
|insert_id |
|----------|
|47        |
|----------|

[2024-12-03 11:15:27 DEBUGhttp-nio-0.0.0.0-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. insert into feed_comment
        set `feed_id` = 13
        , `user_id` = 1
        , `COMMENT` = '21'
 {executed in 0 msec}
[2024-12-03 11:15:27 DEBUGhttp-nio-0.0.0.0-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
1. getGeneratedKeys on query: insert into feed_comment
        set `feed_id` = 13
        , `user_id` = 1
        , `COMMENT` = '21'
 {executed in 0 msec}
[2024-12-03 11:15:27 INFO http-nio-0.0.0.0-8080-exec-4] [jdbc.resultsettable] 
|----------|
|insert_id |
|----------|
|48        |
|----------|

[2024-12-03 11:15:28 DEBUGhttp-nio-0.0.0.0-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. insert into feed_comment
        set `feed_id` = 13
        , `user_id` = 1
        , `COMMENT` = '22'
 {executed in 0 msec}
[2024-12-03 11:15:28 DEBUGhttp-nio-0.0.0.0-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
1. getGeneratedKeys on query: insert into feed_comment
        set `feed_id` = 13
        , `user_id` = 1
        , `COMMENT` = '22'
 {executed in 0 msec}
[2024-12-03 11:15:28 INFO http-nio-0.0.0.0-8080-exec-3] [jdbc.resultsettable] 
|----------|
|insert_id |
|----------|
|49        |
|----------|

[2024-12-03 11:15:28 DEBUGhttp-nio-0.0.0.0-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. insert into feed_comment
        set `feed_id` = 13
        , `user_id` = 1
        , `COMMENT` = '23'
 {executed in 0 msec}
[2024-12-03 11:15:28 DEBUGhttp-nio-0.0.0.0-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
1. getGeneratedKeys on query: insert into feed_comment
        set `feed_id` = 13
        , `user_id` = 1
        , `COMMENT` = '23'
 {executed in 0 msec}
[2024-12-03 11:15:28 INFO http-nio-0.0.0.0-8080-exec-2] [jdbc.resultsettable] 
|----------|
|insert_id |
|----------|
|50        |
|----------|

[2024-12-03 11:15:29 DEBUGhttp-nio-0.0.0.0-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. insert into feed_comment
        set `feed_id` = 13
        , `user_id` = 1
        , `COMMENT` = '24'
 {executed in 0 msec}
[2024-12-03 11:15:29 DEBUGhttp-nio-0.0.0.0-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
1. getGeneratedKeys on query: insert into feed_comment
        set `feed_id` = 13
        , `user_id` = 1
        , `COMMENT` = '24'
 {executed in 0 msec}
[2024-12-03 11:15:29 INFO http-nio-0.0.0.0-8080-exec-5] [jdbc.resultsettable] 
|----------|
|insert_id |
|----------|
|51        |
|----------|

[2024-12-03 11:15:29 DEBUGhttp-nio-0.0.0.0-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. insert into feed_comment
        set `feed_id` = 13
        , `user_id` = 1
        , `COMMENT` = '25'
 {executed in 0 msec}
[2024-12-03 11:15:29 DEBUGhttp-nio-0.0.0.0-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
1. getGeneratedKeys on query: insert into feed_comment
        set `feed_id` = 13
        , `user_id` = 1
        , `COMMENT` = '25'
 {executed in 0 msec}
[2024-12-03 11:15:29 INFO http-nio-0.0.0.0-8080-exec-8] [jdbc.resultsettable] 
|----------|
|insert_id |
|----------|
|52        |
|----------|

[2024-12-03 11:15:30 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. insert into feed_comment
        set `feed_id` = 13
        , `user_id` = 1
        , `COMMENT` = '26'
 {executed in 0 msec}
[2024-12-03 11:15:30 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
1. getGeneratedKeys on query: insert into feed_comment
        set `feed_id` = 13
        , `user_id` = 1
        , `COMMENT` = '26'
 {executed in 0 msec}
[2024-12-03 11:15:30 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|----------|
|insert_id |
|----------|
|53        |
|----------|

[2024-12-03 11:15:32 DEBUGhttp-nio-0.0.0.0-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. insert into feed_comment
        set `feed_id` = 13
        , `user_id` = 1
        , `COMMENT` = '27'
 {executed in 0 msec}
[2024-12-03 11:15:32 DEBUGhttp-nio-0.0.0.0-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
1. getGeneratedKeys on query: insert into feed_comment
        set `feed_id` = 13
        , `user_id` = 1
        , `COMMENT` = '27'
 {executed in 0 msec}
[2024-12-03 11:15:32 INFO http-nio-0.0.0.0-8080-exec-9] [jdbc.resultsettable] 
|----------|
|insert_id |
|----------|
|54        |
|----------|

[2024-12-03 11:15:33 DEBUGhttp-nio-0.0.0.0-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. insert into feed_comment
        set `feed_id` = 13
        , `user_id` = 1
        , `COMMENT` = '28'
 {executed in 0 msec}
[2024-12-03 11:15:33 DEBUGhttp-nio-0.0.0.0-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
1. getGeneratedKeys on query: insert into feed_comment
        set `feed_id` = 13
        , `user_id` = 1
        , `COMMENT` = '28'
 {executed in 0 msec}
[2024-12-03 11:15:33 INFO http-nio-0.0.0.0-8080-exec-7] [jdbc.resultsettable] 
|----------|
|insert_id |
|----------|
|55        |
|----------|

[2024-12-03 11:15:34 DEBUGhttp-nio-0.0.0.0-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. insert into feed_comment
        set `feed_id` = 13
        , `user_id` = 1
        , `COMMENT` = '29'
 {executed in 0 msec}
[2024-12-03 11:15:34 DEBUGhttp-nio-0.0.0.0-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
1. getGeneratedKeys on query: insert into feed_comment
        set `feed_id` = 13
        , `user_id` = 1
        , `COMMENT` = '29'
 {executed in 0 msec}
[2024-12-03 11:15:34 INFO http-nio-0.0.0.0-8080-exec-10] [jdbc.resultsettable] 
|----------|
|insert_id |
|----------|
|56        |
|----------|

[2024-12-03 11:15:35 DEBUGhttp-nio-0.0.0.0-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. insert into feed_comment
        set `feed_id` = 13
        , `user_id` = 1
        , `COMMENT` = '30'
 {executed in 0 msec}
[2024-12-03 11:15:35 DEBUGhttp-nio-0.0.0.0-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
1. getGeneratedKeys on query: insert into feed_comment
        set `feed_id` = 13
        , `user_id` = 1
        , `COMMENT` = '30'
 {executed in 0 msec}
[2024-12-03 11:15:35 INFO http-nio-0.0.0.0-8080-exec-1] [jdbc.resultsettable] 
|----------|
|insert_id |
|----------|
|57        |
|----------|

[2024-12-03 11:15:36 DEBUGhttp-nio-0.0.0.0-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. insert into feed_comment
        set `feed_id` = 13
        , `user_id` = 1
        , `COMMENT` = '31'
 {executed in 0 msec}
[2024-12-03 11:15:36 DEBUGhttp-nio-0.0.0.0-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
1. getGeneratedKeys on query: insert into feed_comment
        set `feed_id` = 13
        , `user_id` = 1
        , `COMMENT` = '31'
 {executed in 0 msec}
[2024-12-03 11:15:36 INFO http-nio-0.0.0.0-8080-exec-4] [jdbc.resultsettable] 
|----------|
|insert_id |
|----------|
|58        |
|----------|

[2024-12-03 11:15:37 DEBUGhttp-nio-0.0.0.0-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. insert into feed_comment
        set `feed_id` = 13
        , `user_id` = 1
        , `COMMENT` = '32'
 {executed in 0 msec}
[2024-12-03 11:15:37 DEBUGhttp-nio-0.0.0.0-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
1. getGeneratedKeys on query: insert into feed_comment
        set `feed_id` = 13
        , `user_id` = 1
        , `COMMENT` = '32'
 {executed in 0 msec}
[2024-12-03 11:15:37 INFO http-nio-0.0.0.0-8080-exec-3] [jdbc.resultsettable] 
|----------|
|insert_id |
|----------|
|59        |
|----------|

[2024-12-03 11:15:37 DEBUGhttp-nio-0.0.0.0-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. insert into feed_comment
        set `feed_id` = 13
        , `user_id` = 1
        , `COMMENT` = '33'
 {executed in 0 msec}
[2024-12-03 11:15:37 DEBUGhttp-nio-0.0.0.0-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
1. getGeneratedKeys on query: insert into feed_comment
        set `feed_id` = 13
        , `user_id` = 1
        , `COMMENT` = '33'
 {executed in 0 msec}
[2024-12-03 11:15:37 INFO http-nio-0.0.0.0-8080-exec-2] [jdbc.resultsettable] 
|----------|
|insert_id |
|----------|
|60        |
|----------|

[2024-12-03 11:15:39 DEBUGhttp-nio-0.0.0.0-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. insert into feed_comment
        set `feed_id` = 13
        , `user_id` = 1
        , `COMMENT` = '34'
 {executed in 0 msec}
[2024-12-03 11:15:39 DEBUGhttp-nio-0.0.0.0-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
1. getGeneratedKeys on query: insert into feed_comment
        set `feed_id` = 13
        , `user_id` = 1
        , `COMMENT` = '34'
 {executed in 0 msec}
[2024-12-03 11:15:39 INFO http-nio-0.0.0.0-8080-exec-5] [jdbc.resultsettable] 
|----------|
|insert_id |
|----------|
|61        |
|----------|

[2024-12-03 11:15:42 INFO http-nio-0.0.0.0-8080-exec-1] [com.green.greengram.feed.model.FeedGetReq] page : 1, size : null, userId : 1
[2024-12-03 11:15:42 INFO http-nio-0.0.0.0-8080-exec-1] [com.green.greengram.feed.FeedController] FeedController > getFeedList > p : FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=1)
[2024-12-03 11:15:42 DEBUGhttp-nio-0.0.0.0-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId,
        C.user_id AS writerUserId,
        if(C.nick_name IS NULL, C.uid, C.nick_name) AS writerNm,
        C.pic AS writerPic,
        contents, location,
        A.created_at AS createdAt,
        if(D.feed_id IS NULL, 0, 1) AS isLike
        from feed A
        JOIN user C
        ON A.writer_user_id = C.user_id
        LEFT JOIN feed_like D
        ON C.user_id = D.user_id
        AND D.user_id = 1
        order BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 0 msec}
[2024-12-03 11:15:42 INFO http-nio-0.0.0.0-8080-exec-1] [jdbc.resultsettable] 
|--------|--------|---------|-----------------------------------------|---------|---------|--------------------|-------|
|feed_id |user_id |writernm |pic                                      |contents |location |created_at          |islike |
|--------|--------|---------|-----------------------------------------|---------|---------|--------------------|-------|
|13      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |d        |d        |2024-12-03 11:15:02 |1      |
|13      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |d        |d        |2024-12-03 11:15:02 |1      |
|12      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |ㅁㄴㅇ      |ㅁㄴㅇ      |2024-11-29 16:17:53 |1      |
|12      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |ㅁㄴㅇ      |ㅁㄴㅇ      |2024-11-29 16:17:53 |1      |
|11      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |         |         |2024-11-29 16:12:11 |1      |
|11      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |         |         |2024-11-29 16:12:11 |1      |
|10      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |asd      |asd      |2024-11-29 16:05:52 |1      |
|10      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |asd      |asd      |2024-11-29 16:05:52 |1      |
|9       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |sda      |asd      |2024-11-29 16:00:32 |1      |
|9       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |sda      |asd      |2024-11-29 16:00:32 |1      |
|5       |2       |홍길동      |6d88f58a-0c38-4010-b703-3ccb187071d8.jpg |123      |중앙로      |2024-11-29 10:36:12 |0      |
|4       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |123      |그린컴      |2024-11-28 17:24:40 |1      |
|4       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |123      |그린컴      |2024-11-28 17:24:40 |1      |
|--------|--------|---------|-----------------------------------------|---------|---------|--------------------|-------|

[2024-12-03 11:15:42 DEBUGhttp-nio-0.0.0.0-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 13
 {executed in 0 msec}
[2024-12-03 11:15:42 INFO http-nio-0.0.0.0-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|7af273d9-3528-498f-b249-e48a4bc99755.jpg |
|-----------------------------------------|

[2024-12-03 11:15:42 DEBUGhttp-nio-0.0.0.0-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 13
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 11:15:42 INFO http-nio-0.0.0.0-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|61              |34      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|60              |33      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|59              |32      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|58              |31      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-03 11:15:42 DEBUGhttp-nio-0.0.0.0-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 13
 {executed in 0 msec}
[2024-12-03 11:15:42 INFO http-nio-0.0.0.0-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|7af273d9-3528-498f-b249-e48a4bc99755.jpg |
|-----------------------------------------|

[2024-12-03 11:15:42 DEBUGhttp-nio-0.0.0.0-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 13
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 11:15:42 INFO http-nio-0.0.0.0-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|61              |34      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|60              |33      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|59              |32      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|58              |31      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-03 11:15:42 DEBUGhttp-nio-0.0.0.0-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 12
 {executed in 0 msec}
[2024-12-03 11:15:42 INFO http-nio-0.0.0.0-8080-exec-1] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-03 11:15:42 DEBUGhttp-nio-0.0.0.0-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 12
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 11:15:42 INFO http-nio-0.0.0.0-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|24              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|23              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|22              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|21              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-03 11:15:42 DEBUGhttp-nio-0.0.0.0-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 12
 {executed in 0 msec}
[2024-12-03 11:15:42 INFO http-nio-0.0.0.0-8080-exec-1] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-03 11:15:42 DEBUGhttp-nio-0.0.0.0-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 12
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 11:15:42 INFO http-nio-0.0.0.0-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|24              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|23              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|22              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|21              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-03 11:15:42 DEBUGhttp-nio-0.0.0.0-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 11
 {executed in 0 msec}
[2024-12-03 11:15:42 INFO http-nio-0.0.0.0-8080-exec-1] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-03 11:15:42 DEBUGhttp-nio-0.0.0.0-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 11
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 11:15:42 INFO http-nio-0.0.0.0-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-03 11:15:42 DEBUGhttp-nio-0.0.0.0-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 11
 {executed in 0 msec}
[2024-12-03 11:15:42 INFO http-nio-0.0.0.0-8080-exec-1] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-03 11:15:42 DEBUGhttp-nio-0.0.0.0-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 11
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 11:15:42 INFO http-nio-0.0.0.0-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-03 11:15:42 DEBUGhttp-nio-0.0.0.0-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 10
 {executed in 0 msec}
[2024-12-03 11:15:42 INFO http-nio-0.0.0.0-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|53da69e7-7ae4-4e7b-b95b-a4c4ca01bdc8.jpg |
|-----------------------------------------|

[2024-12-03 11:15:42 DEBUGhttp-nio-0.0.0.0-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 10
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 11:15:42 INFO http-nio-0.0.0.0-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|29              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|28              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|27              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|26              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-03 11:15:42 DEBUGhttp-nio-0.0.0.0-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 10
 {executed in 0 msec}
[2024-12-03 11:15:42 INFO http-nio-0.0.0.0-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|53da69e7-7ae4-4e7b-b95b-a4c4ca01bdc8.jpg |
|-----------------------------------------|

[2024-12-03 11:15:42 DEBUGhttp-nio-0.0.0.0-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 10
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 11:15:42 INFO http-nio-0.0.0.0-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|29              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|28              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|27              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|26              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-03 11:15:42 DEBUGhttp-nio-0.0.0.0-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 9
 {executed in 0 msec}
[2024-12-03 11:15:42 INFO http-nio-0.0.0.0-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|7875594b-3649-4059-a29a-5c09feeab0ad.jpg |
|-----------------------------------------|

[2024-12-03 11:15:42 DEBUGhttp-nio-0.0.0.0-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 9
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 11:15:42 INFO http-nio-0.0.0.0-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-03 11:15:42 DEBUGhttp-nio-0.0.0.0-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 9
 {executed in 0 msec}
[2024-12-03 11:15:42 INFO http-nio-0.0.0.0-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|7875594b-3649-4059-a29a-5c09feeab0ad.jpg |
|-----------------------------------------|

[2024-12-03 11:15:42 DEBUGhttp-nio-0.0.0.0-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 9
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 11:15:42 INFO http-nio-0.0.0.0-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-03 11:15:42 DEBUGhttp-nio-0.0.0.0-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 5
 {executed in 1 msec}
[2024-12-03 11:15:42 INFO http-nio-0.0.0.0-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|675d9f82-0c18-4f6e-91a3-9858129aeb7e.jpg |
|c95cc439-e1e7-40f4-81fa-013b069631ca.jpg |
|f490d2ad-c64d-4006-a74a-8235888e3e87.jpg |
|-----------------------------------------|

[2024-12-03 11:15:42 DEBUGhttp-nio-0.0.0.0-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 5
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 11:15:42 INFO http-nio-0.0.0.0-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-03 11:15:42 DEBUGhttp-nio-0.0.0.0-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 4
 {executed in 0 msec}
[2024-12-03 11:15:42 INFO http-nio-0.0.0.0-8080-exec-1] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-03 11:15:42 DEBUGhttp-nio-0.0.0.0-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 4
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 11:15:42 INFO http-nio-0.0.0.0-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-03 11:15:42 DEBUGhttp-nio-0.0.0.0-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 4
 {executed in 0 msec}
[2024-12-03 11:15:42 INFO http-nio-0.0.0.0-8080-exec-1] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-03 11:15:42 DEBUGhttp-nio-0.0.0.0-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 4
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 11:15:42 INFO http-nio-0.0.0.0-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-03 11:16:34 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown initiated...
[2024-12-03 11:16:34 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown completed.
[2024-12-03 11:16:36 INFO restartedMain] [com.green.greengram.GreenGramApplication] Starting GreenGramVer2Application using Java 17.0.12 with PID 5548 (D:\BHB\GreenGramVer2\build\classes\java\main started by Administrator in D:\BHB\GreenGramVer2)
[2024-12-03 11:16:36 INFO restartedMain] [com.green.greengram.GreenGramApplication] No active profile set, falling back to 1 default profile: "default"
[2024-12-03 11:16:36 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-03 11:16:36 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-03 11:16:37 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-03 11:16:37 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-0.0.0.0-8080"]
[2024-12-03 11:16:37 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-03 11:16:37 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-03 11:16:37 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-03 11:16:37 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 779 ms
[2024-12-03 11:16:37 INFO restartedMain] [com.green.greengram.common.MyFileUtils] MyFileUtils - 생성자 D:/BHB/download/greengram_ver2
[2024-12-03 11:16:37 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-03 11:16:37 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-03 11:16:37 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-0.0.0.0-8080"]
[2024-12-03 11:16:37 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-03 11:16:37 INFO restartedMain] [com.green.greengram.GreenGramApplication] Started GreenGramVer2Application in 1.63 seconds (process running for 1.971)
[2024-12-03 11:16:39 INFO http-nio-0.0.0.0-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring DispatcherServlet 'dispatcherServlet'
[2024-12-03 11:16:39 INFO http-nio-0.0.0.0-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[2024-12-03 11:16:39 INFO http-nio-0.0.0.0-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Completed initialization in 0 ms
[2024-12-03 11:16:39 INFO http-nio-0.0.0.0-8080-exec-5] [com.green.greengram.feed.model.FeedGetReq] page : 1, size : null, userId : 1
[2024-12-03 11:16:39 INFO http-nio-0.0.0.0-8080-exec-5] [com.green.greengram.feed.FeedController] FeedController > getFeedList > p : FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=1)
[2024-12-03 11:16:39 INFO http-nio-0.0.0.0-8080-exec-5] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Starting...
[2024-12-03 11:16:39 INFO http-nio-0.0.0.0-8080-exec-5] [com.zaxxer.hikari.pool.HikariPool] HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@6cd6e2b2
[2024-12-03 11:16:39 INFO http-nio-0.0.0.0-8080-exec-5] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Start completed.
[2024-12-03 11:16:39 DEBUGhttp-nio-0.0.0.0-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId,
        C.user_id AS writerUserId,
        if(C.nick_name IS NULL, C.uid, C.nick_name) AS writerNm,
        C.pic AS writerPic,
        contents, location,
        A.created_at AS createdAt,
        if(D.feed_id IS NULL, 0, 1) AS isLike
        from feed A
        JOIN user C
        ON A.writer_user_id = C.user_id
        LEFT JOIN feed_like D
        ON C.user_id = D.user_id
        AND D.user_id = 1
        order BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 1 msec}
[2024-12-03 11:16:39 INFO http-nio-0.0.0.0-8080-exec-5] [jdbc.resultsettable] 
|--------|--------|---------|-----------------------------------------|---------|---------|--------------------|-------|
|feed_id |user_id |writernm |pic                                      |contents |location |created_at          |islike |
|--------|--------|---------|-----------------------------------------|---------|---------|--------------------|-------|
|13      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |d        |d        |2024-12-03 11:15:02 |1      |
|13      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |d        |d        |2024-12-03 11:15:02 |1      |
|12      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |ㅁㄴㅇ      |ㅁㄴㅇ      |2024-11-29 16:17:53 |1      |
|12      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |ㅁㄴㅇ      |ㅁㄴㅇ      |2024-11-29 16:17:53 |1      |
|11      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |         |         |2024-11-29 16:12:11 |1      |
|11      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |         |         |2024-11-29 16:12:11 |1      |
|10      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |asd      |asd      |2024-11-29 16:05:52 |1      |
|10      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |asd      |asd      |2024-11-29 16:05:52 |1      |
|9       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |sda      |asd      |2024-11-29 16:00:32 |1      |
|9       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |sda      |asd      |2024-11-29 16:00:32 |1      |
|5       |2       |홍길동      |6d88f58a-0c38-4010-b703-3ccb187071d8.jpg |123      |중앙로      |2024-11-29 10:36:12 |0      |
|4       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |123      |그린컴      |2024-11-28 17:24:40 |1      |
|4       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |123      |그린컴      |2024-11-28 17:24:40 |1      |
|--------|--------|---------|-----------------------------------------|---------|---------|--------------------|-------|

[2024-12-03 11:16:39 DEBUGhttp-nio-0.0.0.0-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 13
 {executed in 0 msec}
[2024-12-03 11:16:39 INFO http-nio-0.0.0.0-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|7af273d9-3528-498f-b249-e48a4bc99755.jpg |
|-----------------------------------------|

[2024-12-03 11:16:39 DEBUGhttp-nio-0.0.0.0-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 13
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 11:16:39 INFO http-nio-0.0.0.0-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|61              |34      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|60              |33      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|59              |32      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|58              |31      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-03 11:16:39 DEBUGhttp-nio-0.0.0.0-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 13
 {executed in 0 msec}
[2024-12-03 11:16:39 INFO http-nio-0.0.0.0-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|7af273d9-3528-498f-b249-e48a4bc99755.jpg |
|-----------------------------------------|

[2024-12-03 11:16:39 DEBUGhttp-nio-0.0.0.0-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 13
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-03 11:16:39 INFO http-nio-0.0.0.0-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|61              |34      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|60              |33      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|59              |32      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|58              |31      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-03 11:16:39 DEBUGhttp-nio-0.0.0.0-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 12
 {executed in 0 msec}
[2024-12-03 11:16:39 INFO http-nio-0.0.0.0-8080-exec-5] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-03 11:16:39 DEBUGhttp-nio-0.0.0.0-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 12
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-03 11:16:39 INFO http-nio-0.0.0.0-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|24              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|23              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|22              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|21              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-03 11:16:39 DEBUGhttp-nio-0.0.0.0-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 12
 {executed in 0 msec}
[2024-12-03 11:16:39 INFO http-nio-0.0.0.0-8080-exec-5] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-03 11:16:39 DEBUGhttp-nio-0.0.0.0-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 12
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-03 11:16:39 INFO http-nio-0.0.0.0-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|24              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|23              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|22              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|21              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-03 11:16:39 DEBUGhttp-nio-0.0.0.0-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 11
 {executed in 0 msec}
[2024-12-03 11:16:39 INFO http-nio-0.0.0.0-8080-exec-5] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-03 11:16:39 DEBUGhttp-nio-0.0.0.0-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 11
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-03 11:16:39 INFO http-nio-0.0.0.0-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-03 11:16:39 DEBUGhttp-nio-0.0.0.0-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 11
 {executed in 0 msec}
[2024-12-03 11:16:39 INFO http-nio-0.0.0.0-8080-exec-5] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-03 11:16:39 DEBUGhttp-nio-0.0.0.0-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 11
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 11:16:39 INFO http-nio-0.0.0.0-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-03 11:16:39 DEBUGhttp-nio-0.0.0.0-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 10
 {executed in 1 msec}
[2024-12-03 11:16:39 INFO http-nio-0.0.0.0-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|53da69e7-7ae4-4e7b-b95b-a4c4ca01bdc8.jpg |
|-----------------------------------------|

[2024-12-03 11:16:39 DEBUGhttp-nio-0.0.0.0-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 10
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 11:16:39 INFO http-nio-0.0.0.0-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|29              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|28              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|27              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|26              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-03 11:16:39 DEBUGhttp-nio-0.0.0.0-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 10
 {executed in 0 msec}
[2024-12-03 11:16:39 INFO http-nio-0.0.0.0-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|53da69e7-7ae4-4e7b-b95b-a4c4ca01bdc8.jpg |
|-----------------------------------------|

[2024-12-03 11:16:39 DEBUGhttp-nio-0.0.0.0-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 10
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 11:16:39 INFO http-nio-0.0.0.0-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|29              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|28              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|27              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|26              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-03 11:16:39 DEBUGhttp-nio-0.0.0.0-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 9
 {executed in 0 msec}
[2024-12-03 11:16:39 INFO http-nio-0.0.0.0-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|7875594b-3649-4059-a29a-5c09feeab0ad.jpg |
|-----------------------------------------|

[2024-12-03 11:16:39 DEBUGhttp-nio-0.0.0.0-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 9
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 11:16:39 INFO http-nio-0.0.0.0-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-03 11:16:39 DEBUGhttp-nio-0.0.0.0-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 9
 {executed in 1 msec}
[2024-12-03 11:16:39 INFO http-nio-0.0.0.0-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|7875594b-3649-4059-a29a-5c09feeab0ad.jpg |
|-----------------------------------------|

[2024-12-03 11:16:39 DEBUGhttp-nio-0.0.0.0-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 9
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 11:16:39 INFO http-nio-0.0.0.0-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-03 11:16:39 DEBUGhttp-nio-0.0.0.0-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 5
 {executed in 0 msec}
[2024-12-03 11:16:39 INFO http-nio-0.0.0.0-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|675d9f82-0c18-4f6e-91a3-9858129aeb7e.jpg |
|c95cc439-e1e7-40f4-81fa-013b069631ca.jpg |
|f490d2ad-c64d-4006-a74a-8235888e3e87.jpg |
|-----------------------------------------|

[2024-12-03 11:16:39 DEBUGhttp-nio-0.0.0.0-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 5
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 11:16:39 INFO http-nio-0.0.0.0-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-03 11:16:39 DEBUGhttp-nio-0.0.0.0-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 4
 {executed in 0 msec}
[2024-12-03 11:16:39 INFO http-nio-0.0.0.0-8080-exec-5] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-03 11:16:39 DEBUGhttp-nio-0.0.0.0-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 4
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 11:16:39 INFO http-nio-0.0.0.0-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-03 11:16:39 DEBUGhttp-nio-0.0.0.0-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 4
 {executed in 0 msec}
[2024-12-03 11:16:39 INFO http-nio-0.0.0.0-8080-exec-5] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-03 11:16:39 DEBUGhttp-nio-0.0.0.0-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 4
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 11:16:39 INFO http-nio-0.0.0.0-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-03 11:16:41 DEBUGhttp-nio-0.0.0.0-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 13
        ORDER BY A.feed_comment_id DESC
        LIMIT 3, 21
 {executed in 1 msec}
[2024-12-03 11:16:41 INFO http-nio-0.0.0.0-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|58              |31      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|57              |30      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|56              |29      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|55              |28      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|54              |27      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|53              |26      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|52              |25      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|51              |24      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|50              |23      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|49              |22      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|48              |21      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|47              |20      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|46              |19      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|45              |18      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|44              |17      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|43              |16      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|42              |15      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|41              |14      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|40              |13      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|39              |12      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|38              |11      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-03 11:16:43 DEBUGhttp-nio-0.0.0.0-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 13
        ORDER BY A.feed_comment_id DESC
        LIMIT 23, 21
 {executed in 0 msec}
[2024-12-03 11:16:43 INFO http-nio-0.0.0.0-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|38              |11      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|37              |10      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|36              |9       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|35              |8       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|34              |7       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|33              |6       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|32              |3       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|31              |2       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|30              |1       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-03 11:29:33 INFO File Watcher] [org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener] Restarting due to 1 class path change (0 additions, 0 deletions, 1 modification)
[2024-12-03 11:29:33 INFO Thread-5] [org.apache.coyote.http11.Http11NioProtocol] Stopping ProtocolHandler ["http-nio-0.0.0.0-8080"]
[2024-12-03 11:29:33 INFO Thread-5] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown initiated...
[2024-12-03 11:29:33 INFO Thread-5] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown completed.
[2024-12-03 11:29:33 INFO restartedMain] [com.green.greengram.GreenGramApplication] Starting GreenGramVer2Application using Java 17.0.12 with PID 5548 (D:\BHB\GreenGramVer2\build\classes\java\main started by Administrator in D:\BHB\GreenGramVer2)
[2024-12-03 11:29:33 INFO restartedMain] [com.green.greengram.GreenGramApplication] No active profile set, falling back to 1 default profile: "default"
[2024-12-03 11:29:33 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-03 11:29:33 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-0.0.0.0-8080"]
[2024-12-03 11:29:33 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-03 11:29:33 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-03 11:29:33 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-03 11:29:33 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 210 ms
[2024-12-03 11:29:33 INFO restartedMain] [com.green.greengram.common.MyFileUtils] MyFileUtils - 생성자 D:/BHB/download/greengram_ver2
[2024-12-03 11:29:33 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-03 11:29:33 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-03 11:29:33 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-0.0.0.0-8080"]
[2024-12-03 11:29:33 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-03 11:29:33 INFO restartedMain] [com.green.greengram.GreenGramApplication] Started GreenGramVer2Application in 0.382 seconds (process running for 778.121)
[2024-12-03 11:29:33 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener] Condition evaluation unchanged
[2024-12-03 11:30:09 INFO restartedMain] [com.green.greengram.GreenGramApplication] Starting GreenGramVer2Application using Java 17.0.12 with PID 8152 (D:\BHB\GreenGramVer2\build\classes\java\main started by Administrator in D:\BHB\GreenGramVer2)
[2024-12-03 11:30:09 INFO restartedMain] [com.green.greengram.GreenGramApplication] No active profile set, falling back to 1 default profile: "default"
[2024-12-03 11:30:09 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-03 11:30:09 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-03 11:30:10 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-03 11:30:10 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-0.0.0.0-8080"]
[2024-12-03 11:30:10 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-03 11:30:10 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-03 11:30:10 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-03 11:30:10 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 798 ms
[2024-12-03 11:30:10 INFO restartedMain] [com.green.greengram.common.MyFileUtils] MyFileUtils - 생성자 D:/BHB/download/greengram_ver2
[2024-12-03 11:30:10 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-03 11:30:10 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-03 11:30:10 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-0.0.0.0-8080"]
[2024-12-03 11:30:10 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-03 11:30:10 INFO restartedMain] [com.green.greengram.GreenGramApplication] Started GreenGramVer2Application in 1.643 seconds (process running for 1.979)
[2024-12-03 11:30:15 INFO http-nio-0.0.0.0-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring DispatcherServlet 'dispatcherServlet'
[2024-12-03 11:30:15 INFO http-nio-0.0.0.0-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[2024-12-03 11:30:15 INFO http-nio-0.0.0.0-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Completed initialization in 0 ms
[2024-12-03 11:30:15 INFO http-nio-0.0.0.0-8080-exec-6] [com.green.greengram.feed.model.FeedGetReq] page : 1, size : null, userId : 1
[2024-12-03 11:30:15 INFO http-nio-0.0.0.0-8080-exec-6] [com.green.greengram.feed.FeedController] FeedController > getFeedList > p : FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=1)
[2024-12-03 11:30:15 INFO http-nio-0.0.0.0-8080-exec-6] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Starting...
[2024-12-03 11:30:15 INFO http-nio-0.0.0.0-8080-exec-6] [com.zaxxer.hikari.pool.HikariPool] HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@6cd6e2b2
[2024-12-03 11:30:15 INFO http-nio-0.0.0.0-8080-exec-6] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Start completed.
[2024-12-03 11:30:15 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId,
        C.user_id AS writerUserId,
        if(C.nick_name IS NULL, C.uid, C.nick_name) AS writerNm,
        C.pic AS writerPic,
        contents, location,
        A.created_at AS createdAt,
        if(D.feed_id IS NULL, 0, 1) AS isLike
        from feed A
        JOIN user C
        ON A.writer_user_id = C.user_id
        LEFT JOIN feed_like D
        ON C.user_id = D.user_id
        AND D.user_id = 1
        order BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 0 msec}
[2024-12-03 11:30:15 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|--------|--------|---------|-----------------------------------------|---------|---------|--------------------|-------|
|feed_id |user_id |writernm |pic                                      |contents |location |created_at          |islike |
|--------|--------|---------|-----------------------------------------|---------|---------|--------------------|-------|
|13      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |d        |d        |2024-12-03 11:15:02 |1      |
|13      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |d        |d        |2024-12-03 11:15:02 |1      |
|12      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |ㅁㄴㅇ      |ㅁㄴㅇ      |2024-11-29 16:17:53 |1      |
|12      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |ㅁㄴㅇ      |ㅁㄴㅇ      |2024-11-29 16:17:53 |1      |
|11      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |         |         |2024-11-29 16:12:11 |1      |
|11      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |         |         |2024-11-29 16:12:11 |1      |
|10      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |asd      |asd      |2024-11-29 16:05:52 |1      |
|10      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |asd      |asd      |2024-11-29 16:05:52 |1      |
|9       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |sda      |asd      |2024-11-29 16:00:32 |1      |
|9       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |sda      |asd      |2024-11-29 16:00:32 |1      |
|5       |2       |홍길동      |6d88f58a-0c38-4010-b703-3ccb187071d8.jpg |123      |중앙로      |2024-11-29 10:36:12 |0      |
|4       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |123      |그린컴      |2024-11-28 17:24:40 |1      |
|4       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |123      |그린컴      |2024-11-28 17:24:40 |1      |
|--------|--------|---------|-----------------------------------------|---------|---------|--------------------|-------|

[2024-12-03 11:30:15 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 13
 {executed in 0 msec}
[2024-12-03 11:30:15 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|7af273d9-3528-498f-b249-e48a4bc99755.jpg |
|-----------------------------------------|

[2024-12-03 11:30:15 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 13
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 11:30:15 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|61              |34      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|60              |33      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|59              |32      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|58              |31      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-03 11:30:15 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 13
 {executed in 0 msec}
[2024-12-03 11:30:15 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|7af273d9-3528-498f-b249-e48a4bc99755.jpg |
|-----------------------------------------|

[2024-12-03 11:30:15 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 13
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 11:30:15 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|61              |34      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|60              |33      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|59              |32      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|58              |31      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-03 11:30:15 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 12
 {executed in 0 msec}
[2024-12-03 11:30:15 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-03 11:30:15 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 12
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 11:30:15 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|24              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|23              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|22              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|21              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-03 11:30:15 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 12
 {executed in 0 msec}
[2024-12-03 11:30:15 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-03 11:30:15 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 12
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 11:30:15 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|24              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|23              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|22              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|21              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-03 11:30:15 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 11
 {executed in 0 msec}
[2024-12-03 11:30:15 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-03 11:30:15 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 11
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 11:30:15 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-03 11:30:15 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 11
 {executed in 0 msec}
[2024-12-03 11:30:15 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-03 11:30:15 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 11
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 11:30:15 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-03 11:30:15 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 10
 {executed in 0 msec}
[2024-12-03 11:30:15 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|53da69e7-7ae4-4e7b-b95b-a4c4ca01bdc8.jpg |
|-----------------------------------------|

[2024-12-03 11:30:15 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 10
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 11:30:15 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|29              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|28              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|27              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|26              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-03 11:30:15 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 10
 {executed in 0 msec}
[2024-12-03 11:30:15 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|53da69e7-7ae4-4e7b-b95b-a4c4ca01bdc8.jpg |
|-----------------------------------------|

[2024-12-03 11:30:15 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 10
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 11:30:15 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|29              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|28              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|27              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|26              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-03 11:30:15 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 9
 {executed in 0 msec}
[2024-12-03 11:30:15 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|7875594b-3649-4059-a29a-5c09feeab0ad.jpg |
|-----------------------------------------|

[2024-12-03 11:30:15 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 9
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 11:30:15 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-03 11:30:15 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 9
 {executed in 0 msec}
[2024-12-03 11:30:15 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|7875594b-3649-4059-a29a-5c09feeab0ad.jpg |
|-----------------------------------------|

[2024-12-03 11:30:15 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 9
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 11:30:15 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-03 11:30:15 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 5
 {executed in 0 msec}
[2024-12-03 11:30:15 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|675d9f82-0c18-4f6e-91a3-9858129aeb7e.jpg |
|c95cc439-e1e7-40f4-81fa-013b069631ca.jpg |
|f490d2ad-c64d-4006-a74a-8235888e3e87.jpg |
|-----------------------------------------|

[2024-12-03 11:30:15 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 5
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 11:30:15 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-03 11:30:15 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 4
 {executed in 0 msec}
[2024-12-03 11:30:15 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-03 11:30:15 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 4
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 11:30:15 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-03 11:30:15 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 4
 {executed in 0 msec}
[2024-12-03 11:30:15 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-03 11:30:15 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 4
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 11:30:15 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-03 11:30:17 DEBUGhttp-nio-0.0.0.0-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 13
        ORDER BY A.feed_comment_id DESC
        LIMIT 3, 21
 {executed in 0 msec}
[2024-12-03 11:30:17 INFO http-nio-0.0.0.0-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|58              |31      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|57              |30      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|56              |29      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|55              |28      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|54              |27      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|53              |26      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|52              |25      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|51              |24      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|50              |23      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|49              |22      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|48              |21      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|47              |20      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|46              |19      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|45              |18      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|44              |17      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|43              |16      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|42              |15      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|41              |14      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|40              |13      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|39              |12      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|38              |11      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-03 11:30:19 DEBUGhttp-nio-0.0.0.0-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 13
        ORDER BY A.feed_comment_id DESC
        LIMIT 23, 21
 {executed in 0 msec}
[2024-12-03 11:30:19 INFO http-nio-0.0.0.0-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|38              |11      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|37              |10      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|36              |9       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|35              |8       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|34              |7       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|33              |6       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|32              |3       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|31              |2       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|30              |1       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-03 11:49:38 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. insert into feed
        set writer_user_id = 1
        , contents = 'ㅇ'
        , location = 'ㅇ'
 {executed in 0 msec}
[2024-12-03 11:49:38 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
1. getGeneratedKeys on query: insert into feed
        set writer_user_id = 1
        , contents = 'ㅇ'
        , location = 'ㅇ'
 {executed in 0 msec}
[2024-12-03 11:49:38 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|----------|
|insert_id |
|----------|
|14        |
|----------|

[2024-12-03 11:49:38 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. insert into feed_pics
        (feed_id, pic)
        values
         (  
            14, 'd3ab1225-6450-4fc4-9f31-eb10a531825a.gif'
         )
 {executed in 0 msec}
[2024-12-03 11:49:41 INFO http-nio-0.0.0.0-8080-exec-9] [com.green.greengram.feed.model.FeedGetReq] page : 1, size : null, userId : 1
[2024-12-03 11:49:41 INFO http-nio-0.0.0.0-8080-exec-9] [com.green.greengram.feed.FeedController] FeedController > getFeedList > p : FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=1)
[2024-12-03 11:49:41 DEBUGhttp-nio-0.0.0.0-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId,
        C.user_id AS writerUserId,
        if(C.nick_name IS NULL, C.uid, C.nick_name) AS writerNm,
        C.pic AS writerPic,
        contents, location,
        A.created_at AS createdAt,
        if(D.feed_id IS NULL, 0, 1) AS isLike
        from feed A
        JOIN user C
        ON A.writer_user_id = C.user_id
        LEFT JOIN feed_like D
        ON C.user_id = D.user_id
        AND D.user_id = 1
        order BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 0 msec}
[2024-12-03 11:49:41 INFO http-nio-0.0.0.0-8080-exec-9] [jdbc.resultsettable] 
|--------|--------|---------|-----------------------------------------|---------|---------|--------------------|-------|
|feed_id |user_id |writernm |pic                                      |contents |location |created_at          |islike |
|--------|--------|---------|-----------------------------------------|---------|---------|--------------------|-------|
|14      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |ㅇ        |ㅇ        |2024-12-03 11:49:38 |1      |
|14      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |ㅇ        |ㅇ        |2024-12-03 11:49:38 |1      |
|13      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |d        |d        |2024-12-03 11:15:02 |1      |
|13      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |d        |d        |2024-12-03 11:15:02 |1      |
|12      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |ㅁㄴㅇ      |ㅁㄴㅇ      |2024-11-29 16:17:53 |1      |
|12      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |ㅁㄴㅇ      |ㅁㄴㅇ      |2024-11-29 16:17:53 |1      |
|11      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |         |         |2024-11-29 16:12:11 |1      |
|11      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |         |         |2024-11-29 16:12:11 |1      |
|10      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |asd      |asd      |2024-11-29 16:05:52 |1      |
|10      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |asd      |asd      |2024-11-29 16:05:52 |1      |
|9       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |sda      |asd      |2024-11-29 16:00:32 |1      |
|9       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |sda      |asd      |2024-11-29 16:00:32 |1      |
|5       |2       |홍길동      |6d88f58a-0c38-4010-b703-3ccb187071d8.jpg |123      |중앙로      |2024-11-29 10:36:12 |0      |
|4       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |123      |그린컴      |2024-11-28 17:24:40 |1      |
|4       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |123      |그린컴      |2024-11-28 17:24:40 |1      |
|--------|--------|---------|-----------------------------------------|---------|---------|--------------------|-------|

[2024-12-03 11:49:41 DEBUGhttp-nio-0.0.0.0-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 14
 {executed in 0 msec}
[2024-12-03 11:49:41 INFO http-nio-0.0.0.0-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|d3ab1225-6450-4fc4-9f31-eb10a531825a.gif |
|-----------------------------------------|

[2024-12-03 11:49:41 DEBUGhttp-nio-0.0.0.0-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 14
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 11:49:41 INFO http-nio-0.0.0.0-8080-exec-9] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-03 11:49:41 DEBUGhttp-nio-0.0.0.0-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 14
 {executed in 0 msec}
[2024-12-03 11:49:41 INFO http-nio-0.0.0.0-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|d3ab1225-6450-4fc4-9f31-eb10a531825a.gif |
|-----------------------------------------|

[2024-12-03 11:49:41 DEBUGhttp-nio-0.0.0.0-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 14
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 11:49:41 INFO http-nio-0.0.0.0-8080-exec-9] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-03 11:49:41 DEBUGhttp-nio-0.0.0.0-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 13
 {executed in 0 msec}
[2024-12-03 11:49:41 INFO http-nio-0.0.0.0-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|7af273d9-3528-498f-b249-e48a4bc99755.jpg |
|-----------------------------------------|

[2024-12-03 11:49:41 DEBUGhttp-nio-0.0.0.0-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 13
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 11:49:41 INFO http-nio-0.0.0.0-8080-exec-9] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|61              |34      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|60              |33      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|59              |32      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|58              |31      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-03 11:49:41 DEBUGhttp-nio-0.0.0.0-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 13
 {executed in 0 msec}
[2024-12-03 11:49:41 INFO http-nio-0.0.0.0-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|7af273d9-3528-498f-b249-e48a4bc99755.jpg |
|-----------------------------------------|

[2024-12-03 11:49:41 DEBUGhttp-nio-0.0.0.0-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 13
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 11:49:41 INFO http-nio-0.0.0.0-8080-exec-9] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|61              |34      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|60              |33      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|59              |32      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|58              |31      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-03 11:49:41 DEBUGhttp-nio-0.0.0.0-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 12
 {executed in 0 msec}
[2024-12-03 11:49:41 INFO http-nio-0.0.0.0-8080-exec-9] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-03 11:49:41 DEBUGhttp-nio-0.0.0.0-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 12
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 11:49:41 INFO http-nio-0.0.0.0-8080-exec-9] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|24              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|23              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|22              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|21              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-03 11:49:41 DEBUGhttp-nio-0.0.0.0-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 12
 {executed in 0 msec}
[2024-12-03 11:49:41 INFO http-nio-0.0.0.0-8080-exec-9] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-03 11:49:41 DEBUGhttp-nio-0.0.0.0-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 12
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 11:49:41 INFO http-nio-0.0.0.0-8080-exec-9] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|24              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|23              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|22              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|21              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-03 11:49:41 DEBUGhttp-nio-0.0.0.0-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 11
 {executed in 0 msec}
[2024-12-03 11:49:41 INFO http-nio-0.0.0.0-8080-exec-9] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-03 11:49:41 DEBUGhttp-nio-0.0.0.0-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 11
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 11:49:41 INFO http-nio-0.0.0.0-8080-exec-9] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-03 11:49:41 DEBUGhttp-nio-0.0.0.0-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 11
 {executed in 0 msec}
[2024-12-03 11:49:41 INFO http-nio-0.0.0.0-8080-exec-9] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-03 11:49:41 DEBUGhttp-nio-0.0.0.0-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 11
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 11:49:41 INFO http-nio-0.0.0.0-8080-exec-9] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-03 11:49:41 DEBUGhttp-nio-0.0.0.0-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 10
 {executed in 0 msec}
[2024-12-03 11:49:41 INFO http-nio-0.0.0.0-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|53da69e7-7ae4-4e7b-b95b-a4c4ca01bdc8.jpg |
|-----------------------------------------|

[2024-12-03 11:49:41 DEBUGhttp-nio-0.0.0.0-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 10
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 11:49:41 INFO http-nio-0.0.0.0-8080-exec-9] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|29              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|28              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|27              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|26              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-03 11:49:41 DEBUGhttp-nio-0.0.0.0-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 10
 {executed in 0 msec}
[2024-12-03 11:49:41 INFO http-nio-0.0.0.0-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|53da69e7-7ae4-4e7b-b95b-a4c4ca01bdc8.jpg |
|-----------------------------------------|

[2024-12-03 11:49:41 DEBUGhttp-nio-0.0.0.0-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 10
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 11:49:41 INFO http-nio-0.0.0.0-8080-exec-9] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|29              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|28              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|27              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|26              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-03 11:49:41 DEBUGhttp-nio-0.0.0.0-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 9
 {executed in 0 msec}
[2024-12-03 11:49:41 INFO http-nio-0.0.0.0-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|7875594b-3649-4059-a29a-5c09feeab0ad.jpg |
|-----------------------------------------|

[2024-12-03 11:49:41 DEBUGhttp-nio-0.0.0.0-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 9
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 11:49:41 INFO http-nio-0.0.0.0-8080-exec-9] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-03 11:49:41 DEBUGhttp-nio-0.0.0.0-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 9
 {executed in 0 msec}
[2024-12-03 11:49:41 INFO http-nio-0.0.0.0-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|7875594b-3649-4059-a29a-5c09feeab0ad.jpg |
|-----------------------------------------|

[2024-12-03 11:49:41 DEBUGhttp-nio-0.0.0.0-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 9
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 11:49:41 INFO http-nio-0.0.0.0-8080-exec-9] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-03 11:49:41 DEBUGhttp-nio-0.0.0.0-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 5
 {executed in 0 msec}
[2024-12-03 11:49:41 INFO http-nio-0.0.0.0-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|675d9f82-0c18-4f6e-91a3-9858129aeb7e.jpg |
|c95cc439-e1e7-40f4-81fa-013b069631ca.jpg |
|f490d2ad-c64d-4006-a74a-8235888e3e87.jpg |
|-----------------------------------------|

[2024-12-03 11:49:41 DEBUGhttp-nio-0.0.0.0-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 5
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 11:49:41 INFO http-nio-0.0.0.0-8080-exec-9] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-03 11:49:41 DEBUGhttp-nio-0.0.0.0-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 4
 {executed in 0 msec}
[2024-12-03 11:49:41 INFO http-nio-0.0.0.0-8080-exec-9] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-03 11:49:41 DEBUGhttp-nio-0.0.0.0-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 4
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 11:49:41 INFO http-nio-0.0.0.0-8080-exec-9] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-03 11:49:41 DEBUGhttp-nio-0.0.0.0-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 4
 {executed in 0 msec}
[2024-12-03 11:49:41 INFO http-nio-0.0.0.0-8080-exec-9] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-03 11:49:41 DEBUGhttp-nio-0.0.0.0-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 4
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 11:49:41 INFO http-nio-0.0.0.0-8080-exec-9] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-03 11:49:47 INFO http-nio-0.0.0.0-8080-exec-2] [com.green.greengram.feed.model.FeedGetReq] page : 1, size : null, userId : 1
[2024-12-03 11:49:47 INFO http-nio-0.0.0.0-8080-exec-2] [com.green.greengram.feed.FeedController] FeedController > getFeedList > p : FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=1)
[2024-12-03 11:49:47 DEBUGhttp-nio-0.0.0.0-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId,
        C.user_id AS writerUserId,
        if(C.nick_name IS NULL, C.uid, C.nick_name) AS writerNm,
        C.pic AS writerPic,
        contents, location,
        A.created_at AS createdAt,
        if(D.feed_id IS NULL, 0, 1) AS isLike
        from feed A
        JOIN user C
        ON A.writer_user_id = C.user_id
        LEFT JOIN feed_like D
        ON C.user_id = D.user_id
        AND D.user_id = 1
        order BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 0 msec}
[2024-12-03 11:49:47 INFO http-nio-0.0.0.0-8080-exec-2] [jdbc.resultsettable] 
|--------|--------|---------|-----------------------------------------|---------|---------|--------------------|-------|
|feed_id |user_id |writernm |pic                                      |contents |location |created_at          |islike |
|--------|--------|---------|-----------------------------------------|---------|---------|--------------------|-------|
|14      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |ㅇ        |ㅇ        |2024-12-03 11:49:38 |1      |
|14      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |ㅇ        |ㅇ        |2024-12-03 11:49:38 |1      |
|13      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |d        |d        |2024-12-03 11:15:02 |1      |
|13      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |d        |d        |2024-12-03 11:15:02 |1      |
|12      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |ㅁㄴㅇ      |ㅁㄴㅇ      |2024-11-29 16:17:53 |1      |
|12      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |ㅁㄴㅇ      |ㅁㄴㅇ      |2024-11-29 16:17:53 |1      |
|11      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |         |         |2024-11-29 16:12:11 |1      |
|11      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |         |         |2024-11-29 16:12:11 |1      |
|10      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |asd      |asd      |2024-11-29 16:05:52 |1      |
|10      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |asd      |asd      |2024-11-29 16:05:52 |1      |
|9       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |sda      |asd      |2024-11-29 16:00:32 |1      |
|9       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |sda      |asd      |2024-11-29 16:00:32 |1      |
|5       |2       |홍길동      |6d88f58a-0c38-4010-b703-3ccb187071d8.jpg |123      |중앙로      |2024-11-29 10:36:12 |0      |
|4       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |123      |그린컴      |2024-11-28 17:24:40 |1      |
|4       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |123      |그린컴      |2024-11-28 17:24:40 |1      |
|--------|--------|---------|-----------------------------------------|---------|---------|--------------------|-------|

[2024-12-03 11:49:47 DEBUGhttp-nio-0.0.0.0-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 14
 {executed in 0 msec}
[2024-12-03 11:49:47 INFO http-nio-0.0.0.0-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|d3ab1225-6450-4fc4-9f31-eb10a531825a.gif |
|-----------------------------------------|

[2024-12-03 11:49:47 DEBUGhttp-nio-0.0.0.0-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 14
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 11:49:47 INFO http-nio-0.0.0.0-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-03 11:49:47 DEBUGhttp-nio-0.0.0.0-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 14
 {executed in 0 msec}
[2024-12-03 11:49:47 INFO http-nio-0.0.0.0-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|d3ab1225-6450-4fc4-9f31-eb10a531825a.gif |
|-----------------------------------------|

[2024-12-03 11:49:47 DEBUGhttp-nio-0.0.0.0-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 14
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 11:49:47 INFO http-nio-0.0.0.0-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-03 11:49:47 DEBUGhttp-nio-0.0.0.0-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 13
 {executed in 0 msec}
[2024-12-03 11:49:47 INFO http-nio-0.0.0.0-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|7af273d9-3528-498f-b249-e48a4bc99755.jpg |
|-----------------------------------------|

[2024-12-03 11:49:47 DEBUGhttp-nio-0.0.0.0-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 13
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 11:49:47 INFO http-nio-0.0.0.0-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|61              |34      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|60              |33      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|59              |32      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|58              |31      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-03 11:49:47 DEBUGhttp-nio-0.0.0.0-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 13
 {executed in 12 msec}
[2024-12-03 11:49:47 INFO http-nio-0.0.0.0-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|7af273d9-3528-498f-b249-e48a4bc99755.jpg |
|-----------------------------------------|

[2024-12-03 11:49:47 DEBUGhttp-nio-0.0.0.0-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 13
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-03 11:49:47 INFO http-nio-0.0.0.0-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|61              |34      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|60              |33      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|59              |32      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|58              |31      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-03 11:49:47 DEBUGhttp-nio-0.0.0.0-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 12
 {executed in 1 msec}
[2024-12-03 11:49:47 INFO http-nio-0.0.0.0-8080-exec-2] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-03 11:49:47 DEBUGhttp-nio-0.0.0.0-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 12
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 11:49:47 INFO http-nio-0.0.0.0-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|24              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|23              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|22              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|21              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-03 11:49:47 DEBUGhttp-nio-0.0.0.0-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 12
 {executed in 0 msec}
[2024-12-03 11:49:47 INFO http-nio-0.0.0.0-8080-exec-2] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-03 11:49:47 DEBUGhttp-nio-0.0.0.0-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 12
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 11:49:47 INFO http-nio-0.0.0.0-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|24              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|23              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|22              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|21              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-03 11:49:47 DEBUGhttp-nio-0.0.0.0-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 11
 {executed in 0 msec}
[2024-12-03 11:49:47 INFO http-nio-0.0.0.0-8080-exec-2] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-03 11:49:47 DEBUGhttp-nio-0.0.0.0-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 11
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 11:49:47 INFO http-nio-0.0.0.0-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-03 11:49:47 DEBUGhttp-nio-0.0.0.0-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 11
 {executed in 0 msec}
[2024-12-03 11:49:47 INFO http-nio-0.0.0.0-8080-exec-2] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-03 11:49:47 DEBUGhttp-nio-0.0.0.0-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 11
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 11:49:47 INFO http-nio-0.0.0.0-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-03 11:49:47 DEBUGhttp-nio-0.0.0.0-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 10
 {executed in 0 msec}
[2024-12-03 11:49:47 INFO http-nio-0.0.0.0-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|53da69e7-7ae4-4e7b-b95b-a4c4ca01bdc8.jpg |
|-----------------------------------------|

[2024-12-03 11:49:47 DEBUGhttp-nio-0.0.0.0-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 10
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 11:49:47 INFO http-nio-0.0.0.0-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|29              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|28              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|27              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|26              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-03 11:49:47 DEBUGhttp-nio-0.0.0.0-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 10
 {executed in 0 msec}
[2024-12-03 11:49:47 INFO http-nio-0.0.0.0-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|53da69e7-7ae4-4e7b-b95b-a4c4ca01bdc8.jpg |
|-----------------------------------------|

[2024-12-03 11:49:47 DEBUGhttp-nio-0.0.0.0-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 10
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-03 11:49:47 INFO http-nio-0.0.0.0-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|29              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|28              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|27              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|26              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-03 11:49:47 DEBUGhttp-nio-0.0.0.0-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 9
 {executed in 0 msec}
[2024-12-03 11:49:47 INFO http-nio-0.0.0.0-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|7875594b-3649-4059-a29a-5c09feeab0ad.jpg |
|-----------------------------------------|

[2024-12-03 11:49:47 DEBUGhttp-nio-0.0.0.0-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 9
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 11:49:47 INFO http-nio-0.0.0.0-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-03 11:49:47 DEBUGhttp-nio-0.0.0.0-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 9
 {executed in 1 msec}
[2024-12-03 11:49:47 INFO http-nio-0.0.0.0-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|7875594b-3649-4059-a29a-5c09feeab0ad.jpg |
|-----------------------------------------|

[2024-12-03 11:49:47 DEBUGhttp-nio-0.0.0.0-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 9
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 11:49:47 INFO http-nio-0.0.0.0-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-03 11:49:47 DEBUGhttp-nio-0.0.0.0-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 5
 {executed in 0 msec}
[2024-12-03 11:49:47 INFO http-nio-0.0.0.0-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|675d9f82-0c18-4f6e-91a3-9858129aeb7e.jpg |
|c95cc439-e1e7-40f4-81fa-013b069631ca.jpg |
|f490d2ad-c64d-4006-a74a-8235888e3e87.jpg |
|-----------------------------------------|

[2024-12-03 11:49:47 DEBUGhttp-nio-0.0.0.0-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 5
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 11:49:47 INFO http-nio-0.0.0.0-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-03 11:49:47 DEBUGhttp-nio-0.0.0.0-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 4
 {executed in 0 msec}
[2024-12-03 11:49:47 INFO http-nio-0.0.0.0-8080-exec-2] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-03 11:49:47 DEBUGhttp-nio-0.0.0.0-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 4
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 11:49:47 INFO http-nio-0.0.0.0-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-03 11:49:47 DEBUGhttp-nio-0.0.0.0-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 4
 {executed in 0 msec}
[2024-12-03 11:49:47 INFO http-nio-0.0.0.0-8080-exec-2] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-03 11:49:47 DEBUGhttp-nio-0.0.0.0-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 4
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-03 11:49:47 INFO http-nio-0.0.0.0-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-03 11:57:27 INFO http-nio-0.0.0.0-8080-exec-3] [com.green.greengram.feed.model.FeedGetReq] page : 1, size : null, userId : 1
[2024-12-03 11:57:27 INFO http-nio-0.0.0.0-8080-exec-3] [com.green.greengram.feed.FeedController] FeedController > getFeedList > p : FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=1)
[2024-12-03 11:57:27 DEBUGhttp-nio-0.0.0.0-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId,
        C.user_id AS writerUserId,
        if(C.nick_name IS NULL, C.uid, C.nick_name) AS writerNm,
        C.pic AS writerPic,
        contents, location,
        A.created_at AS createdAt,
        if(D.feed_id IS NULL, 0, 1) AS isLike
        from feed A
        JOIN user C
        ON A.writer_user_id = C.user_id
        LEFT JOIN feed_like D
        ON C.user_id = D.user_id
        AND D.user_id = 1
        order BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 1 msec}
[2024-12-03 11:57:27 INFO http-nio-0.0.0.0-8080-exec-3] [jdbc.resultsettable] 
|--------|--------|---------|-----------------------------------------|---------|---------|--------------------|-------|
|feed_id |user_id |writernm |pic                                      |contents |location |created_at          |islike |
|--------|--------|---------|-----------------------------------------|---------|---------|--------------------|-------|
|14      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |ㅇ        |ㅇ        |2024-12-03 11:49:38 |1      |
|14      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |ㅇ        |ㅇ        |2024-12-03 11:49:38 |1      |
|13      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |d        |d        |2024-12-03 11:15:02 |1      |
|13      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |d        |d        |2024-12-03 11:15:02 |1      |
|12      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |ㅁㄴㅇ      |ㅁㄴㅇ      |2024-11-29 16:17:53 |1      |
|12      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |ㅁㄴㅇ      |ㅁㄴㅇ      |2024-11-29 16:17:53 |1      |
|11      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |         |         |2024-11-29 16:12:11 |1      |
|11      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |         |         |2024-11-29 16:12:11 |1      |
|10      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |asd      |asd      |2024-11-29 16:05:52 |1      |
|10      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |asd      |asd      |2024-11-29 16:05:52 |1      |
|9       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |sda      |asd      |2024-11-29 16:00:32 |1      |
|9       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |sda      |asd      |2024-11-29 16:00:32 |1      |
|5       |2       |홍길동      |6d88f58a-0c38-4010-b703-3ccb187071d8.jpg |123      |중앙로      |2024-11-29 10:36:12 |0      |
|4       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |123      |그린컴      |2024-11-28 17:24:40 |1      |
|4       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |123      |그린컴      |2024-11-28 17:24:40 |1      |
|--------|--------|---------|-----------------------------------------|---------|---------|--------------------|-------|

[2024-12-03 11:57:27 DEBUGhttp-nio-0.0.0.0-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 14
 {executed in 0 msec}
[2024-12-03 11:57:27 INFO http-nio-0.0.0.0-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|d3ab1225-6450-4fc4-9f31-eb10a531825a.gif |
|-----------------------------------------|

[2024-12-03 11:57:27 DEBUGhttp-nio-0.0.0.0-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 14
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-03 11:57:27 INFO http-nio-0.0.0.0-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-03 11:57:27 DEBUGhttp-nio-0.0.0.0-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 14
 {executed in 0 msec}
[2024-12-03 11:57:27 INFO http-nio-0.0.0.0-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|d3ab1225-6450-4fc4-9f31-eb10a531825a.gif |
|-----------------------------------------|

[2024-12-03 11:57:27 DEBUGhttp-nio-0.0.0.0-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 14
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 11:57:27 INFO http-nio-0.0.0.0-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-03 11:57:27 DEBUGhttp-nio-0.0.0.0-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 13
 {executed in 0 msec}
[2024-12-03 11:57:27 INFO http-nio-0.0.0.0-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|7af273d9-3528-498f-b249-e48a4bc99755.jpg |
|-----------------------------------------|

[2024-12-03 11:57:27 DEBUGhttp-nio-0.0.0.0-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 13
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-03 11:57:27 INFO http-nio-0.0.0.0-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|61              |34      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|60              |33      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|59              |32      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|58              |31      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-03 11:57:27 DEBUGhttp-nio-0.0.0.0-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 13
 {executed in 0 msec}
[2024-12-03 11:57:27 INFO http-nio-0.0.0.0-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|7af273d9-3528-498f-b249-e48a4bc99755.jpg |
|-----------------------------------------|

[2024-12-03 11:57:27 DEBUGhttp-nio-0.0.0.0-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 13
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 11:57:27 INFO http-nio-0.0.0.0-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|61              |34      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|60              |33      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|59              |32      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|58              |31      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-03 11:57:27 DEBUGhttp-nio-0.0.0.0-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 12
 {executed in 0 msec}
[2024-12-03 11:57:27 INFO http-nio-0.0.0.0-8080-exec-3] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-03 11:57:27 DEBUGhttp-nio-0.0.0.0-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 12
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 11:57:27 INFO http-nio-0.0.0.0-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|24              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|23              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|22              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|21              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-03 11:57:27 DEBUGhttp-nio-0.0.0.0-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 12
 {executed in 0 msec}
[2024-12-03 11:57:27 INFO http-nio-0.0.0.0-8080-exec-3] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-03 11:57:27 DEBUGhttp-nio-0.0.0.0-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 12
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 11:57:27 INFO http-nio-0.0.0.0-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|24              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|23              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|22              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|21              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-03 11:57:27 DEBUGhttp-nio-0.0.0.0-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 11
 {executed in 1 msec}
[2024-12-03 11:57:27 INFO http-nio-0.0.0.0-8080-exec-3] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-03 11:57:27 DEBUGhttp-nio-0.0.0.0-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 11
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 11:57:27 INFO http-nio-0.0.0.0-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-03 11:57:27 DEBUGhttp-nio-0.0.0.0-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 11
 {executed in 0 msec}
[2024-12-03 11:57:27 INFO http-nio-0.0.0.0-8080-exec-3] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-03 11:57:27 DEBUGhttp-nio-0.0.0.0-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 11
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-03 11:57:27 INFO http-nio-0.0.0.0-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-03 11:57:27 DEBUGhttp-nio-0.0.0.0-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 10
 {executed in 0 msec}
[2024-12-03 11:57:27 INFO http-nio-0.0.0.0-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|53da69e7-7ae4-4e7b-b95b-a4c4ca01bdc8.jpg |
|-----------------------------------------|

[2024-12-03 11:57:27 DEBUGhttp-nio-0.0.0.0-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 10
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 11:57:27 INFO http-nio-0.0.0.0-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|29              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|28              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|27              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|26              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-03 11:57:27 DEBUGhttp-nio-0.0.0.0-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 10
 {executed in 0 msec}
[2024-12-03 11:57:27 INFO http-nio-0.0.0.0-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|53da69e7-7ae4-4e7b-b95b-a4c4ca01bdc8.jpg |
|-----------------------------------------|

[2024-12-03 11:57:27 DEBUGhttp-nio-0.0.0.0-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 10
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 11:57:27 INFO http-nio-0.0.0.0-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|29              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|28              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|27              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|26              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-03 11:57:27 DEBUGhttp-nio-0.0.0.0-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 9
 {executed in 0 msec}
[2024-12-03 11:57:27 INFO http-nio-0.0.0.0-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|7875594b-3649-4059-a29a-5c09feeab0ad.jpg |
|-----------------------------------------|

[2024-12-03 11:57:27 DEBUGhttp-nio-0.0.0.0-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 9
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 11:57:27 INFO http-nio-0.0.0.0-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-03 11:57:27 DEBUGhttp-nio-0.0.0.0-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 9
 {executed in 0 msec}
[2024-12-03 11:57:27 INFO http-nio-0.0.0.0-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|7875594b-3649-4059-a29a-5c09feeab0ad.jpg |
|-----------------------------------------|

[2024-12-03 11:57:27 DEBUGhttp-nio-0.0.0.0-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 9
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 11:57:27 INFO http-nio-0.0.0.0-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-03 11:57:27 DEBUGhttp-nio-0.0.0.0-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 5
 {executed in 0 msec}
[2024-12-03 11:57:27 INFO http-nio-0.0.0.0-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|675d9f82-0c18-4f6e-91a3-9858129aeb7e.jpg |
|c95cc439-e1e7-40f4-81fa-013b069631ca.jpg |
|f490d2ad-c64d-4006-a74a-8235888e3e87.jpg |
|-----------------------------------------|

[2024-12-03 11:57:27 DEBUGhttp-nio-0.0.0.0-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 5
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 11:57:27 INFO http-nio-0.0.0.0-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-03 11:57:27 DEBUGhttp-nio-0.0.0.0-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 4
 {executed in 0 msec}
[2024-12-03 11:57:27 INFO http-nio-0.0.0.0-8080-exec-3] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-03 11:57:27 DEBUGhttp-nio-0.0.0.0-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 4
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 11:57:27 INFO http-nio-0.0.0.0-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-03 11:57:27 DEBUGhttp-nio-0.0.0.0-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 4
 {executed in 1 msec}
[2024-12-03 11:57:27 INFO http-nio-0.0.0.0-8080-exec-3] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-03 11:57:27 DEBUGhttp-nio-0.0.0.0-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 4
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 11:57:27 INFO http-nio-0.0.0.0-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-03 11:58:22 INFO File Watcher] [org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener] Restarting due to 1 class path change (0 additions, 0 deletions, 1 modification)
[2024-12-03 11:58:22 INFO Thread-5] [org.apache.coyote.http11.Http11NioProtocol] Stopping ProtocolHandler ["http-nio-0.0.0.0-8080"]
[2024-12-03 11:58:22 INFO Thread-5] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown initiated...
[2024-12-03 11:58:22 INFO Thread-5] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown completed.
[2024-12-03 11:58:22 INFO restartedMain] [com.green.greengram.GreenGramApplication] Starting GreenGramVer2Application using Java 17.0.12 with PID 8152 (D:\BHB\GreenGramVer2\build\classes\java\main started by Administrator in D:\BHB\GreenGramVer2)
[2024-12-03 11:58:22 INFO restartedMain] [com.green.greengram.GreenGramApplication] No active profile set, falling back to 1 default profile: "default"
[2024-12-03 11:58:22 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-03 11:58:22 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-0.0.0.0-8080"]
[2024-12-03 11:58:22 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-03 11:58:22 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-03 11:58:22 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-03 11:58:22 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 212 ms
[2024-12-03 11:58:22 INFO restartedMain] [com.green.greengram.common.MyFileUtils] MyFileUtils - 생성자 D:/BHB/download/greengram_ver2
[2024-12-03 11:58:22 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-03 11:58:22 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-03 11:58:22 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-0.0.0.0-8080"]
[2024-12-03 11:58:22 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-03 11:58:22 INFO restartedMain] [com.green.greengram.GreenGramApplication] Started GreenGramVer2Application in 0.362 seconds (process running for 1694.08)
[2024-12-03 11:58:22 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener] Condition evaluation unchanged
[2024-12-03 12:00:16 INFO restartedMain] [com.green.greengram.GreenGramApplication] Starting GreenGramVer2Application using Java 17.0.12 with PID 4480 (D:\BHB\GreenGramVer2\build\classes\java\main started by Administrator in D:\BHB\GreenGramVer2)
[2024-12-03 12:00:16 INFO restartedMain] [com.green.greengram.GreenGramApplication] No active profile set, falling back to 1 default profile: "default"
[2024-12-03 12:00:16 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-03 12:00:16 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-03 12:00:17 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-03 12:00:17 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-0.0.0.0-8080"]
[2024-12-03 12:00:17 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-03 12:00:17 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-03 12:00:17 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-03 12:00:17 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 775 ms
[2024-12-03 12:00:17 INFO restartedMain] [com.green.greengram.common.MyFileUtils] MyFileUtils - 생성자 D:/BHB/download/greengram_ver2
[2024-12-03 12:00:17 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-03 12:00:17 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-03 12:00:17 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-0.0.0.0-8080"]
[2024-12-03 12:00:17 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-03 12:00:17 INFO restartedMain] [com.green.greengram.GreenGramApplication] Started GreenGramVer2Application in 1.639 seconds (process running for 1.973)
[2024-12-03 12:01:21 INFO http-nio-0.0.0.0-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring DispatcherServlet 'dispatcherServlet'
[2024-12-03 12:01:21 INFO http-nio-0.0.0.0-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[2024-12-03 12:01:21 INFO http-nio-0.0.0.0-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Completed initialization in 1 ms
[2024-12-03 12:01:21 INFO http-nio-0.0.0.0-8080-exec-6] [com.green.greengram.feed.model.FeedGetReq] page : 1, size : null, userId : 1
[2024-12-03 12:01:21 INFO http-nio-0.0.0.0-8080-exec-6] [com.green.greengram.feed.FeedController] FeedController > getFeedList > p : FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=1)
[2024-12-03 12:01:21 INFO http-nio-0.0.0.0-8080-exec-6] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Starting...
[2024-12-03 12:01:21 INFO http-nio-0.0.0.0-8080-exec-6] [com.zaxxer.hikari.pool.HikariPool] HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@3a2314c4
[2024-12-03 12:01:21 INFO http-nio-0.0.0.0-8080-exec-6] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Start completed.
[2024-12-03 12:01:21 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId,
        C.user_id AS writerUserId,
        if(C.nick_name IS NULL, C.uid, C.nick_name) AS writerNm,
        C.pic AS writerPic,
        contents, location,
        A.created_at AS createdAt,
        if(D.feed_id IS NULL, 0, 1) AS isLike
        from feed A
        JOIN user C
        ON A.writer_user_id = C.user_id
        LEFT JOIN feed_like D
        ON C.user_id = D.user_id
        AND D.user_id = 1
        order BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 1 msec}
[2024-12-03 12:01:21 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|--------|--------|---------|-----------------------------------------|---------|---------|--------------------|-------|
|feed_id |user_id |writernm |pic                                      |contents |location |created_at          |islike |
|--------|--------|---------|-----------------------------------------|---------|---------|--------------------|-------|
|14      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |ㅇ        |ㅇ        |2024-12-03 11:49:38 |1      |
|14      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |ㅇ        |ㅇ        |2024-12-03 11:49:38 |1      |
|13      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |d        |d        |2024-12-03 11:15:02 |1      |
|13      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |d        |d        |2024-12-03 11:15:02 |1      |
|12      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |ㅁㄴㅇ      |ㅁㄴㅇ      |2024-11-29 16:17:53 |1      |
|12      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |ㅁㄴㅇ      |ㅁㄴㅇ      |2024-11-29 16:17:53 |1      |
|11      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |         |         |2024-11-29 16:12:11 |1      |
|11      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |         |         |2024-11-29 16:12:11 |1      |
|10      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |asd      |asd      |2024-11-29 16:05:52 |1      |
|10      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |asd      |asd      |2024-11-29 16:05:52 |1      |
|9       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |sda      |asd      |2024-11-29 16:00:32 |1      |
|9       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |sda      |asd      |2024-11-29 16:00:32 |1      |
|5       |2       |홍길동      |6d88f58a-0c38-4010-b703-3ccb187071d8.jpg |123      |중앙로      |2024-11-29 10:36:12 |0      |
|4       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |123      |그린컴      |2024-11-28 17:24:40 |1      |
|4       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |123      |그린컴      |2024-11-28 17:24:40 |1      |
|--------|--------|---------|-----------------------------------------|---------|---------|--------------------|-------|

[2024-12-03 12:01:21 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 14
 {executed in 0 msec}
[2024-12-03 12:01:21 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|d3ab1225-6450-4fc4-9f31-eb10a531825a.gif |
|-----------------------------------------|

[2024-12-03 12:01:21 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 14
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 12:01:21 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-03 12:01:21 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 14
 {executed in 0 msec}
[2024-12-03 12:01:21 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|d3ab1225-6450-4fc4-9f31-eb10a531825a.gif |
|-----------------------------------------|

[2024-12-03 12:01:21 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 14
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 12:01:21 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-03 12:01:21 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 13
 {executed in 0 msec}
[2024-12-03 12:01:21 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|7af273d9-3528-498f-b249-e48a4bc99755.jpg |
|-----------------------------------------|

[2024-12-03 12:01:21 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 13
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-03 12:01:21 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|61              |34      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|60              |33      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|59              |32      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|58              |31      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-03 12:01:21 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 13
 {executed in 0 msec}
[2024-12-03 12:01:21 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|7af273d9-3528-498f-b249-e48a4bc99755.jpg |
|-----------------------------------------|

[2024-12-03 12:01:21 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 13
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 12:01:21 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|61              |34      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|60              |33      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|59              |32      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|58              |31      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-03 12:01:21 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 12
 {executed in 0 msec}
[2024-12-03 12:01:21 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-03 12:01:21 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 12
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-03 12:01:21 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|24              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|23              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|22              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|21              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-03 12:01:21 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 12
 {executed in 0 msec}
[2024-12-03 12:01:21 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-03 12:01:21 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 12
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-03 12:01:21 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|24              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|23              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|22              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|21              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-03 12:01:21 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 11
 {executed in 0 msec}
[2024-12-03 12:01:21 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-03 12:01:21 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 11
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-03 12:01:21 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-03 12:01:21 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 11
 {executed in 0 msec}
[2024-12-03 12:01:21 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-03 12:01:21 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 11
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 12:01:21 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-03 12:01:21 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 10
 {executed in 0 msec}
[2024-12-03 12:01:21 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|53da69e7-7ae4-4e7b-b95b-a4c4ca01bdc8.jpg |
|-----------------------------------------|

[2024-12-03 12:01:21 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 10
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-03 12:01:21 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|29              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|28              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|27              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|26              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-03 12:01:21 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 10
 {executed in 0 msec}
[2024-12-03 12:01:21 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|53da69e7-7ae4-4e7b-b95b-a4c4ca01bdc8.jpg |
|-----------------------------------------|

[2024-12-03 12:01:21 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 10
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-03 12:01:21 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|29              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|28              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|27              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|26              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-03 12:01:21 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 9
 {executed in 0 msec}
[2024-12-03 12:01:21 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|7875594b-3649-4059-a29a-5c09feeab0ad.jpg |
|-----------------------------------------|

[2024-12-03 12:01:21 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 9
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 12:01:21 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-03 12:01:21 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 9
 {executed in 1 msec}
[2024-12-03 12:01:21 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|7875594b-3649-4059-a29a-5c09feeab0ad.jpg |
|-----------------------------------------|

[2024-12-03 12:01:21 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 9
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 12:01:21 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-03 12:01:21 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 5
 {executed in 1 msec}
[2024-12-03 12:01:21 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|675d9f82-0c18-4f6e-91a3-9858129aeb7e.jpg |
|c95cc439-e1e7-40f4-81fa-013b069631ca.jpg |
|f490d2ad-c64d-4006-a74a-8235888e3e87.jpg |
|-----------------------------------------|

[2024-12-03 12:01:21 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 5
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 12:01:21 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-03 12:01:21 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 4
 {executed in 0 msec}
[2024-12-03 12:01:21 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-03 12:01:21 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 4
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 12:01:21 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-03 12:01:21 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 4
 {executed in 0 msec}
[2024-12-03 12:01:21 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-03 12:01:21 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 4
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-03 12:01:21 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-03 12:01:44 INFO File Watcher] [org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener] Restarting due to 2 class path changes (0 additions, 0 deletions, 2 modifications)
[2024-12-03 12:01:44 INFO Thread-5] [org.apache.coyote.http11.Http11NioProtocol] Stopping ProtocolHandler ["http-nio-0.0.0.0-8080"]
[2024-12-03 12:01:44 INFO Thread-5] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown initiated...
[2024-12-03 12:01:44 INFO Thread-5] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown completed.
[2024-12-03 12:01:44 INFO restartedMain] [com.green.greengram.GreenGramApplication] Starting GreenGramVer2Application using Java 17.0.12 with PID 4480 (D:\BHB\GreenGramVer2\build\classes\java\main started by Administrator in D:\BHB\GreenGramVer2)
[2024-12-03 12:01:44 INFO restartedMain] [com.green.greengram.GreenGramApplication] No active profile set, falling back to 1 default profile: "default"
[2024-12-03 12:01:44 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-03 12:01:44 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-0.0.0.0-8080"]
[2024-12-03 12:01:44 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-03 12:01:44 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-03 12:01:44 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-03 12:01:44 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 210 ms
[2024-12-03 12:01:44 INFO restartedMain] [com.green.greengram.common.MyFileUtils] MyFileUtils - 생성자 D:/BHB/download/greengram_ver2
[2024-12-03 12:01:44 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-03 12:01:44 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-03 12:01:44 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-0.0.0.0-8080"]
[2024-12-03 12:01:44 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-03 12:01:44 INFO restartedMain] [com.green.greengram.GreenGramApplication] Started GreenGramVer2Application in 0.371 seconds (process running for 88.914)
[2024-12-03 12:01:44 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener] Condition evaluation unchanged
[2024-12-03 12:14:46 INFO restartedMain] [com.green.greengram.GreenGramApplication] Starting GreenGramVer2Application using Java 17.0.12 with PID 788 (D:\BHB\GreenGramVer2\build\classes\java\main started by Administrator in D:\BHB\GreenGramVer2)
[2024-12-03 12:14:46 INFO restartedMain] [com.green.greengram.GreenGramApplication] No active profile set, falling back to 1 default profile: "default"
[2024-12-03 12:14:46 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-03 12:14:46 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-03 12:14:46 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-03 12:14:46 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-0.0.0.0-8080"]
[2024-12-03 12:14:46 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-03 12:14:46 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-03 12:14:46 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-03 12:14:46 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 825 ms
[2024-12-03 12:14:46 INFO restartedMain] [com.green.greengram.common.MyFileUtils] MyFileUtils - 생성자 D:/BHB/download/greengram_ver2
[2024-12-03 12:14:47 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-03 12:14:47 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-03 12:14:47 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-0.0.0.0-8080"]
[2024-12-03 12:14:47 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-03 12:14:47 INFO restartedMain] [com.green.greengram.GreenGramApplication] Started GreenGramVer2Application in 1.683 seconds (process running for 2.027)
[2024-12-03 12:17:00 INFO http-nio-0.0.0.0-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring DispatcherServlet 'dispatcherServlet'
[2024-12-03 12:17:00 INFO http-nio-0.0.0.0-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[2024-12-03 12:17:00 INFO http-nio-0.0.0.0-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Completed initialization in 1 ms
[2024-12-03 12:17:00 INFO http-nio-0.0.0.0-8080-exec-6] [com.green.greengram.feed.model.FeedGetReq] page : 1, size : null, userId : 1
[2024-12-03 12:17:00 INFO http-nio-0.0.0.0-8080-exec-6] [com.green.greengram.feed.FeedController] FeedController > getFeedList > p : FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=1)
[2024-12-03 12:17:00 INFO http-nio-0.0.0.0-8080-exec-6] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Starting...
[2024-12-03 12:17:00 INFO http-nio-0.0.0.0-8080-exec-6] [com.zaxxer.hikari.pool.HikariPool] HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@46302d24
[2024-12-03 12:17:00 INFO http-nio-0.0.0.0-8080-exec-6] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Start completed.
[2024-12-03 12:17:00 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId,
        C.user_id AS writerUserId,
        if(C.nick_name IS NULL, C.uid, C.nick_name) AS writerNm,
        C.pic AS writerPic,
        contents, location,
        A.created_at AS createdAt,
        if(D.feed_id IS NULL, 0, 1) AS isLike
        from feed A
        JOIN user C
        ON A.writer_user_id = C.user_id
        LEFT JOIN feed_like D
        ON C.user_id = D.user_id
        AND D.user_id = 1
        order BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 0 msec}
[2024-12-03 12:17:00 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|--------|--------|---------|-----------------------------------------|---------|---------|--------------------|-------|
|feed_id |user_id |writernm |pic                                      |contents |location |created_at          |islike |
|--------|--------|---------|-----------------------------------------|---------|---------|--------------------|-------|
|14      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |ㅇ        |ㅇ        |2024-12-03 11:49:38 |1      |
|14      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |ㅇ        |ㅇ        |2024-12-03 11:49:38 |1      |
|13      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |d        |d        |2024-12-03 11:15:02 |1      |
|13      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |d        |d        |2024-12-03 11:15:02 |1      |
|12      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |ㅁㄴㅇ      |ㅁㄴㅇ      |2024-11-29 16:17:53 |1      |
|12      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |ㅁㄴㅇ      |ㅁㄴㅇ      |2024-11-29 16:17:53 |1      |
|11      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |         |         |2024-11-29 16:12:11 |1      |
|11      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |         |         |2024-11-29 16:12:11 |1      |
|10      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |asd      |asd      |2024-11-29 16:05:52 |1      |
|10      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |asd      |asd      |2024-11-29 16:05:52 |1      |
|9       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |sda      |asd      |2024-11-29 16:00:32 |1      |
|9       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |sda      |asd      |2024-11-29 16:00:32 |1      |
|5       |2       |홍길동      |6d88f58a-0c38-4010-b703-3ccb187071d8.jpg |123      |중앙로      |2024-11-29 10:36:12 |0      |
|4       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |123      |그린컴      |2024-11-28 17:24:40 |1      |
|4       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |123      |그린컴      |2024-11-28 17:24:40 |1      |
|--------|--------|---------|-----------------------------------------|---------|---------|--------------------|-------|

[2024-12-03 12:17:00 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 14
 {executed in 0 msec}
[2024-12-03 12:17:00 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|d3ab1225-6450-4fc4-9f31-eb10a531825a.gif |
|-----------------------------------------|

[2024-12-03 12:17:00 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 14
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 12:17:00 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-03 12:17:00 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 14
 {executed in 0 msec}
[2024-12-03 12:17:00 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|d3ab1225-6450-4fc4-9f31-eb10a531825a.gif |
|-----------------------------------------|

[2024-12-03 12:17:00 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 14
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 12:17:00 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-03 12:17:00 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 13
 {executed in 0 msec}
[2024-12-03 12:17:00 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|7af273d9-3528-498f-b249-e48a4bc99755.jpg |
|-----------------------------------------|

[2024-12-03 12:17:00 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 13
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 12:17:00 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|61              |34      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|60              |33      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|59              |32      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|58              |31      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-03 12:17:00 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 13
 {executed in 0 msec}
[2024-12-03 12:17:00 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|7af273d9-3528-498f-b249-e48a4bc99755.jpg |
|-----------------------------------------|

[2024-12-03 12:17:00 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 13
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 12:17:00 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|61              |34      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|60              |33      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|59              |32      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|58              |31      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-03 12:17:00 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 12
 {executed in 0 msec}
[2024-12-03 12:17:00 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-03 12:17:00 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 12
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-03 12:17:00 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|24              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|23              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|22              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|21              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-03 12:17:00 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 12
 {executed in 0 msec}
[2024-12-03 12:17:00 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-03 12:17:00 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 12
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-03 12:17:00 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|24              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|23              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|22              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|21              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-03 12:17:00 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 11
 {executed in 0 msec}
[2024-12-03 12:17:00 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-03 12:17:00 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 11
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 12:17:00 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-03 12:17:00 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 11
 {executed in 0 msec}
[2024-12-03 12:17:00 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-03 12:17:00 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 11
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 12:17:00 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-03 12:17:00 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 10
 {executed in 1 msec}
[2024-12-03 12:17:00 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|53da69e7-7ae4-4e7b-b95b-a4c4ca01bdc8.jpg |
|-----------------------------------------|

[2024-12-03 12:17:00 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 10
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 12:17:00 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|29              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|28              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|27              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|26              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-03 12:17:00 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 10
 {executed in 0 msec}
[2024-12-03 12:17:00 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|53da69e7-7ae4-4e7b-b95b-a4c4ca01bdc8.jpg |
|-----------------------------------------|

[2024-12-03 12:17:00 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 10
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 12:17:00 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|29              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|28              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|27              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|26              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-03 12:17:00 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 9
 {executed in 0 msec}
[2024-12-03 12:17:00 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|7875594b-3649-4059-a29a-5c09feeab0ad.jpg |
|-----------------------------------------|

[2024-12-03 12:17:00 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 9
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 12:17:00 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-03 12:17:00 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 9
 {executed in 1 msec}
[2024-12-03 12:17:00 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|7875594b-3649-4059-a29a-5c09feeab0ad.jpg |
|-----------------------------------------|

[2024-12-03 12:17:00 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 9
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 12:17:00 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-03 12:17:00 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 5
 {executed in 1 msec}
[2024-12-03 12:17:00 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|675d9f82-0c18-4f6e-91a3-9858129aeb7e.jpg |
|c95cc439-e1e7-40f4-81fa-013b069631ca.jpg |
|f490d2ad-c64d-4006-a74a-8235888e3e87.jpg |
|-----------------------------------------|

[2024-12-03 12:17:00 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 5
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 12:17:00 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-03 12:17:00 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 4
 {executed in 1 msec}
[2024-12-03 12:17:00 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-03 12:17:00 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 4
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 12:17:00 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-03 12:17:00 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 4
 {executed in 1 msec}
[2024-12-03 12:17:00 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-03 12:17:00 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 4
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 12:17:00 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-03 12:32:02 INFO File Watcher] [org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener] Restarting due to 1 class path change (0 additions, 0 deletions, 1 modification)
[2024-12-03 12:32:02 INFO Thread-5] [org.apache.coyote.http11.Http11NioProtocol] Stopping ProtocolHandler ["http-nio-0.0.0.0-8080"]
[2024-12-03 12:32:02 INFO Thread-5] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown initiated...
[2024-12-03 12:32:02 INFO Thread-5] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown completed.
[2024-12-03 12:32:02 INFO restartedMain] [com.green.greengram.GreenGramApplication] Starting GreenGramVer2Application using Java 17.0.12 with PID 788 (D:\BHB\GreenGramVer2\build\classes\java\main started by Administrator in D:\BHB\GreenGramVer2)
[2024-12-03 12:32:02 INFO restartedMain] [com.green.greengram.GreenGramApplication] No active profile set, falling back to 1 default profile: "default"
[2024-12-03 12:32:02 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-03 12:32:02 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-0.0.0.0-8080"]
[2024-12-03 12:32:02 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-03 12:32:02 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-03 12:32:02 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-03 12:32:02 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 220 ms
[2024-12-03 12:32:02 INFO restartedMain] [com.green.greengram.common.MyFileUtils] MyFileUtils - 생성자 D:/BHB/download/greengram_ver2
[2024-12-03 12:32:03 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-03 12:32:03 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-03 12:32:03 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-0.0.0.0-8080"]
[2024-12-03 12:32:03 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-03 12:32:03 INFO restartedMain] [com.green.greengram.GreenGramApplication] Started GreenGramVer2Application in 0.38 seconds (process running for 1037.76)
[2024-12-03 12:32:03 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener] Condition evaluation unchanged
[2024-12-03 12:33:13 INFO File Watcher] [org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener] Restarting due to 1 class path change (0 additions, 0 deletions, 1 modification)
[2024-12-03 12:33:13 INFO Thread-7] [org.apache.coyote.http11.Http11NioProtocol] Stopping ProtocolHandler ["http-nio-0.0.0.0-8080"]
[2024-12-03 12:33:13 INFO restartedMain] [com.green.greengram.GreenGramApplication] Starting GreenGramVer2Application using Java 17.0.12 with PID 788 (D:\BHB\GreenGramVer2\build\classes\java\main started by Administrator in D:\BHB\GreenGramVer2)
[2024-12-03 12:33:13 INFO restartedMain] [com.green.greengram.GreenGramApplication] No active profile set, falling back to 1 default profile: "default"
[2024-12-03 12:33:13 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-03 12:33:13 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-0.0.0.0-8080"]
[2024-12-03 12:33:13 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-03 12:33:13 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-03 12:33:13 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-03 12:33:13 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 176 ms
[2024-12-03 12:33:13 INFO restartedMain] [com.green.greengram.common.MyFileUtils] MyFileUtils - 생성자 D:/BHB/download/greengram_ver2
[2024-12-03 12:33:13 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-03 12:33:13 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-03 12:33:13 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-0.0.0.0-8080"]
[2024-12-03 12:33:13 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-03 12:33:13 INFO restartedMain] [com.green.greengram.GreenGramApplication] Started GreenGramVer2Application in 0.313 seconds (process running for 1108.163)
[2024-12-03 12:33:13 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener] Condition evaluation unchanged
[2024-12-03 12:35:01 INFO http-nio-0.0.0.0-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring DispatcherServlet 'dispatcherServlet'
[2024-12-03 12:35:01 INFO http-nio-0.0.0.0-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[2024-12-03 12:35:01 INFO http-nio-0.0.0.0-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Completed initialization in 1 ms
[2024-12-03 12:35:02 INFO http-nio-0.0.0.0-8080-exec-8] [com.green.greengram.feed.model.FeedGetReq] page : 1, size : null, userId : 1
[2024-12-03 12:35:02 INFO http-nio-0.0.0.0-8080-exec-8] [com.green.greengram.feed.FeedController] FeedController > getFeedList > p : FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=1)
[2024-12-03 12:35:02 INFO http-nio-0.0.0.0-8080-exec-8] [com.zaxxer.hikari.HikariDataSource] HikariPool-2 - Starting...
[2024-12-03 12:35:02 INFO http-nio-0.0.0.0-8080-exec-8] [com.zaxxer.hikari.pool.HikariPool] HikariPool-2 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@badc84c
[2024-12-03 12:35:02 INFO http-nio-0.0.0.0-8080-exec-8] [com.zaxxer.hikari.HikariDataSource] HikariPool-2 - Start completed.
[2024-12-03 12:35:02 DEBUGhttp-nio-0.0.0.0-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT A.feed_id AS feedId,
        C.user_id AS writerUserId,
        if(C.nick_name IS NULL, C.uid, C.nick_name) AS writerNm,
        C.pic AS writerPic,
        contents, location,
        A.created_at AS createdAt,
        if(D.feed_id IS NULL, 0, 1) AS isLike
        from feed A
        JOIN user C
        ON A.writer_user_id = C.user_id
        LEFT JOIN feed_like D
        ON C.user_id = D.user_id
        AND D.user_id = 1
        order BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 0 msec}
[2024-12-03 12:35:02 INFO http-nio-0.0.0.0-8080-exec-8] [jdbc.resultsettable] 
|--------|--------|---------|-----------------------------------------|---------|---------|--------------------|-------|
|feed_id |user_id |writernm |pic                                      |contents |location |created_at          |islike |
|--------|--------|---------|-----------------------------------------|---------|---------|--------------------|-------|
|14      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |ㅇ        |ㅇ        |2024-12-03 11:49:38 |1      |
|14      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |ㅇ        |ㅇ        |2024-12-03 11:49:38 |1      |
|13      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |d        |d        |2024-12-03 11:15:02 |1      |
|13      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |d        |d        |2024-12-03 11:15:02 |1      |
|12      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |ㅁㄴㅇ      |ㅁㄴㅇ      |2024-11-29 16:17:53 |1      |
|12      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |ㅁㄴㅇ      |ㅁㄴㅇ      |2024-11-29 16:17:53 |1      |
|11      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |         |         |2024-11-29 16:12:11 |1      |
|11      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |         |         |2024-11-29 16:12:11 |1      |
|10      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |asd      |asd      |2024-11-29 16:05:52 |1      |
|10      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |asd      |asd      |2024-11-29 16:05:52 |1      |
|9       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |sda      |asd      |2024-11-29 16:00:32 |1      |
|9       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |sda      |asd      |2024-11-29 16:00:32 |1      |
|5       |2       |홍길동      |6d88f58a-0c38-4010-b703-3ccb187071d8.jpg |123      |중앙로      |2024-11-29 10:36:12 |0      |
|4       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |123      |그린컴      |2024-11-28 17:24:40 |1      |
|4       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |123      |그린컴      |2024-11-28 17:24:40 |1      |
|--------|--------|---------|-----------------------------------------|---------|---------|--------------------|-------|

[2024-12-03 12:35:02 DEBUGhttp-nio-0.0.0.0-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. select pic
        from feed_pics
        where feed_id = 14
 {executed in 0 msec}
[2024-12-03 12:35:02 INFO http-nio-0.0.0.0-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|d3ab1225-6450-4fc4-9f31-eb10a531825a.gif |
|-----------------------------------------|

[2024-12-03 12:35:02 DEBUGhttp-nio-0.0.0.0-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 14
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 12:35:02 INFO http-nio-0.0.0.0-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-03 12:35:02 DEBUGhttp-nio-0.0.0.0-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. select pic
        from feed_pics
        where feed_id = 14
 {executed in 0 msec}
[2024-12-03 12:35:02 INFO http-nio-0.0.0.0-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|d3ab1225-6450-4fc4-9f31-eb10a531825a.gif |
|-----------------------------------------|

[2024-12-03 12:35:02 DEBUGhttp-nio-0.0.0.0-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 14
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 12:35:02 INFO http-nio-0.0.0.0-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-03 12:35:02 DEBUGhttp-nio-0.0.0.0-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. select pic
        from feed_pics
        where feed_id = 13
 {executed in 0 msec}
[2024-12-03 12:35:02 INFO http-nio-0.0.0.0-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|7af273d9-3528-498f-b249-e48a4bc99755.jpg |
|-----------------------------------------|

[2024-12-03 12:35:02 DEBUGhttp-nio-0.0.0.0-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 13
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 12:35:02 INFO http-nio-0.0.0.0-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|61              |34      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|60              |33      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|59              |32      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|58              |31      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-03 12:35:02 DEBUGhttp-nio-0.0.0.0-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. select pic
        from feed_pics
        where feed_id = 13
 {executed in 0 msec}
[2024-12-03 12:35:02 INFO http-nio-0.0.0.0-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|7af273d9-3528-498f-b249-e48a4bc99755.jpg |
|-----------------------------------------|

[2024-12-03 12:35:02 DEBUGhttp-nio-0.0.0.0-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 13
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 12:35:02 INFO http-nio-0.0.0.0-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|61              |34      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|60              |33      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|59              |32      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|58              |31      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-03 12:35:02 DEBUGhttp-nio-0.0.0.0-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. select pic
        from feed_pics
        where feed_id = 12
 {executed in 0 msec}
[2024-12-03 12:35:02 INFO http-nio-0.0.0.0-8080-exec-8] [jdbc.resultsettable] 
|---------|
|pic      |
|---------|
|aaaa.gif |
|---------|

[2024-12-03 12:35:02 DEBUGhttp-nio-0.0.0.0-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 12
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 12:35:02 INFO http-nio-0.0.0.0-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|24              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|23              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|22              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|21              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-03 12:35:02 DEBUGhttp-nio-0.0.0.0-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. select pic
        from feed_pics
        where feed_id = 12
 {executed in 0 msec}
[2024-12-03 12:35:02 INFO http-nio-0.0.0.0-8080-exec-8] [jdbc.resultsettable] 
|---------|
|pic      |
|---------|
|aaaa.gif |
|---------|

[2024-12-03 12:35:02 DEBUGhttp-nio-0.0.0.0-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 12
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 12:35:02 INFO http-nio-0.0.0.0-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|24              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|23              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|22              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|21              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-03 12:35:02 DEBUGhttp-nio-0.0.0.0-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. select pic
        from feed_pics
        where feed_id = 11
 {executed in 0 msec}
[2024-12-03 12:35:02 INFO http-nio-0.0.0.0-8080-exec-8] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-03 12:35:02 DEBUGhttp-nio-0.0.0.0-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 11
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 12:35:02 INFO http-nio-0.0.0.0-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-03 12:35:02 DEBUGhttp-nio-0.0.0.0-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. select pic
        from feed_pics
        where feed_id = 11
 {executed in 0 msec}
[2024-12-03 12:35:02 INFO http-nio-0.0.0.0-8080-exec-8] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-03 12:35:02 DEBUGhttp-nio-0.0.0.0-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 11
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 12:35:02 INFO http-nio-0.0.0.0-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-03 12:35:02 DEBUGhttp-nio-0.0.0.0-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. select pic
        from feed_pics
        where feed_id = 10
 {executed in 0 msec}
[2024-12-03 12:35:02 INFO http-nio-0.0.0.0-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|53da69e7-7ae4-4e7b-b95b-a4c4ca01bdc8.jpg |
|-----------------------------------------|

[2024-12-03 12:35:02 DEBUGhttp-nio-0.0.0.0-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 10
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 12:35:02 INFO http-nio-0.0.0.0-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|29              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|28              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|27              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|26              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-03 12:35:02 DEBUGhttp-nio-0.0.0.0-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. select pic
        from feed_pics
        where feed_id = 10
 {executed in 0 msec}
[2024-12-03 12:35:02 INFO http-nio-0.0.0.0-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|53da69e7-7ae4-4e7b-b95b-a4c4ca01bdc8.jpg |
|-----------------------------------------|

[2024-12-03 12:35:02 DEBUGhttp-nio-0.0.0.0-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 10
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 12:35:02 INFO http-nio-0.0.0.0-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|29              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|28              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|27              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|26              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-03 12:35:02 DEBUGhttp-nio-0.0.0.0-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. select pic
        from feed_pics
        where feed_id = 9
 {executed in 0 msec}
[2024-12-03 12:35:02 INFO http-nio-0.0.0.0-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|7875594b-3649-4059-a29a-5c09feeab0ad.jpg |
|-----------------------------------------|

[2024-12-03 12:35:02 DEBUGhttp-nio-0.0.0.0-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 9
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 12:35:02 INFO http-nio-0.0.0.0-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-03 12:35:02 DEBUGhttp-nio-0.0.0.0-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. select pic
        from feed_pics
        where feed_id = 9
 {executed in 0 msec}
[2024-12-03 12:35:02 INFO http-nio-0.0.0.0-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|7875594b-3649-4059-a29a-5c09feeab0ad.jpg |
|-----------------------------------------|

[2024-12-03 12:35:02 DEBUGhttp-nio-0.0.0.0-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 9
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 12:35:02 INFO http-nio-0.0.0.0-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-03 12:35:02 DEBUGhttp-nio-0.0.0.0-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. select pic
        from feed_pics
        where feed_id = 5
 {executed in 0 msec}
[2024-12-03 12:35:02 INFO http-nio-0.0.0.0-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|675d9f82-0c18-4f6e-91a3-9858129aeb7e.jpg |
|c95cc439-e1e7-40f4-81fa-013b069631ca.jpg |
|f490d2ad-c64d-4006-a74a-8235888e3e87.jpg |
|-----------------------------------------|

[2024-12-03 12:35:02 DEBUGhttp-nio-0.0.0.0-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 5
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 12:35:02 INFO http-nio-0.0.0.0-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-03 12:35:02 DEBUGhttp-nio-0.0.0.0-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. select pic
        from feed_pics
        where feed_id = 4
 {executed in 0 msec}
[2024-12-03 12:35:02 INFO http-nio-0.0.0.0-8080-exec-8] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-03 12:35:02 DEBUGhttp-nio-0.0.0.0-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 4
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 12:35:02 INFO http-nio-0.0.0.0-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-03 12:35:02 DEBUGhttp-nio-0.0.0.0-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. select pic
        from feed_pics
        where feed_id = 4
 {executed in 0 msec}
[2024-12-03 12:35:02 INFO http-nio-0.0.0.0-8080-exec-8] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-03 12:35:02 DEBUGhttp-nio-0.0.0.0-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 4
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 12:35:02 INFO http-nio-0.0.0.0-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-03 12:37:58 INFO File Watcher] [org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener] Restarting due to 2 class path changes (1 addition, 0 deletions, 1 modification)
[2024-12-03 12:37:58 INFO Thread-11] [org.apache.coyote.http11.Http11NioProtocol] Stopping ProtocolHandler ["http-nio-0.0.0.0-8080"]
[2024-12-03 12:37:58 INFO Thread-11] [com.zaxxer.hikari.HikariDataSource] HikariPool-2 - Shutdown initiated...
[2024-12-03 12:37:58 INFO Thread-11] [com.zaxxer.hikari.HikariDataSource] HikariPool-2 - Shutdown completed.
[2024-12-03 12:37:58 INFO restartedMain] [com.green.greengram.GreenGramApplication] Starting GreenGramVer2Application using Java 17.0.12 with PID 788 (D:\BHB\GreenGramVer2\build\classes\java\main started by Administrator in D:\BHB\GreenGramVer2)
[2024-12-03 12:37:58 INFO restartedMain] [com.green.greengram.GreenGramApplication] No active profile set, falling back to 1 default profile: "default"
[2024-12-03 12:37:58 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-03 12:37:58 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-0.0.0.0-8080"]
[2024-12-03 12:37:58 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-03 12:37:58 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-03 12:37:58 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-03 12:37:58 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 197 ms
[2024-12-03 12:37:58 INFO restartedMain] [com.green.greengram.common.MyFileUtils] MyFileUtils - 생성자 D:/BHB/download/greengram_ver2
[2024-12-03 12:37:58 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-03 12:37:58 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-03 12:37:58 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-0.0.0.0-8080"]
[2024-12-03 12:37:58 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-03 12:37:58 INFO restartedMain] [com.green.greengram.GreenGramApplication] Started GreenGramVer2Application in 0.342 seconds (process running for 1393.334)
[2024-12-03 12:37:58 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener] Condition evaluation unchanged
[2024-12-03 12:48:35 INFO File Watcher] [org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener] Restarting due to 2 class path changes (0 additions, 0 deletions, 2 modifications)
[2024-12-03 12:48:35 INFO Thread-15] [org.apache.coyote.http11.Http11NioProtocol] Stopping ProtocolHandler ["http-nio-0.0.0.0-8080"]
[2024-12-03 12:48:35 INFO restartedMain] [com.green.greengram.GreenGramApplication] Starting GreenGramVer2Application using Java 17.0.12 with PID 788 (D:\BHB\GreenGramVer2\build\classes\java\main started by Administrator in D:\BHB\GreenGramVer2)
[2024-12-03 12:48:35 INFO restartedMain] [com.green.greengram.GreenGramApplication] No active profile set, falling back to 1 default profile: "default"
[2024-12-03 12:48:35 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-03 12:48:35 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-0.0.0.0-8080"]
[2024-12-03 12:48:35 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-03 12:48:35 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-03 12:48:35 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-03 12:48:35 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 180 ms
[2024-12-03 12:48:35 INFO restartedMain] [com.green.greengram.common.MyFileUtils] MyFileUtils - 생성자 D:/BHB/download/greengram_ver2
[2024-12-03 12:48:35 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-03 12:48:35 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-03 12:48:35 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-0.0.0.0-8080"]
[2024-12-03 12:48:35 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-03 12:48:35 INFO restartedMain] [com.green.greengram.GreenGramApplication] Started GreenGramVer2Application in 0.311 seconds (process running for 2030.491)
[2024-12-03 12:48:35 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener] Condition evaluation unchanged
[2024-12-03 12:48:37 INFO http-nio-0.0.0.0-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring DispatcherServlet 'dispatcherServlet'
[2024-12-03 12:48:37 INFO http-nio-0.0.0.0-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[2024-12-03 12:48:37 INFO http-nio-0.0.0.0-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Completed initialization in 0 ms
[2024-12-03 12:48:37 INFO http-nio-0.0.0.0-8080-exec-8] [com.green.greengram.feed.model.FeedGetReq] page : 1, size : null, userId : 1
[2024-12-03 12:48:37 INFO http-nio-0.0.0.0-8080-exec-8] [com.green.greengram.feed.FeedController] FeedController > getFeedList > p : FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=1)
[2024-12-03 12:48:37 INFO http-nio-0.0.0.0-8080-exec-8] [com.zaxxer.hikari.HikariDataSource] HikariPool-3 - Starting...
[2024-12-03 12:48:37 INFO http-nio-0.0.0.0-8080-exec-8] [com.zaxxer.hikari.pool.HikariPool] HikariPool-3 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@370dda71
[2024-12-03 12:48:37 INFO http-nio-0.0.0.0-8080-exec-8] [com.zaxxer.hikari.HikariDataSource] HikariPool-3 - Start completed.
[2024-12-03 12:48:37 DEBUGhttp-nio-0.0.0.0-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT A.feed_id AS feedId,
        C.user_id AS writerUserId,
        if(C.nick_name IS NULL, C.uid, C.nick_name) AS writerNm,
        C.pic AS writerPic,
        contents, location,
        A.created_at AS createdAt,
        if(D.feed_id IS NULL, 0, 1) AS isLike
        from feed A
        JOIN user C
        ON A.writer_user_id = C.user_id
        LEFT JOIN feed_like D
        ON C.user_id = D.user_id
        AND D.user_id = 1
        order BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 0 msec}
[2024-12-03 12:48:37 INFO http-nio-0.0.0.0-8080-exec-8] [jdbc.resultsettable] 
|--------|--------|---------|-----------------------------------------|---------|---------|--------------------|-------|
|feed_id |user_id |writernm |pic                                      |contents |location |created_at          |islike |
|--------|--------|---------|-----------------------------------------|---------|---------|--------------------|-------|
|14      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |ㅇ        |ㅇ        |2024-12-03 11:49:38 |1      |
|14      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |ㅇ        |ㅇ        |2024-12-03 11:49:38 |1      |
|13      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |d        |d        |2024-12-03 11:15:02 |1      |
|13      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |d        |d        |2024-12-03 11:15:02 |1      |
|12      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |ㅁㄴㅇ      |ㅁㄴㅇ      |2024-11-29 16:17:53 |1      |
|12      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |ㅁㄴㅇ      |ㅁㄴㅇ      |2024-11-29 16:17:53 |1      |
|11      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |         |         |2024-11-29 16:12:11 |1      |
|11      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |         |         |2024-11-29 16:12:11 |1      |
|10      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |asd      |asd      |2024-11-29 16:05:52 |1      |
|10      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |asd      |asd      |2024-11-29 16:05:52 |1      |
|9       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |sda      |asd      |2024-11-29 16:00:32 |1      |
|9       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |sda      |asd      |2024-11-29 16:00:32 |1      |
|5       |2       |홍길동      |6d88f58a-0c38-4010-b703-3ccb187071d8.jpg |123      |중앙로      |2024-11-29 10:36:12 |0      |
|4       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |123      |그린컴      |2024-11-28 17:24:40 |1      |
|4       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |123      |그린컴      |2024-11-28 17:24:40 |1      |
|--------|--------|---------|-----------------------------------------|---------|---------|--------------------|-------|

[2024-12-03 12:48:37 DEBUGhttp-nio-0.0.0.0-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. select pic
        from feed_pics
        where feed_id = 14
 {executed in 0 msec}
[2024-12-03 12:48:37 INFO http-nio-0.0.0.0-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|d3ab1225-6450-4fc4-9f31-eb10a531825a.gif |
|-----------------------------------------|

[2024-12-03 12:48:37 DEBUGhttp-nio-0.0.0.0-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 14
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 12:48:37 INFO http-nio-0.0.0.0-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-03 12:48:37 DEBUGhttp-nio-0.0.0.0-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. select pic
        from feed_pics
        where feed_id = 14
 {executed in 0 msec}
[2024-12-03 12:48:37 INFO http-nio-0.0.0.0-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|d3ab1225-6450-4fc4-9f31-eb10a531825a.gif |
|-----------------------------------------|

[2024-12-03 12:48:37 DEBUGhttp-nio-0.0.0.0-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 14
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 12:48:37 INFO http-nio-0.0.0.0-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-03 12:48:37 DEBUGhttp-nio-0.0.0.0-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. select pic
        from feed_pics
        where feed_id = 13
 {executed in 0 msec}
[2024-12-03 12:48:37 INFO http-nio-0.0.0.0-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|7af273d9-3528-498f-b249-e48a4bc99755.jpg |
|-----------------------------------------|

[2024-12-03 12:48:37 DEBUGhttp-nio-0.0.0.0-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 13
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 12:48:37 INFO http-nio-0.0.0.0-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|61              |34      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|60              |33      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|59              |32      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|58              |31      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-03 12:48:37 DEBUGhttp-nio-0.0.0.0-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. select pic
        from feed_pics
        where feed_id = 13
 {executed in 0 msec}
[2024-12-03 12:48:37 INFO http-nio-0.0.0.0-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|7af273d9-3528-498f-b249-e48a4bc99755.jpg |
|-----------------------------------------|

[2024-12-03 12:48:37 DEBUGhttp-nio-0.0.0.0-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 13
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 12:48:37 INFO http-nio-0.0.0.0-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|61              |34      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|60              |33      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|59              |32      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|58              |31      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-03 12:48:37 DEBUGhttp-nio-0.0.0.0-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. select pic
        from feed_pics
        where feed_id = 12
 {executed in 0 msec}
[2024-12-03 12:48:37 INFO http-nio-0.0.0.0-8080-exec-8] [jdbc.resultsettable] 
|---------|
|pic      |
|---------|
|aaaa.gif |
|---------|

[2024-12-03 12:48:37 DEBUGhttp-nio-0.0.0.0-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 12
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-03 12:48:37 INFO http-nio-0.0.0.0-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|24              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|23              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|22              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|21              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-03 12:48:37 DEBUGhttp-nio-0.0.0.0-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. select pic
        from feed_pics
        where feed_id = 12
 {executed in 0 msec}
[2024-12-03 12:48:37 INFO http-nio-0.0.0.0-8080-exec-8] [jdbc.resultsettable] 
|---------|
|pic      |
|---------|
|aaaa.gif |
|---------|

[2024-12-03 12:48:37 DEBUGhttp-nio-0.0.0.0-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 12
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 12:48:37 INFO http-nio-0.0.0.0-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|24              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|23              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|22              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|21              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-03 12:48:37 DEBUGhttp-nio-0.0.0.0-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. select pic
        from feed_pics
        where feed_id = 11
 {executed in 0 msec}
[2024-12-03 12:48:37 INFO http-nio-0.0.0.0-8080-exec-8] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-03 12:48:37 DEBUGhttp-nio-0.0.0.0-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 11
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 12:48:37 INFO http-nio-0.0.0.0-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-03 12:48:37 DEBUGhttp-nio-0.0.0.0-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. select pic
        from feed_pics
        where feed_id = 11
 {executed in 0 msec}
[2024-12-03 12:48:37 INFO http-nio-0.0.0.0-8080-exec-8] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-03 12:48:37 DEBUGhttp-nio-0.0.0.0-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 11
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 12:48:37 INFO http-nio-0.0.0.0-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-03 12:48:37 DEBUGhttp-nio-0.0.0.0-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. select pic
        from feed_pics
        where feed_id = 10
 {executed in 0 msec}
[2024-12-03 12:48:37 INFO http-nio-0.0.0.0-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|53da69e7-7ae4-4e7b-b95b-a4c4ca01bdc8.jpg |
|-----------------------------------------|

[2024-12-03 12:48:37 DEBUGhttp-nio-0.0.0.0-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 10
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 12:48:37 INFO http-nio-0.0.0.0-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|29              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|28              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|27              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|26              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-03 12:48:37 DEBUGhttp-nio-0.0.0.0-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. select pic
        from feed_pics
        where feed_id = 10
 {executed in 0 msec}
[2024-12-03 12:48:37 INFO http-nio-0.0.0.0-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|53da69e7-7ae4-4e7b-b95b-a4c4ca01bdc8.jpg |
|-----------------------------------------|

[2024-12-03 12:48:37 DEBUGhttp-nio-0.0.0.0-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 10
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 12:48:37 INFO http-nio-0.0.0.0-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|29              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|28              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|27              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|26              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-03 12:48:37 DEBUGhttp-nio-0.0.0.0-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. select pic
        from feed_pics
        where feed_id = 9
 {executed in 0 msec}
[2024-12-03 12:48:37 INFO http-nio-0.0.0.0-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|7875594b-3649-4059-a29a-5c09feeab0ad.jpg |
|-----------------------------------------|

[2024-12-03 12:48:37 DEBUGhttp-nio-0.0.0.0-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 9
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 12:48:37 INFO http-nio-0.0.0.0-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-03 12:48:37 DEBUGhttp-nio-0.0.0.0-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. select pic
        from feed_pics
        where feed_id = 9
 {executed in 0 msec}
[2024-12-03 12:48:37 INFO http-nio-0.0.0.0-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|7875594b-3649-4059-a29a-5c09feeab0ad.jpg |
|-----------------------------------------|

[2024-12-03 12:48:37 DEBUGhttp-nio-0.0.0.0-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 9
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 12:48:37 INFO http-nio-0.0.0.0-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-03 12:48:37 DEBUGhttp-nio-0.0.0.0-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. select pic
        from feed_pics
        where feed_id = 5
 {executed in 0 msec}
[2024-12-03 12:48:37 INFO http-nio-0.0.0.0-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|675d9f82-0c18-4f6e-91a3-9858129aeb7e.jpg |
|c95cc439-e1e7-40f4-81fa-013b069631ca.jpg |
|f490d2ad-c64d-4006-a74a-8235888e3e87.jpg |
|-----------------------------------------|

[2024-12-03 12:48:37 DEBUGhttp-nio-0.0.0.0-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 5
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 12:48:37 INFO http-nio-0.0.0.0-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-03 12:48:37 DEBUGhttp-nio-0.0.0.0-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. select pic
        from feed_pics
        where feed_id = 4
 {executed in 0 msec}
[2024-12-03 12:48:37 INFO http-nio-0.0.0.0-8080-exec-8] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-03 12:48:37 DEBUGhttp-nio-0.0.0.0-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 4
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 12:48:37 INFO http-nio-0.0.0.0-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-03 12:48:37 DEBUGhttp-nio-0.0.0.0-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. select pic
        from feed_pics
        where feed_id = 4
 {executed in 0 msec}
[2024-12-03 12:48:37 INFO http-nio-0.0.0.0-8080-exec-8] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-03 12:48:37 DEBUGhttp-nio-0.0.0.0-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 4
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 12:48:37 INFO http-nio-0.0.0.0-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-03 12:49:41 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-3 - Shutdown initiated...
[2024-12-03 12:49:41 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-3 - Shutdown completed.
[2024-12-03 12:49:43 INFO restartedMain] [com.green.greengram.GreenGramApplication] Starting GreenGramVer2Application using Java 17.0.12 with PID 9268 (D:\BHB\GreenGramVer2\build\classes\java\main started by Administrator in D:\BHB\GreenGramVer2)
[2024-12-03 12:49:43 INFO restartedMain] [com.green.greengram.GreenGramApplication] No active profile set, falling back to 1 default profile: "default"
[2024-12-03 12:49:43 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-03 12:49:43 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-03 12:49:43 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-03 12:49:43 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-0.0.0.0-8080"]
[2024-12-03 12:49:43 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-03 12:49:43 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-03 12:49:43 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-03 12:49:43 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 774 ms
[2024-12-03 12:49:43 INFO restartedMain] [com.green.greengram.common.MyFileUtils] MyFileUtils - 생성자 D:/BHB/download/greengram_ver2
[2024-12-03 12:49:44 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-03 12:49:44 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-03 12:49:44 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-0.0.0.0-8080"]
[2024-12-03 12:49:44 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-03 12:49:44 INFO restartedMain] [com.green.greengram.GreenGramApplication] Started GreenGramVer2Application in 1.631 seconds (process running for 1.984)
[2024-12-03 12:49:46 INFO http-nio-0.0.0.0-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring DispatcherServlet 'dispatcherServlet'
[2024-12-03 12:49:46 INFO http-nio-0.0.0.0-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[2024-12-03 12:49:46 INFO http-nio-0.0.0.0-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Completed initialization in 0 ms
[2024-12-03 12:49:46 INFO http-nio-0.0.0.0-8080-exec-6] [com.green.greengram.feed.model.FeedGetReq] page : 1, size : null, userId : 1
[2024-12-03 12:49:46 INFO http-nio-0.0.0.0-8080-exec-6] [com.green.greengram.feed.FeedController] FeedController > getFeedList > p : FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=1)
[2024-12-03 12:49:46 INFO http-nio-0.0.0.0-8080-exec-6] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Starting...
[2024-12-03 12:49:46 INFO http-nio-0.0.0.0-8080-exec-6] [com.zaxxer.hikari.pool.HikariPool] HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@297fc68e
[2024-12-03 12:49:46 INFO http-nio-0.0.0.0-8080-exec-6] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Start completed.
[2024-12-03 12:49:46 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId,
        C.user_id AS writerUserId,
        if(C.nick_name IS NULL, C.uid, C.nick_name) AS writerNm,
        C.pic AS writerPic,
        contents, location,
        A.created_at AS createdAt,
        if(D.feed_id IS NULL, 0, 1) AS isLike
        from feed A
        JOIN user C
        ON A.writer_user_id = C.user_id
        LEFT JOIN feed_like D
        ON C.user_id = D.user_id
        AND D.user_id = 1
        order BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 1 msec}
[2024-12-03 12:49:46 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|--------|--------|---------|-----------------------------------------|---------|---------|--------------------|-------|
|feed_id |user_id |writernm |pic                                      |contents |location |created_at          |islike |
|--------|--------|---------|-----------------------------------------|---------|---------|--------------------|-------|
|14      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |ㅇ        |ㅇ        |2024-12-03 11:49:38 |1      |
|14      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |ㅇ        |ㅇ        |2024-12-03 11:49:38 |1      |
|13      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |d        |d        |2024-12-03 11:15:02 |1      |
|13      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |d        |d        |2024-12-03 11:15:02 |1      |
|12      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |ㅁㄴㅇ      |ㅁㄴㅇ      |2024-11-29 16:17:53 |1      |
|12      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |ㅁㄴㅇ      |ㅁㄴㅇ      |2024-11-29 16:17:53 |1      |
|11      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |         |         |2024-11-29 16:12:11 |1      |
|11      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |         |         |2024-11-29 16:12:11 |1      |
|10      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |asd      |asd      |2024-11-29 16:05:52 |1      |
|10      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |asd      |asd      |2024-11-29 16:05:52 |1      |
|9       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |sda      |asd      |2024-11-29 16:00:32 |1      |
|9       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |sda      |asd      |2024-11-29 16:00:32 |1      |
|5       |2       |홍길동      |6d88f58a-0c38-4010-b703-3ccb187071d8.jpg |123      |중앙로      |2024-11-29 10:36:12 |0      |
|4       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |123      |그린컴      |2024-11-28 17:24:40 |1      |
|4       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |123      |그린컴      |2024-11-28 17:24:40 |1      |
|--------|--------|---------|-----------------------------------------|---------|---------|--------------------|-------|

[2024-12-03 12:49:46 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 14
 {executed in 1 msec}
[2024-12-03 12:49:46 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|d3ab1225-6450-4fc4-9f31-eb10a531825a.gif |
|-----------------------------------------|

[2024-12-03 12:49:46 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 14
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 12:49:46 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-03 12:49:46 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 14
 {executed in 0 msec}
[2024-12-03 12:49:46 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|d3ab1225-6450-4fc4-9f31-eb10a531825a.gif |
|-----------------------------------------|

[2024-12-03 12:49:46 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 14
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 12:49:46 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-03 12:49:46 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 13
 {executed in 0 msec}
[2024-12-03 12:49:46 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|7af273d9-3528-498f-b249-e48a4bc99755.jpg |
|-----------------------------------------|

[2024-12-03 12:49:46 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 13
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-03 12:49:46 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|61              |34      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|60              |33      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|59              |32      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|58              |31      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-03 12:49:46 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 13
 {executed in 1 msec}
[2024-12-03 12:49:46 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|7af273d9-3528-498f-b249-e48a4bc99755.jpg |
|-----------------------------------------|

[2024-12-03 12:49:46 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 13
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 12:49:46 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|61              |34      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|60              |33      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|59              |32      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|58              |31      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-03 12:49:46 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 12
 {executed in 1 msec}
[2024-12-03 12:49:46 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|---------|
|pic      |
|---------|
|aaaa.gif |
|---------|

[2024-12-03 12:49:46 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 12
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 12:49:46 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|24              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|23              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|22              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|21              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-03 12:49:46 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 12
 {executed in 1 msec}
[2024-12-03 12:49:46 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|---------|
|pic      |
|---------|
|aaaa.gif |
|---------|

[2024-12-03 12:49:46 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 12
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 12:49:46 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|24              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|23              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|22              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|21              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-03 12:49:46 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 11
 {executed in 0 msec}
[2024-12-03 12:49:46 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-03 12:49:46 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 11
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 12:49:46 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-03 12:49:46 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 11
 {executed in 1 msec}
[2024-12-03 12:49:46 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-03 12:49:46 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 11
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-03 12:49:46 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-03 12:49:46 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 10
 {executed in 0 msec}
[2024-12-03 12:49:46 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|53da69e7-7ae4-4e7b-b95b-a4c4ca01bdc8.jpg |
|-----------------------------------------|

[2024-12-03 12:49:46 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 10
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 12:49:46 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|29              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|28              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|27              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|26              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-03 12:49:46 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 10
 {executed in 0 msec}
[2024-12-03 12:49:46 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|53da69e7-7ae4-4e7b-b95b-a4c4ca01bdc8.jpg |
|-----------------------------------------|

[2024-12-03 12:49:46 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 10
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 12:49:46 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|29              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|28              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|27              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|26              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-03 12:49:46 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 9
 {executed in 0 msec}
[2024-12-03 12:49:46 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|7875594b-3649-4059-a29a-5c09feeab0ad.jpg |
|-----------------------------------------|

[2024-12-03 12:49:46 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 9
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 12:49:46 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-03 12:49:46 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 9
 {executed in 1 msec}
[2024-12-03 12:49:46 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|7875594b-3649-4059-a29a-5c09feeab0ad.jpg |
|-----------------------------------------|

[2024-12-03 12:49:46 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 9
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 12:49:46 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-03 12:49:46 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 5
 {executed in 1 msec}
[2024-12-03 12:49:46 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|675d9f82-0c18-4f6e-91a3-9858129aeb7e.jpg |
|c95cc439-e1e7-40f4-81fa-013b069631ca.jpg |
|f490d2ad-c64d-4006-a74a-8235888e3e87.jpg |
|-----------------------------------------|

[2024-12-03 12:49:46 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 5
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 12:49:46 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-03 12:49:46 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 4
 {executed in 1 msec}
[2024-12-03 12:49:46 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-03 12:49:46 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 4
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 12:49:46 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-03 12:49:46 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 4
 {executed in 1 msec}
[2024-12-03 12:49:46 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-03 12:49:46 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 4
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 12:49:46 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-03 12:51:20 INFO File Watcher] [org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener] Restarting due to 26 class path changes (0 additions, 0 deletions, 26 modifications)
[2024-12-03 12:51:20 INFO Thread-5] [org.apache.coyote.http11.Http11NioProtocol] Stopping ProtocolHandler ["http-nio-0.0.0.0-8080"]
[2024-12-03 12:51:20 INFO Thread-5] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown initiated...
[2024-12-03 12:51:20 INFO Thread-5] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown completed.
[2024-12-03 12:51:20 INFO restartedMain] [com.green.greengram.GreenGramApplication] Starting GreenGramVer2Application using Java 17.0.12 with PID 9268 (D:\BHB\GreenGramVer2\build\classes\java\main started by Administrator in D:\BHB\GreenGramVer2)
[2024-12-03 12:51:20 INFO restartedMain] [com.green.greengram.GreenGramApplication] No active profile set, falling back to 1 default profile: "default"
[2024-12-03 12:51:20 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-03 12:51:20 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-0.0.0.0-8080"]
[2024-12-03 12:51:20 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-03 12:51:20 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-03 12:51:20 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-03 12:51:20 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 199 ms
[2024-12-03 12:51:20 INFO restartedMain] [com.green.greengram.common.MyFileUtils] MyFileUtils - 생성자 D:/BHB/download/greengram_ver2
[2024-12-03 12:51:20 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-03 12:51:20 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-03 12:51:20 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-0.0.0.0-8080"]
[2024-12-03 12:51:20 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-03 12:51:20 INFO restartedMain] [com.green.greengram.GreenGramApplication] Started GreenGramVer2Application in 0.354 seconds (process running for 98.479)
[2024-12-03 12:51:20 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener] Condition evaluation unchanged
[2024-12-03 12:54:18 INFO restartedMain] [com.green.greengram.GreenGramApplication] Starting GreenGramVer2Application using Java 17.0.12 with PID 8520 (D:\BHB\GreenGramVer2\build\classes\java\main started by Administrator in D:\BHB\GreenGramVer2)
[2024-12-03 12:54:18 INFO restartedMain] [com.green.greengram.GreenGramApplication] No active profile set, falling back to 1 default profile: "default"
[2024-12-03 12:54:18 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-03 12:54:18 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-03 12:54:18 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-03 12:54:18 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-0.0.0.0-8080"]
[2024-12-03 12:54:18 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-03 12:54:18 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-03 12:54:18 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-03 12:54:18 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 767 ms
[2024-12-03 12:54:18 INFO restartedMain] [com.green.greengram.common.MyFileUtils] MyFileUtils - 생성자 D:/BHB/download/greengram_ver2
[2024-12-03 12:54:19 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-03 12:54:19 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-03 12:54:19 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-0.0.0.0-8080"]
[2024-12-03 12:54:19 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-03 12:54:19 INFO restartedMain] [com.green.greengram.GreenGramApplication] Started GreenGramVer2Application in 1.611 seconds (process running for 1.954)
[2024-12-03 12:54:39 INFO http-nio-0.0.0.0-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring DispatcherServlet 'dispatcherServlet'
[2024-12-03 12:54:39 INFO http-nio-0.0.0.0-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[2024-12-03 12:54:39 INFO http-nio-0.0.0.0-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Completed initialization in 1 ms
[2024-12-03 12:54:40 INFO http-nio-0.0.0.0-8080-exec-5] [org.springdoc.api.AbstractOpenApiResource] Init duration for springdoc-openapi is: 192 ms
[2024-12-03 12:55:01 INFO http-nio-0.0.0.0-8080-exec-8] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Starting...
[2024-12-03 12:55:01 INFO http-nio-0.0.0.0-8080-exec-8] [com.zaxxer.hikari.pool.HikariPool] HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@714c2cd6
[2024-12-03 12:55:01 INFO http-nio-0.0.0.0-8080-exec-8] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Start completed.
[2024-12-03 12:55:01 DEBUGhttp-nio-0.0.0.0-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. DELETE FROM feed_comment
        WHERE feed_comment_id = 8
        AND user_id = 1
 {executed in 3 msec}
[2024-12-03 12:56:26 INFO http-nio-0.0.0.0-8080-exec-4] [com.green.greengram.feed.model.FeedGetReq] page : 1, size : null, userId : 1
[2024-12-03 12:56:26 INFO http-nio-0.0.0.0-8080-exec-4] [com.green.greengram.feed.FeedController] FeedController > getFeedList > p : FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=1)
[2024-12-03 12:56:26 DEBUGhttp-nio-0.0.0.0-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId,
        C.user_id AS writerUserId,
        if(C.nick_name IS NULL, C.uid, C.nick_name) AS writerNm,
        C.pic AS writerPic,
        contents, location,
        A.created_at AS createdAt,
        if(D.feed_id IS NULL, 0, 1) AS isLike
        from feed A
        JOIN user C
        ON A.writer_user_id = C.user_id
        LEFT JOIN feed_like D
        ON C.user_id = D.user_id
        AND D.user_id = 1
        order BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 0 msec}
[2024-12-03 12:56:26 INFO http-nio-0.0.0.0-8080-exec-4] [jdbc.resultsettable] 
|--------|--------|---------|-----------------------------------------|---------|---------|--------------------|-------|
|feed_id |user_id |writernm |pic                                      |contents |location |created_at          |islike |
|--------|--------|---------|-----------------------------------------|---------|---------|--------------------|-------|
|14      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |ㅇ        |ㅇ        |2024-12-03 11:49:38 |1      |
|14      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |ㅇ        |ㅇ        |2024-12-03 11:49:38 |1      |
|13      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |d        |d        |2024-12-03 11:15:02 |1      |
|13      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |d        |d        |2024-12-03 11:15:02 |1      |
|12      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |ㅁㄴㅇ      |ㅁㄴㅇ      |2024-11-29 16:17:53 |1      |
|12      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |ㅁㄴㅇ      |ㅁㄴㅇ      |2024-11-29 16:17:53 |1      |
|11      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |         |         |2024-11-29 16:12:11 |1      |
|11      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |         |         |2024-11-29 16:12:11 |1      |
|10      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |asd      |asd      |2024-11-29 16:05:52 |1      |
|10      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |asd      |asd      |2024-11-29 16:05:52 |1      |
|9       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |sda      |asd      |2024-11-29 16:00:32 |1      |
|9       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |sda      |asd      |2024-11-29 16:00:32 |1      |
|5       |2       |홍길동      |6d88f58a-0c38-4010-b703-3ccb187071d8.jpg |123      |중앙로      |2024-11-29 10:36:12 |0      |
|4       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |123      |그린컴      |2024-11-28 17:24:40 |1      |
|4       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |123      |그린컴      |2024-11-28 17:24:40 |1      |
|--------|--------|---------|-----------------------------------------|---------|---------|--------------------|-------|

[2024-12-03 12:56:26 DEBUGhttp-nio-0.0.0.0-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 14
 {executed in 0 msec}
[2024-12-03 12:56:26 INFO http-nio-0.0.0.0-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|d3ab1225-6450-4fc4-9f31-eb10a531825a.gif |
|-----------------------------------------|

[2024-12-03 12:56:26 DEBUGhttp-nio-0.0.0.0-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 14
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 12:56:26 INFO http-nio-0.0.0.0-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-03 12:56:26 DEBUGhttp-nio-0.0.0.0-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 14
 {executed in 0 msec}
[2024-12-03 12:56:26 INFO http-nio-0.0.0.0-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|d3ab1225-6450-4fc4-9f31-eb10a531825a.gif |
|-----------------------------------------|

[2024-12-03 12:56:26 DEBUGhttp-nio-0.0.0.0-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 14
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 12:56:26 INFO http-nio-0.0.0.0-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-03 12:56:26 DEBUGhttp-nio-0.0.0.0-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 13
 {executed in 0 msec}
[2024-12-03 12:56:26 INFO http-nio-0.0.0.0-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|7af273d9-3528-498f-b249-e48a4bc99755.jpg |
|-----------------------------------------|

[2024-12-03 12:56:26 DEBUGhttp-nio-0.0.0.0-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 13
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 12:56:26 INFO http-nio-0.0.0.0-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|61              |34      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|60              |33      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|59              |32      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|58              |31      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-03 12:56:26 DEBUGhttp-nio-0.0.0.0-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 13
 {executed in 0 msec}
[2024-12-03 12:56:26 INFO http-nio-0.0.0.0-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|7af273d9-3528-498f-b249-e48a4bc99755.jpg |
|-----------------------------------------|

[2024-12-03 12:56:26 DEBUGhttp-nio-0.0.0.0-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 13
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 12:56:26 INFO http-nio-0.0.0.0-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|61              |34      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|60              |33      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|59              |32      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|58              |31      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-03 12:56:26 DEBUGhttp-nio-0.0.0.0-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 12
 {executed in 0 msec}
[2024-12-03 12:56:26 INFO http-nio-0.0.0.0-8080-exec-4] [jdbc.resultsettable] 
|---------|
|pic      |
|---------|
|aaaa.gif |
|---------|

[2024-12-03 12:56:26 DEBUGhttp-nio-0.0.0.0-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 12
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 12:56:26 INFO http-nio-0.0.0.0-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|24              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|23              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|22              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|21              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-03 12:56:26 DEBUGhttp-nio-0.0.0.0-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 12
 {executed in 0 msec}
[2024-12-03 12:56:26 INFO http-nio-0.0.0.0-8080-exec-4] [jdbc.resultsettable] 
|---------|
|pic      |
|---------|
|aaaa.gif |
|---------|

[2024-12-03 12:56:26 DEBUGhttp-nio-0.0.0.0-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 12
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 12:56:26 INFO http-nio-0.0.0.0-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|24              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|23              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|22              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|21              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-03 12:56:26 DEBUGhttp-nio-0.0.0.0-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 11
 {executed in 0 msec}
[2024-12-03 12:56:26 INFO http-nio-0.0.0.0-8080-exec-4] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-03 12:56:26 DEBUGhttp-nio-0.0.0.0-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 11
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 12:56:26 INFO http-nio-0.0.0.0-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-03 12:56:26 DEBUGhttp-nio-0.0.0.0-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 11
 {executed in 0 msec}
[2024-12-03 12:56:26 INFO http-nio-0.0.0.0-8080-exec-4] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-03 12:56:26 DEBUGhttp-nio-0.0.0.0-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 11
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 12:56:26 INFO http-nio-0.0.0.0-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-03 12:56:26 DEBUGhttp-nio-0.0.0.0-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 10
 {executed in 0 msec}
[2024-12-03 12:56:26 INFO http-nio-0.0.0.0-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|53da69e7-7ae4-4e7b-b95b-a4c4ca01bdc8.jpg |
|-----------------------------------------|

[2024-12-03 12:56:26 DEBUGhttp-nio-0.0.0.0-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 10
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 12:56:26 INFO http-nio-0.0.0.0-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|29              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|28              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|27              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|26              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-03 12:56:26 DEBUGhttp-nio-0.0.0.0-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 10
 {executed in 0 msec}
[2024-12-03 12:56:26 INFO http-nio-0.0.0.0-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|53da69e7-7ae4-4e7b-b95b-a4c4ca01bdc8.jpg |
|-----------------------------------------|

[2024-12-03 12:56:26 DEBUGhttp-nio-0.0.0.0-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 10
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 12:56:26 INFO http-nio-0.0.0.0-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|29              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|28              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|27              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|26              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-03 12:56:26 DEBUGhttp-nio-0.0.0.0-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 9
 {executed in 0 msec}
[2024-12-03 12:56:26 INFO http-nio-0.0.0.0-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|7875594b-3649-4059-a29a-5c09feeab0ad.jpg |
|-----------------------------------------|

[2024-12-03 12:56:26 DEBUGhttp-nio-0.0.0.0-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 9
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-03 12:56:26 INFO http-nio-0.0.0.0-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-03 12:56:26 DEBUGhttp-nio-0.0.0.0-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 9
 {executed in 0 msec}
[2024-12-03 12:56:26 INFO http-nio-0.0.0.0-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|7875594b-3649-4059-a29a-5c09feeab0ad.jpg |
|-----------------------------------------|

[2024-12-03 12:56:26 DEBUGhttp-nio-0.0.0.0-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 9
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 12:56:26 INFO http-nio-0.0.0.0-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-03 12:56:26 DEBUGhttp-nio-0.0.0.0-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 5
 {executed in 0 msec}
[2024-12-03 12:56:26 INFO http-nio-0.0.0.0-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|675d9f82-0c18-4f6e-91a3-9858129aeb7e.jpg |
|c95cc439-e1e7-40f4-81fa-013b069631ca.jpg |
|f490d2ad-c64d-4006-a74a-8235888e3e87.jpg |
|-----------------------------------------|

[2024-12-03 12:56:26 DEBUGhttp-nio-0.0.0.0-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 5
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 12:56:26 INFO http-nio-0.0.0.0-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-03 12:56:26 DEBUGhttp-nio-0.0.0.0-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 4
 {executed in 0 msec}
[2024-12-03 12:56:26 INFO http-nio-0.0.0.0-8080-exec-4] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-03 12:56:26 DEBUGhttp-nio-0.0.0.0-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 4
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 12:56:26 INFO http-nio-0.0.0.0-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-03 12:56:26 DEBUGhttp-nio-0.0.0.0-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 4
 {executed in 0 msec}
[2024-12-03 12:56:26 INFO http-nio-0.0.0.0-8080-exec-4] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-03 12:56:26 DEBUGhttp-nio-0.0.0.0-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 4
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 12:56:26 INFO http-nio-0.0.0.0-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-03 12:56:30 DEBUGhttp-nio-0.0.0.0-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. insert into feed_comment
        set `feed_id` = 14
        , `user_id` = 1
        , `COMMENT` = 'asd'
 {executed in 1 msec}
[2024-12-03 12:56:30 DEBUGhttp-nio-0.0.0.0-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
1. getGeneratedKeys on query: insert into feed_comment
        set `feed_id` = 14
        , `user_id` = 1
        , `COMMENT` = 'asd'
 {executed in 0 msec}
[2024-12-03 12:56:30 INFO http-nio-0.0.0.0-8080-exec-7] [jdbc.resultsettable] 
|----------|
|insert_id |
|----------|
|62        |
|----------|

[2024-12-03 12:56:32 DEBUGhttp-nio-0.0.0.0-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. DELETE FROM feed_comment
        WHERE feed_comment_id = 1
        AND user_id = 1
 {executed in 1 msec}
[2024-12-03 12:57:25 INFO http-nio-0.0.0.0-8080-exec-8] [com.green.greengram.feed.model.FeedGetReq] page : 1, size : null, userId : 1
[2024-12-03 12:57:25 INFO http-nio-0.0.0.0-8080-exec-8] [com.green.greengram.feed.FeedController] FeedController > getFeedList > p : FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=1)
[2024-12-03 12:57:25 DEBUGhttp-nio-0.0.0.0-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId,
        C.user_id AS writerUserId,
        if(C.nick_name IS NULL, C.uid, C.nick_name) AS writerNm,
        C.pic AS writerPic,
        contents, location,
        A.created_at AS createdAt,
        if(D.feed_id IS NULL, 0, 1) AS isLike
        from feed A
        JOIN user C
        ON A.writer_user_id = C.user_id
        LEFT JOIN feed_like D
        ON C.user_id = D.user_id
        AND D.user_id = 1
        order BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 0 msec}
[2024-12-03 12:57:25 INFO http-nio-0.0.0.0-8080-exec-8] [jdbc.resultsettable] 
|--------|--------|---------|-----------------------------------------|---------|---------|--------------------|-------|
|feed_id |user_id |writernm |pic                                      |contents |location |created_at          |islike |
|--------|--------|---------|-----------------------------------------|---------|---------|--------------------|-------|
|14      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |ㅇ        |ㅇ        |2024-12-03 11:49:38 |1      |
|14      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |ㅇ        |ㅇ        |2024-12-03 11:49:38 |1      |
|13      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |d        |d        |2024-12-03 11:15:02 |1      |
|13      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |d        |d        |2024-12-03 11:15:02 |1      |
|12      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |ㅁㄴㅇ      |ㅁㄴㅇ      |2024-11-29 16:17:53 |1      |
|12      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |ㅁㄴㅇ      |ㅁㄴㅇ      |2024-11-29 16:17:53 |1      |
|11      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |         |         |2024-11-29 16:12:11 |1      |
|11      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |         |         |2024-11-29 16:12:11 |1      |
|10      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |asd      |asd      |2024-11-29 16:05:52 |1      |
|10      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |asd      |asd      |2024-11-29 16:05:52 |1      |
|9       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |sda      |asd      |2024-11-29 16:00:32 |1      |
|9       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |sda      |asd      |2024-11-29 16:00:32 |1      |
|5       |2       |홍길동      |6d88f58a-0c38-4010-b703-3ccb187071d8.jpg |123      |중앙로      |2024-11-29 10:36:12 |0      |
|4       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |123      |그린컴      |2024-11-28 17:24:40 |1      |
|4       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |123      |그린컴      |2024-11-28 17:24:40 |1      |
|--------|--------|---------|-----------------------------------------|---------|---------|--------------------|-------|

[2024-12-03 12:57:25 DEBUGhttp-nio-0.0.0.0-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 14
 {executed in 0 msec}
[2024-12-03 12:57:25 INFO http-nio-0.0.0.0-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|d3ab1225-6450-4fc4-9f31-eb10a531825a.gif |
|-----------------------------------------|

[2024-12-03 12:57:25 DEBUGhttp-nio-0.0.0.0-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 14
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 12:57:25 INFO http-nio-0.0.0.0-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|62              |asd     |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-03 12:57:25 DEBUGhttp-nio-0.0.0.0-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 14
 {executed in 0 msec}
[2024-12-03 12:57:25 INFO http-nio-0.0.0.0-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|d3ab1225-6450-4fc4-9f31-eb10a531825a.gif |
|-----------------------------------------|

[2024-12-03 12:57:25 DEBUGhttp-nio-0.0.0.0-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 14
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 12:57:25 INFO http-nio-0.0.0.0-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|62              |asd     |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-03 12:57:25 DEBUGhttp-nio-0.0.0.0-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 13
 {executed in 0 msec}
[2024-12-03 12:57:25 INFO http-nio-0.0.0.0-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|7af273d9-3528-498f-b249-e48a4bc99755.jpg |
|-----------------------------------------|

[2024-12-03 12:57:25 DEBUGhttp-nio-0.0.0.0-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 13
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 16 msec}
[2024-12-03 12:57:25 INFO http-nio-0.0.0.0-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|61              |34      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|60              |33      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|59              |32      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|58              |31      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-03 12:57:25 DEBUGhttp-nio-0.0.0.0-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 13
 {executed in 0 msec}
[2024-12-03 12:57:25 INFO http-nio-0.0.0.0-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|7af273d9-3528-498f-b249-e48a4bc99755.jpg |
|-----------------------------------------|

[2024-12-03 12:57:25 DEBUGhttp-nio-0.0.0.0-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 13
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 12:57:25 INFO http-nio-0.0.0.0-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|61              |34      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|60              |33      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|59              |32      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|58              |31      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-03 12:57:25 DEBUGhttp-nio-0.0.0.0-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 12
 {executed in 0 msec}
[2024-12-03 12:57:25 INFO http-nio-0.0.0.0-8080-exec-8] [jdbc.resultsettable] 
|---------|
|pic      |
|---------|
|aaaa.gif |
|---------|

[2024-12-03 12:57:25 DEBUGhttp-nio-0.0.0.0-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 12
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 12:57:25 INFO http-nio-0.0.0.0-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|24              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|23              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|22              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|21              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-03 12:57:25 DEBUGhttp-nio-0.0.0.0-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 12
 {executed in 0 msec}
[2024-12-03 12:57:25 INFO http-nio-0.0.0.0-8080-exec-8] [jdbc.resultsettable] 
|---------|
|pic      |
|---------|
|aaaa.gif |
|---------|

[2024-12-03 12:57:25 DEBUGhttp-nio-0.0.0.0-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 12
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 12:57:25 INFO http-nio-0.0.0.0-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|24              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|23              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|22              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|21              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-03 12:57:25 DEBUGhttp-nio-0.0.0.0-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 11
 {executed in 0 msec}
[2024-12-03 12:57:25 INFO http-nio-0.0.0.0-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|f3f416ca-1a7e-4483-b1db-b2164d76d4f4.png |
|-----------------------------------------|

[2024-12-03 12:57:25 DEBUGhttp-nio-0.0.0.0-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 11
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 12:57:25 INFO http-nio-0.0.0.0-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-03 12:57:25 DEBUGhttp-nio-0.0.0.0-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 11
 {executed in 0 msec}
[2024-12-03 12:57:25 INFO http-nio-0.0.0.0-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|f3f416ca-1a7e-4483-b1db-b2164d76d4f4.png |
|-----------------------------------------|

[2024-12-03 12:57:25 DEBUGhttp-nio-0.0.0.0-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 11
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 12:57:25 INFO http-nio-0.0.0.0-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-03 12:57:25 DEBUGhttp-nio-0.0.0.0-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 10
 {executed in 0 msec}
[2024-12-03 12:57:25 INFO http-nio-0.0.0.0-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|53da69e7-7ae4-4e7b-b95b-a4c4ca01bdc8.jpg |
|-----------------------------------------|

[2024-12-03 12:57:25 DEBUGhttp-nio-0.0.0.0-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 10
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 12:57:25 INFO http-nio-0.0.0.0-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|29              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|28              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|27              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|26              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-03 12:57:25 DEBUGhttp-nio-0.0.0.0-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 10
 {executed in 0 msec}
[2024-12-03 12:57:25 INFO http-nio-0.0.0.0-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|53da69e7-7ae4-4e7b-b95b-a4c4ca01bdc8.jpg |
|-----------------------------------------|

[2024-12-03 12:57:25 DEBUGhttp-nio-0.0.0.0-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 10
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 12:57:25 INFO http-nio-0.0.0.0-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|29              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|28              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|27              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|26              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-03 12:57:25 DEBUGhttp-nio-0.0.0.0-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 9
 {executed in 0 msec}
[2024-12-03 12:57:25 INFO http-nio-0.0.0.0-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|7875594b-3649-4059-a29a-5c09feeab0ad.jpg |
|-----------------------------------------|

[2024-12-03 12:57:25 DEBUGhttp-nio-0.0.0.0-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 9
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 12:57:25 INFO http-nio-0.0.0.0-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-03 12:57:25 DEBUGhttp-nio-0.0.0.0-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 9
 {executed in 0 msec}
[2024-12-03 12:57:25 INFO http-nio-0.0.0.0-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|7875594b-3649-4059-a29a-5c09feeab0ad.jpg |
|-----------------------------------------|

[2024-12-03 12:57:25 DEBUGhttp-nio-0.0.0.0-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 9
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 12:57:25 INFO http-nio-0.0.0.0-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-03 12:57:25 DEBUGhttp-nio-0.0.0.0-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 5
 {executed in 0 msec}
[2024-12-03 12:57:25 INFO http-nio-0.0.0.0-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|675d9f82-0c18-4f6e-91a3-9858129aeb7e.jpg |
|c95cc439-e1e7-40f4-81fa-013b069631ca.jpg |
|f490d2ad-c64d-4006-a74a-8235888e3e87.jpg |
|-----------------------------------------|

[2024-12-03 12:57:25 DEBUGhttp-nio-0.0.0.0-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 5
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 12:57:25 INFO http-nio-0.0.0.0-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-03 12:57:25 DEBUGhttp-nio-0.0.0.0-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 4
 {executed in 0 msec}
[2024-12-03 12:57:25 INFO http-nio-0.0.0.0-8080-exec-8] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-03 12:57:25 DEBUGhttp-nio-0.0.0.0-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 4
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 12:57:25 INFO http-nio-0.0.0.0-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-03 12:57:25 DEBUGhttp-nio-0.0.0.0-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 4
 {executed in 0 msec}
[2024-12-03 12:57:25 INFO http-nio-0.0.0.0-8080-exec-8] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-03 12:57:25 DEBUGhttp-nio-0.0.0.0-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 4
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 12:57:25 INFO http-nio-0.0.0.0-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-03 12:57:31 INFO http-nio-0.0.0.0-8080-exec-9] [com.green.greengram.feed.model.FeedGetReq] page : 2, size : null, userId : 1
[2024-12-03 12:57:31 INFO http-nio-0.0.0.0-8080-exec-9] [com.green.greengram.feed.FeedController] FeedController > getFeedList > p : FeedGetReq(super=Paging(page=2, size=20, startIdx=20), signedUserId=1)
[2024-12-03 12:57:31 DEBUGhttp-nio-0.0.0.0-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId,
        C.user_id AS writerUserId,
        if(C.nick_name IS NULL, C.uid, C.nick_name) AS writerNm,
        C.pic AS writerPic,
        contents, location,
        A.created_at AS createdAt,
        if(D.feed_id IS NULL, 0, 1) AS isLike
        from feed A
        JOIN user C
        ON A.writer_user_id = C.user_id
        LEFT JOIN feed_like D
        ON C.user_id = D.user_id
        AND D.user_id = 1
        order BY A.feed_id DESC
        LIMIT 20, 20
 {executed in 0 msec}
[2024-12-03 12:57:31 INFO http-nio-0.0.0.0-8080-exec-9] [jdbc.resultsettable] 
|--------|--------|---------|----|---------|---------|-----------|-------|
|feed_id |user_id |writernm |pic |contents |location |created_at |islike |
|--------|--------|---------|----|---------|---------|-----------|-------|
|--------|--------|---------|----|---------|---------|-----------|-------|

[2024-12-03 13:00:07 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown initiated...
[2024-12-03 13:00:07 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown completed.
[2024-12-03 13:00:08 INFO restartedMain] [com.green.greengram.GreenGramApplication] Starting GreenGramVer2Application using Java 17.0.12 with PID 10924 (D:\BHB\GreenGramVer2\build\classes\java\main started by Administrator in D:\BHB\GreenGramVer2)
[2024-12-03 13:00:08 INFO restartedMain] [com.green.greengram.GreenGramApplication] No active profile set, falling back to 1 default profile: "default"
[2024-12-03 13:00:08 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-03 13:00:08 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-03 13:00:09 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-03 13:00:09 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-0.0.0.0-8080"]
[2024-12-03 13:00:09 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-03 13:00:09 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-03 13:00:09 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-03 13:00:09 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 792 ms
[2024-12-03 13:00:09 INFO restartedMain] [com.green.greengram.common.MyFileUtils] MyFileUtils - 생성자 D:/BHB/download/greengram_ver2
[2024-12-03 13:00:09 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-03 13:00:09 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-03 13:00:09 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-0.0.0.0-8080"]
[2024-12-03 13:00:09 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-03 13:00:09 INFO restartedMain] [com.green.greengram.GreenGramApplication] Started GreenGramVer2Application in 1.654 seconds (process running for 2.038)
[2024-12-03 13:00:14 INFO http-nio-0.0.0.0-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring DispatcherServlet 'dispatcherServlet'
[2024-12-03 13:00:14 INFO http-nio-0.0.0.0-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[2024-12-03 13:00:14 INFO http-nio-0.0.0.0-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Completed initialization in 1 ms
[2024-12-03 13:00:14 INFO http-nio-0.0.0.0-8080-exec-6] [com.green.greengram.feed.model.FeedGetReq] page : 1, size : null, userId : 1
[2024-12-03 13:00:14 INFO http-nio-0.0.0.0-8080-exec-6] [com.green.greengram.feed.FeedController] FeedController > getFeedList > p : FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=1)
[2024-12-03 13:00:14 INFO http-nio-0.0.0.0-8080-exec-6] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Starting...
[2024-12-03 13:00:14 INFO http-nio-0.0.0.0-8080-exec-6] [com.zaxxer.hikari.pool.HikariPool] HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@42b68e87
[2024-12-03 13:00:14 INFO http-nio-0.0.0.0-8080-exec-6] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Start completed.
[2024-12-03 13:00:14 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId,
        C.user_id AS writerUserId,
        if(C.nick_name IS NULL, C.uid, C.nick_name) AS writerNm,
        C.pic AS writerPic,
        contents, location,
        A.created_at AS createdAt,
        if(D.feed_id IS NULL, 0, 1) AS isLike
        from feed A
        JOIN user C
        ON A.writer_user_id = C.user_id
        LEFT JOIN feed_like D
        ON C.user_id = D.user_id
        AND D.user_id = 1
        order BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 1 msec}
[2024-12-03 13:00:14 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|--------|--------|---------|-----------------------------------------|---------|---------|--------------------|-------|
|feed_id |user_id |writernm |pic                                      |contents |location |created_at          |islike |
|--------|--------|---------|-----------------------------------------|---------|---------|--------------------|-------|
|14      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |ㅇ        |ㅇ        |2024-12-03 11:49:38 |1      |
|14      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |ㅇ        |ㅇ        |2024-12-03 11:49:38 |1      |
|13      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |d        |d        |2024-12-03 11:15:02 |1      |
|13      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |d        |d        |2024-12-03 11:15:02 |1      |
|12      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |ㅁㄴㅇ      |ㅁㄴㅇ      |2024-11-29 16:17:53 |1      |
|12      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |ㅁㄴㅇ      |ㅁㄴㅇ      |2024-11-29 16:17:53 |1      |
|11      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |         |         |2024-11-29 16:12:11 |1      |
|11      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |         |         |2024-11-29 16:12:11 |1      |
|10      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |asd      |asd      |2024-11-29 16:05:52 |1      |
|10      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |asd      |asd      |2024-11-29 16:05:52 |1      |
|9       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |sda      |asd      |2024-11-29 16:00:32 |1      |
|9       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |sda      |asd      |2024-11-29 16:00:32 |1      |
|5       |2       |홍길동      |6d88f58a-0c38-4010-b703-3ccb187071d8.jpg |123      |중앙로      |2024-11-29 10:36:12 |0      |
|4       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |123      |그린컴      |2024-11-28 17:24:40 |1      |
|4       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |123      |그린컴      |2024-11-28 17:24:40 |1      |
|--------|--------|---------|-----------------------------------------|---------|---------|--------------------|-------|

[2024-12-03 13:00:14 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 14
 {executed in 0 msec}
[2024-12-03 13:00:14 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|d3ab1225-6450-4fc4-9f31-eb10a531825a.gif |
|-----------------------------------------|

[2024-12-03 13:00:14 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 14
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 13:00:14 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|62              |asd     |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-03 13:00:14 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 14
 {executed in 1 msec}
[2024-12-03 13:00:14 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|d3ab1225-6450-4fc4-9f31-eb10a531825a.gif |
|-----------------------------------------|

[2024-12-03 13:00:14 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 14
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 13:00:14 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|62              |asd     |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-03 13:00:14 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 13
 {executed in 0 msec}
[2024-12-03 13:00:14 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|7af273d9-3528-498f-b249-e48a4bc99755.jpg |
|-----------------------------------------|

[2024-12-03 13:00:14 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 13
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 13:00:14 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|61              |34      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|60              |33      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|59              |32      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|58              |31      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-03 13:00:14 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 13
 {executed in 0 msec}
[2024-12-03 13:00:14 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|7af273d9-3528-498f-b249-e48a4bc99755.jpg |
|-----------------------------------------|

[2024-12-03 13:00:14 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 13
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 13:00:14 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|61              |34      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|60              |33      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|59              |32      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|58              |31      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-03 13:00:14 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 12
 {executed in 0 msec}
[2024-12-03 13:00:14 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|---------|
|pic      |
|---------|
|aaaa.gif |
|---------|

[2024-12-03 13:00:14 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 12
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 13:00:14 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|24              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|23              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|22              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|21              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-03 13:00:14 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 12
 {executed in 0 msec}
[2024-12-03 13:00:14 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|---------|
|pic      |
|---------|
|aaaa.gif |
|---------|

[2024-12-03 13:00:14 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 12
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 13:00:14 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|24              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|23              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|22              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|21              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-03 13:00:14 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 11
 {executed in 0 msec}
[2024-12-03 13:00:14 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|f3f416ca-1a7e-4483-b1db-b2164d76d4f4.png |
|-----------------------------------------|

[2024-12-03 13:00:14 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 11
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 13:00:14 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-03 13:00:14 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 11
 {executed in 0 msec}
[2024-12-03 13:00:14 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|f3f416ca-1a7e-4483-b1db-b2164d76d4f4.png |
|-----------------------------------------|

[2024-12-03 13:00:14 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 11
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 13:00:14 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-03 13:00:14 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 10
 {executed in 0 msec}
[2024-12-03 13:00:14 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|53da69e7-7ae4-4e7b-b95b-a4c4ca01bdc8.jpg |
|-----------------------------------------|

[2024-12-03 13:00:14 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 10
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 13:00:14 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|29              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|28              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|27              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|26              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-03 13:00:14 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 10
 {executed in 0 msec}
[2024-12-03 13:00:14 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|53da69e7-7ae4-4e7b-b95b-a4c4ca01bdc8.jpg |
|-----------------------------------------|

[2024-12-03 13:00:14 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 10
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 13:00:14 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|29              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|28              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|27              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|26              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-03 13:00:14 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 9
 {executed in 0 msec}
[2024-12-03 13:00:14 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|7875594b-3649-4059-a29a-5c09feeab0ad.jpg |
|-----------------------------------------|

[2024-12-03 13:00:14 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 9
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-03 13:00:14 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-03 13:00:14 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 9
 {executed in 0 msec}
[2024-12-03 13:00:14 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|7875594b-3649-4059-a29a-5c09feeab0ad.jpg |
|-----------------------------------------|

[2024-12-03 13:00:14 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 9
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-03 13:00:14 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-03 13:00:14 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 5
 {executed in 0 msec}
[2024-12-03 13:00:14 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|675d9f82-0c18-4f6e-91a3-9858129aeb7e.jpg |
|c95cc439-e1e7-40f4-81fa-013b069631ca.jpg |
|f490d2ad-c64d-4006-a74a-8235888e3e87.jpg |
|-----------------------------------------|

[2024-12-03 13:00:14 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 5
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 13:00:14 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-03 13:00:14 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 4
 {executed in 0 msec}
[2024-12-03 13:00:14 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-03 13:00:14 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 4
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 13:00:14 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-03 13:00:14 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 4
 {executed in 0 msec}
[2024-12-03 13:00:14 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-03 13:00:14 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 4
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 13:00:14 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-03 13:00:16 DEBUGhttp-nio-0.0.0.0-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. DELETE FROM feed_comment
        WHERE feed_comment_id = 62
        AND user_id = 1
 {executed in 6 msec}
[2024-12-03 13:00:51 DEBUGhttp-nio-0.0.0.0-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. insert into feed_comment
        set `feed_id` = 14
        , `user_id` = 1
        , `COMMENT` = 'asdasd'
 {executed in 2 msec}
[2024-12-03 13:00:51 DEBUGhttp-nio-0.0.0.0-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
1. getGeneratedKeys on query: insert into feed_comment
        set `feed_id` = 14
        , `user_id` = 1
        , `COMMENT` = 'asdasd'
 {executed in 0 msec}
[2024-12-03 13:00:51 INFO http-nio-0.0.0.0-8080-exec-1] [jdbc.resultsettable] 
|----------|
|insert_id |
|----------|
|63        |
|----------|

[2024-12-03 13:00:53 DEBUGhttp-nio-0.0.0.0-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. DELETE FROM feed_comment
        WHERE feed_comment_id = 1
        AND user_id = 1
 {executed in 0 msec}
[2024-12-03 13:01:03 INFO http-nio-0.0.0.0-8080-exec-4] [com.green.greengram.feed.model.FeedGetReq] page : 1, size : null, userId : 1
[2024-12-03 13:01:03 INFO http-nio-0.0.0.0-8080-exec-4] [com.green.greengram.feed.FeedController] FeedController > getFeedList > p : FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=1)
[2024-12-03 13:01:03 DEBUGhttp-nio-0.0.0.0-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId,
        C.user_id AS writerUserId,
        if(C.nick_name IS NULL, C.uid, C.nick_name) AS writerNm,
        C.pic AS writerPic,
        contents, location,
        A.created_at AS createdAt,
        if(D.feed_id IS NULL, 0, 1) AS isLike
        from feed A
        JOIN user C
        ON A.writer_user_id = C.user_id
        LEFT JOIN feed_like D
        ON C.user_id = D.user_id
        AND D.user_id = 1
        order BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 0 msec}
[2024-12-03 13:01:03 INFO http-nio-0.0.0.0-8080-exec-4] [jdbc.resultsettable] 
|--------|--------|---------|-----------------------------------------|---------|---------|--------------------|-------|
|feed_id |user_id |writernm |pic                                      |contents |location |created_at          |islike |
|--------|--------|---------|-----------------------------------------|---------|---------|--------------------|-------|
|14      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |ㅇ        |ㅇ        |2024-12-03 11:49:38 |1      |
|14      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |ㅇ        |ㅇ        |2024-12-03 11:49:38 |1      |
|13      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |d        |d        |2024-12-03 11:15:02 |1      |
|13      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |d        |d        |2024-12-03 11:15:02 |1      |
|12      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |ㅁㄴㅇ      |ㅁㄴㅇ      |2024-11-29 16:17:53 |1      |
|12      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |ㅁㄴㅇ      |ㅁㄴㅇ      |2024-11-29 16:17:53 |1      |
|11      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |         |         |2024-11-29 16:12:11 |1      |
|11      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |         |         |2024-11-29 16:12:11 |1      |
|10      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |asd      |asd      |2024-11-29 16:05:52 |1      |
|10      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |asd      |asd      |2024-11-29 16:05:52 |1      |
|9       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |sda      |asd      |2024-11-29 16:00:32 |1      |
|9       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |sda      |asd      |2024-11-29 16:00:32 |1      |
|5       |2       |홍길동      |6d88f58a-0c38-4010-b703-3ccb187071d8.jpg |123      |중앙로      |2024-11-29 10:36:12 |0      |
|4       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |123      |그린컴      |2024-11-28 17:24:40 |1      |
|4       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |123      |그린컴      |2024-11-28 17:24:40 |1      |
|--------|--------|---------|-----------------------------------------|---------|---------|--------------------|-------|

[2024-12-03 13:01:03 DEBUGhttp-nio-0.0.0.0-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 14
 {executed in 0 msec}
[2024-12-03 13:01:03 INFO http-nio-0.0.0.0-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|d3ab1225-6450-4fc4-9f31-eb10a531825a.gif |
|-----------------------------------------|

[2024-12-03 13:01:03 DEBUGhttp-nio-0.0.0.0-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 14
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 13:01:03 INFO http-nio-0.0.0.0-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|63              |asdasd  |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-03 13:01:03 DEBUGhttp-nio-0.0.0.0-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 14
 {executed in 1 msec}
[2024-12-03 13:01:03 INFO http-nio-0.0.0.0-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|d3ab1225-6450-4fc4-9f31-eb10a531825a.gif |
|-----------------------------------------|

[2024-12-03 13:01:03 DEBUGhttp-nio-0.0.0.0-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 14
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 13:01:03 INFO http-nio-0.0.0.0-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|63              |asdasd  |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-03 13:01:03 DEBUGhttp-nio-0.0.0.0-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 13
 {executed in 0 msec}
[2024-12-03 13:01:03 INFO http-nio-0.0.0.0-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|7af273d9-3528-498f-b249-e48a4bc99755.jpg |
|-----------------------------------------|

[2024-12-03 13:01:03 DEBUGhttp-nio-0.0.0.0-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 13
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-03 13:01:03 INFO http-nio-0.0.0.0-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|61              |34      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|60              |33      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|59              |32      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|58              |31      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-03 13:01:03 DEBUGhttp-nio-0.0.0.0-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 13
 {executed in 0 msec}
[2024-12-03 13:01:03 INFO http-nio-0.0.0.0-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|7af273d9-3528-498f-b249-e48a4bc99755.jpg |
|-----------------------------------------|

[2024-12-03 13:01:03 DEBUGhttp-nio-0.0.0.0-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 13
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 13:01:03 INFO http-nio-0.0.0.0-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|61              |34      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|60              |33      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|59              |32      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|58              |31      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-03 13:01:03 DEBUGhttp-nio-0.0.0.0-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 12
 {executed in 1 msec}
[2024-12-03 13:01:03 INFO http-nio-0.0.0.0-8080-exec-4] [jdbc.resultsettable] 
|---------|
|pic      |
|---------|
|aaaa.gif |
|---------|

[2024-12-03 13:01:03 DEBUGhttp-nio-0.0.0.0-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 12
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 13:01:03 INFO http-nio-0.0.0.0-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|24              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|23              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|22              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|21              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-03 13:01:03 DEBUGhttp-nio-0.0.0.0-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 12
 {executed in 0 msec}
[2024-12-03 13:01:03 INFO http-nio-0.0.0.0-8080-exec-4] [jdbc.resultsettable] 
|---------|
|pic      |
|---------|
|aaaa.gif |
|---------|

[2024-12-03 13:01:03 DEBUGhttp-nio-0.0.0.0-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 12
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-03 13:01:03 INFO http-nio-0.0.0.0-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|24              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|23              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|22              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|21              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-03 13:01:03 DEBUGhttp-nio-0.0.0.0-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 11
 {executed in 0 msec}
[2024-12-03 13:01:03 INFO http-nio-0.0.0.0-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|f3f416ca-1a7e-4483-b1db-b2164d76d4f4.png |
|-----------------------------------------|

[2024-12-03 13:01:03 DEBUGhttp-nio-0.0.0.0-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 11
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 13:01:03 INFO http-nio-0.0.0.0-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-03 13:01:03 DEBUGhttp-nio-0.0.0.0-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 11
 {executed in 1 msec}
[2024-12-03 13:01:03 INFO http-nio-0.0.0.0-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|f3f416ca-1a7e-4483-b1db-b2164d76d4f4.png |
|-----------------------------------------|

[2024-12-03 13:01:03 DEBUGhttp-nio-0.0.0.0-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 11
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 13:01:03 INFO http-nio-0.0.0.0-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-03 13:01:03 DEBUGhttp-nio-0.0.0.0-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 10
 {executed in 1 msec}
[2024-12-03 13:01:03 INFO http-nio-0.0.0.0-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|53da69e7-7ae4-4e7b-b95b-a4c4ca01bdc8.jpg |
|-----------------------------------------|

[2024-12-03 13:01:03 DEBUGhttp-nio-0.0.0.0-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 10
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 13:01:03 INFO http-nio-0.0.0.0-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|29              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|28              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|27              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|26              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-03 13:01:03 DEBUGhttp-nio-0.0.0.0-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 10
 {executed in 0 msec}
[2024-12-03 13:01:03 INFO http-nio-0.0.0.0-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|53da69e7-7ae4-4e7b-b95b-a4c4ca01bdc8.jpg |
|-----------------------------------------|

[2024-12-03 13:01:03 DEBUGhttp-nio-0.0.0.0-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 10
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-03 13:01:03 INFO http-nio-0.0.0.0-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|29              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|28              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|27              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|26              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-03 13:01:03 DEBUGhttp-nio-0.0.0.0-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 9
 {executed in 1 msec}
[2024-12-03 13:01:03 INFO http-nio-0.0.0.0-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|7875594b-3649-4059-a29a-5c09feeab0ad.jpg |
|-----------------------------------------|

[2024-12-03 13:01:03 DEBUGhttp-nio-0.0.0.0-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 9
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-03 13:01:03 INFO http-nio-0.0.0.0-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-03 13:01:03 DEBUGhttp-nio-0.0.0.0-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 9
 {executed in 0 msec}
[2024-12-03 13:01:03 INFO http-nio-0.0.0.0-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|7875594b-3649-4059-a29a-5c09feeab0ad.jpg |
|-----------------------------------------|

[2024-12-03 13:01:03 DEBUGhttp-nio-0.0.0.0-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 9
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 13:01:03 INFO http-nio-0.0.0.0-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-03 13:01:03 DEBUGhttp-nio-0.0.0.0-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 5
 {executed in 1 msec}
[2024-12-03 13:01:03 INFO http-nio-0.0.0.0-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|675d9f82-0c18-4f6e-91a3-9858129aeb7e.jpg |
|c95cc439-e1e7-40f4-81fa-013b069631ca.jpg |
|f490d2ad-c64d-4006-a74a-8235888e3e87.jpg |
|-----------------------------------------|

[2024-12-03 13:01:03 DEBUGhttp-nio-0.0.0.0-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 5
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 13:01:03 INFO http-nio-0.0.0.0-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-03 13:01:03 DEBUGhttp-nio-0.0.0.0-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 4
 {executed in 1 msec}
[2024-12-03 13:01:03 INFO http-nio-0.0.0.0-8080-exec-4] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-03 13:01:03 DEBUGhttp-nio-0.0.0.0-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 4
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 13:01:03 INFO http-nio-0.0.0.0-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-03 13:01:03 DEBUGhttp-nio-0.0.0.0-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 4
 {executed in 1 msec}
[2024-12-03 13:01:03 INFO http-nio-0.0.0.0-8080-exec-4] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-03 13:01:03 DEBUGhttp-nio-0.0.0.0-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 4
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-03 13:01:03 INFO http-nio-0.0.0.0-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-03 13:01:05 DEBUGhttp-nio-0.0.0.0-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. DELETE FROM feed_comment
        WHERE feed_comment_id = 63
        AND user_id = 1
 {executed in 5 msec}
[2024-12-03 13:01:08 DEBUGhttp-nio-0.0.0.0-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. DELETE FROM feed_comment
        WHERE feed_comment_id = 63
        AND user_id = 1
 {executed in 1 msec}
[2024-12-03 13:02:54 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown initiated...
[2024-12-03 13:02:54 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown completed.
[2024-12-03 13:02:56 INFO restartedMain] [com.green.greengram.GreenGramApplication] Starting GreenGramVer2Application using Java 17.0.12 with PID 5016 (D:\BHB\GreenGramVer2\build\classes\java\main started by Administrator in D:\BHB\GreenGramVer2)
[2024-12-03 13:02:56 INFO restartedMain] [com.green.greengram.GreenGramApplication] No active profile set, falling back to 1 default profile: "default"
[2024-12-03 13:02:56 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-03 13:02:56 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-03 13:02:56 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-03 13:02:56 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-0.0.0.0-8080"]
[2024-12-03 13:02:56 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-03 13:02:56 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-03 13:02:56 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-03 13:02:56 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 778 ms
[2024-12-03 13:02:56 INFO restartedMain] [com.green.greengram.common.MyFileUtils] MyFileUtils - 생성자 D:/BHB/download/greengram_ver2
[2024-12-03 13:02:57 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-03 13:02:57 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-03 13:02:57 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-0.0.0.0-8080"]
[2024-12-03 13:02:57 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-03 13:02:57 INFO restartedMain] [com.green.greengram.GreenGramApplication] Started GreenGramVer2Application in 1.632 seconds (process running for 1.972)
[2024-12-03 13:03:00 INFO http-nio-0.0.0.0-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring DispatcherServlet 'dispatcherServlet'
[2024-12-03 13:03:00 INFO http-nio-0.0.0.0-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[2024-12-03 13:03:00 INFO http-nio-0.0.0.0-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Completed initialization in 1 ms
[2024-12-03 13:03:00 INFO http-nio-0.0.0.0-8080-exec-6] [com.green.greengram.feed.model.FeedGetReq] page : 1, size : null, userId : 1
[2024-12-03 13:03:00 INFO http-nio-0.0.0.0-8080-exec-6] [com.green.greengram.feed.FeedController] FeedController > getFeedList > p : FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=1)
[2024-12-03 13:03:00 INFO http-nio-0.0.0.0-8080-exec-6] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Starting...
[2024-12-03 13:03:00 INFO http-nio-0.0.0.0-8080-exec-6] [com.zaxxer.hikari.pool.HikariPool] HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@385b7b93
[2024-12-03 13:03:00 INFO http-nio-0.0.0.0-8080-exec-6] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Start completed.
[2024-12-03 13:03:00 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId,
        C.user_id AS writerUserId,
        if(C.nick_name IS NULL, C.uid, C.nick_name) AS writerNm,
        C.pic AS writerPic,
        contents, location,
        A.created_at AS createdAt,
        if(D.feed_id IS NULL, 0, 1) AS isLike
        from feed A
        JOIN user C
        ON A.writer_user_id = C.user_id
        LEFT JOIN feed_like D
        ON C.user_id = D.user_id
        AND D.user_id = 1
        order BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 0 msec}
[2024-12-03 13:03:00 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|--------|--------|---------|-----------------------------------------|---------|---------|--------------------|-------|
|feed_id |user_id |writernm |pic                                      |contents |location |created_at          |islike |
|--------|--------|---------|-----------------------------------------|---------|---------|--------------------|-------|
|14      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |ㅇ        |ㅇ        |2024-12-03 11:49:38 |1      |
|14      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |ㅇ        |ㅇ        |2024-12-03 11:49:38 |1      |
|13      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |d        |d        |2024-12-03 11:15:02 |1      |
|13      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |d        |d        |2024-12-03 11:15:02 |1      |
|12      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |ㅁㄴㅇ      |ㅁㄴㅇ      |2024-11-29 16:17:53 |1      |
|12      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |ㅁㄴㅇ      |ㅁㄴㅇ      |2024-11-29 16:17:53 |1      |
|11      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |         |         |2024-11-29 16:12:11 |1      |
|11      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |         |         |2024-11-29 16:12:11 |1      |
|10      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |asd      |asd      |2024-11-29 16:05:52 |1      |
|10      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |asd      |asd      |2024-11-29 16:05:52 |1      |
|9       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |sda      |asd      |2024-11-29 16:00:32 |1      |
|9       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |sda      |asd      |2024-11-29 16:00:32 |1      |
|5       |2       |홍길동      |6d88f58a-0c38-4010-b703-3ccb187071d8.jpg |123      |중앙로      |2024-11-29 10:36:12 |0      |
|4       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |123      |그린컴      |2024-11-28 17:24:40 |1      |
|4       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |123      |그린컴      |2024-11-28 17:24:40 |1      |
|--------|--------|---------|-----------------------------------------|---------|---------|--------------------|-------|

[2024-12-03 13:03:00 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 14
 {executed in 0 msec}
[2024-12-03 13:03:00 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|d3ab1225-6450-4fc4-9f31-eb10a531825a.gif |
|-----------------------------------------|

[2024-12-03 13:03:00 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 14
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 13:03:00 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-03 13:03:00 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 14
 {executed in 0 msec}
[2024-12-03 13:03:00 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|d3ab1225-6450-4fc4-9f31-eb10a531825a.gif |
|-----------------------------------------|

[2024-12-03 13:03:00 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 14
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 13:03:00 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-03 13:03:00 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 13
 {executed in 0 msec}
[2024-12-03 13:03:00 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|7af273d9-3528-498f-b249-e48a4bc99755.jpg |
|-----------------------------------------|

[2024-12-03 13:03:00 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 13
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-03 13:03:00 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|61              |34      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|60              |33      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|59              |32      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|58              |31      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-03 13:03:00 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 13
 {executed in 0 msec}
[2024-12-03 13:03:00 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|7af273d9-3528-498f-b249-e48a4bc99755.jpg |
|-----------------------------------------|

[2024-12-03 13:03:00 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 13
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 13:03:00 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|61              |34      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|60              |33      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|59              |32      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|58              |31      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-03 13:03:00 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 12
 {executed in 0 msec}
[2024-12-03 13:03:00 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|---------|
|pic      |
|---------|
|aaaa.gif |
|---------|

[2024-12-03 13:03:00 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 12
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 13:03:00 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|24              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|23              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|22              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|21              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-03 13:03:00 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 12
 {executed in 0 msec}
[2024-12-03 13:03:00 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|---------|
|pic      |
|---------|
|aaaa.gif |
|---------|

[2024-12-03 13:03:00 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 12
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 13:03:00 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|24              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|23              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|22              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|21              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-03 13:03:00 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 11
 {executed in 0 msec}
[2024-12-03 13:03:00 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|f3f416ca-1a7e-4483-b1db-b2164d76d4f4.png |
|-----------------------------------------|

[2024-12-03 13:03:00 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 11
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-03 13:03:00 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-03 13:03:00 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 11
 {executed in 0 msec}
[2024-12-03 13:03:00 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|f3f416ca-1a7e-4483-b1db-b2164d76d4f4.png |
|-----------------------------------------|

[2024-12-03 13:03:00 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 11
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 13:03:00 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-03 13:03:00 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 10
 {executed in 0 msec}
[2024-12-03 13:03:00 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|53da69e7-7ae4-4e7b-b95b-a4c4ca01bdc8.jpg |
|-----------------------------------------|

[2024-12-03 13:03:00 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 10
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-03 13:03:00 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|29              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|28              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|27              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|26              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-03 13:03:00 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 10
 {executed in 0 msec}
[2024-12-03 13:03:00 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|53da69e7-7ae4-4e7b-b95b-a4c4ca01bdc8.jpg |
|-----------------------------------------|

[2024-12-03 13:03:00 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 10
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 13:03:00 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|29              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|28              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|27              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|26              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-03 13:03:00 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 9
 {executed in 0 msec}
[2024-12-03 13:03:00 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|7875594b-3649-4059-a29a-5c09feeab0ad.jpg |
|-----------------------------------------|

[2024-12-03 13:03:00 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 9
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 13:03:00 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-03 13:03:00 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 9
 {executed in 0 msec}
[2024-12-03 13:03:00 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|7875594b-3649-4059-a29a-5c09feeab0ad.jpg |
|-----------------------------------------|

[2024-12-03 13:03:00 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 9
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 13:03:00 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-03 13:03:00 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 5
 {executed in 0 msec}
[2024-12-03 13:03:00 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|675d9f82-0c18-4f6e-91a3-9858129aeb7e.jpg |
|c95cc439-e1e7-40f4-81fa-013b069631ca.jpg |
|f490d2ad-c64d-4006-a74a-8235888e3e87.jpg |
|-----------------------------------------|

[2024-12-03 13:03:00 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 5
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 13:03:00 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-03 13:03:00 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 4
 {executed in 1 msec}
[2024-12-03 13:03:00 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-03 13:03:00 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 4
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 13:03:00 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-03 13:03:00 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 4
 {executed in 0 msec}
[2024-12-03 13:03:00 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-03 13:03:00 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 4
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 13:03:00 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-03 13:04:16 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown initiated...
[2024-12-03 13:04:16 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown completed.
[2024-12-03 13:04:18 INFO restartedMain] [com.green.greengram.GreenGramApplication] Starting GreenGramVer2Application using Java 17.0.12 with PID 8036 (D:\BHB\GreenGramVer2\build\classes\java\main started by Administrator in D:\BHB\GreenGramVer2)
[2024-12-03 13:04:18 INFO restartedMain] [com.green.greengram.GreenGramApplication] No active profile set, falling back to 1 default profile: "default"
[2024-12-03 13:04:18 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-03 13:04:18 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-03 13:04:19 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-03 13:04:19 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-0.0.0.0-8080"]
[2024-12-03 13:04:19 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-03 13:04:19 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-03 13:04:19 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-03 13:04:19 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 779 ms
[2024-12-03 13:04:19 INFO restartedMain] [com.green.greengram.common.MyFileUtils] MyFileUtils - 생성자 D:/BHB/download/greengram_ver2
[2024-12-03 13:04:19 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-03 13:04:19 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-03 13:04:19 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-0.0.0.0-8080"]
[2024-12-03 13:04:19 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-03 13:04:19 INFO restartedMain] [com.green.greengram.GreenGramApplication] Started GreenGramVer2Application in 1.611 seconds (process running for 1.976)
[2024-12-03 13:04:22 INFO http-nio-0.0.0.0-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring DispatcherServlet 'dispatcherServlet'
[2024-12-03 13:04:22 INFO http-nio-0.0.0.0-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[2024-12-03 13:04:22 INFO http-nio-0.0.0.0-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Completed initialization in 1 ms
[2024-12-03 13:04:22 INFO http-nio-0.0.0.0-8080-exec-6] [com.green.greengram.feed.model.FeedGetReq] page : 1, size : null, userId : 1
[2024-12-03 13:04:22 INFO http-nio-0.0.0.0-8080-exec-6] [com.green.greengram.feed.FeedController] FeedController > getFeedList > p : FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=1)
[2024-12-03 13:04:22 INFO http-nio-0.0.0.0-8080-exec-6] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Starting...
[2024-12-03 13:04:22 INFO http-nio-0.0.0.0-8080-exec-6] [com.zaxxer.hikari.pool.HikariPool] HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@71e2358a
[2024-12-03 13:04:22 INFO http-nio-0.0.0.0-8080-exec-6] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Start completed.
[2024-12-03 13:04:22 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId,
        C.user_id AS writerUserId,
        if(C.nick_name IS NULL, C.uid, C.nick_name) AS writerNm,
        C.pic AS writerPic,
        contents, location,
        A.created_at AS createdAt,
        if(D.feed_id IS NULL, 0, 1) AS isLike
        from feed A
        JOIN user C
        ON A.writer_user_id = C.user_id
        LEFT JOIN feed_like D
        ON C.user_id = D.user_id
        AND D.user_id = 1
        order BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 0 msec}
[2024-12-03 13:04:22 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|--------|--------|---------|-----------------------------------------|---------|---------|--------------------|-------|
|feed_id |user_id |writernm |pic                                      |contents |location |created_at          |islike |
|--------|--------|---------|-----------------------------------------|---------|---------|--------------------|-------|
|14      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |ㅇ        |ㅇ        |2024-12-03 11:49:38 |1      |
|14      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |ㅇ        |ㅇ        |2024-12-03 11:49:38 |1      |
|13      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |d        |d        |2024-12-03 11:15:02 |1      |
|13      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |d        |d        |2024-12-03 11:15:02 |1      |
|12      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |ㅁㄴㅇ      |ㅁㄴㅇ      |2024-11-29 16:17:53 |1      |
|12      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |ㅁㄴㅇ      |ㅁㄴㅇ      |2024-11-29 16:17:53 |1      |
|11      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |         |         |2024-11-29 16:12:11 |1      |
|11      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |         |         |2024-11-29 16:12:11 |1      |
|10      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |asd      |asd      |2024-11-29 16:05:52 |1      |
|10      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |asd      |asd      |2024-11-29 16:05:52 |1      |
|9       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |sda      |asd      |2024-11-29 16:00:32 |1      |
|9       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |sda      |asd      |2024-11-29 16:00:32 |1      |
|5       |2       |홍길동      |6d88f58a-0c38-4010-b703-3ccb187071d8.jpg |123      |중앙로      |2024-11-29 10:36:12 |0      |
|4       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |123      |그린컴      |2024-11-28 17:24:40 |1      |
|4       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |123      |그린컴      |2024-11-28 17:24:40 |1      |
|--------|--------|---------|-----------------------------------------|---------|---------|--------------------|-------|

[2024-12-03 13:04:22 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 14
 {executed in 0 msec}
[2024-12-03 13:04:22 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|d3ab1225-6450-4fc4-9f31-eb10a531825a.gif |
|-----------------------------------------|

[2024-12-03 13:04:22 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 14
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-03 13:04:22 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-03 13:04:22 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 14
 {executed in 0 msec}
[2024-12-03 13:04:22 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|d3ab1225-6450-4fc4-9f31-eb10a531825a.gif |
|-----------------------------------------|

[2024-12-03 13:04:22 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 14
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 13:04:22 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-03 13:04:22 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 13
 {executed in 0 msec}
[2024-12-03 13:04:22 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|7af273d9-3528-498f-b249-e48a4bc99755.jpg |
|-----------------------------------------|

[2024-12-03 13:04:22 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 13
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 13:04:22 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|61              |34      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|60              |33      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|59              |32      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|58              |31      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-03 13:04:22 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 13
 {executed in 0 msec}
[2024-12-03 13:04:22 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|7af273d9-3528-498f-b249-e48a4bc99755.jpg |
|-----------------------------------------|

[2024-12-03 13:04:22 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 13
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 13:04:22 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|61              |34      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|60              |33      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|59              |32      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|58              |31      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-03 13:04:22 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 12
 {executed in 0 msec}
[2024-12-03 13:04:22 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|---------|
|pic      |
|---------|
|aaaa.gif |
|---------|

[2024-12-03 13:04:22 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 12
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 13:04:22 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|24              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|23              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|22              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|21              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-03 13:04:22 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 12
 {executed in 0 msec}
[2024-12-03 13:04:22 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|---------|
|pic      |
|---------|
|aaaa.gif |
|---------|

[2024-12-03 13:04:22 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 12
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 13:04:22 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|24              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|23              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|22              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|21              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-03 13:04:22 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 11
 {executed in 0 msec}
[2024-12-03 13:04:22 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|f3f416ca-1a7e-4483-b1db-b2164d76d4f4.png |
|-----------------------------------------|

[2024-12-03 13:04:22 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 11
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 13:04:22 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-03 13:04:22 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 11
 {executed in 0 msec}
[2024-12-03 13:04:22 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|f3f416ca-1a7e-4483-b1db-b2164d76d4f4.png |
|-----------------------------------------|

[2024-12-03 13:04:22 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 11
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 13:04:22 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-03 13:04:22 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 10
 {executed in 0 msec}
[2024-12-03 13:04:22 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|53da69e7-7ae4-4e7b-b95b-a4c4ca01bdc8.jpg |
|-----------------------------------------|

[2024-12-03 13:04:22 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 10
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 13:04:22 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|29              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|28              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|27              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|26              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-03 13:04:22 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 10
 {executed in 0 msec}
[2024-12-03 13:04:22 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|53da69e7-7ae4-4e7b-b95b-a4c4ca01bdc8.jpg |
|-----------------------------------------|

[2024-12-03 13:04:22 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 10
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 13:04:22 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|29              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|28              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|27              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|26              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-03 13:04:22 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 9
 {executed in 16 msec}
[2024-12-03 13:04:22 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|7875594b-3649-4059-a29a-5c09feeab0ad.jpg |
|-----------------------------------------|

[2024-12-03 13:04:22 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 9
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 13:04:22 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-03 13:04:22 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 9
 {executed in 1 msec}
[2024-12-03 13:04:22 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|7875594b-3649-4059-a29a-5c09feeab0ad.jpg |
|-----------------------------------------|

[2024-12-03 13:04:22 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 9
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 13:04:22 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-03 13:04:22 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 5
 {executed in 0 msec}
[2024-12-03 13:04:22 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|675d9f82-0c18-4f6e-91a3-9858129aeb7e.jpg |
|c95cc439-e1e7-40f4-81fa-013b069631ca.jpg |
|f490d2ad-c64d-4006-a74a-8235888e3e87.jpg |
|-----------------------------------------|

[2024-12-03 13:04:22 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 5
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 13:04:22 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-03 13:04:22 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 4
 {executed in 0 msec}
[2024-12-03 13:04:22 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-03 13:04:22 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 4
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 13:04:22 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-03 13:04:22 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 4
 {executed in 0 msec}
[2024-12-03 13:04:22 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-03 13:04:22 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 4
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 13:04:22 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-03 13:06:54 INFO File Watcher] [org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener] Restarting due to 2 class path changes (0 additions, 0 deletions, 2 modifications)
[2024-12-03 13:06:54 INFO Thread-5] [org.apache.coyote.http11.Http11NioProtocol] Stopping ProtocolHandler ["http-nio-0.0.0.0-8080"]
[2024-12-03 13:06:54 INFO Thread-5] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown initiated...
[2024-12-03 13:06:54 INFO Thread-5] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown completed.
[2024-12-03 13:06:54 INFO restartedMain] [com.green.greengram.GreenGramApplication] Starting GreenGramVer2Application using Java 17.0.12 with PID 8036 (D:\BHB\GreenGramVer2\build\classes\java\main started by Administrator in D:\BHB\GreenGramVer2)
[2024-12-03 13:06:54 INFO restartedMain] [com.green.greengram.GreenGramApplication] No active profile set, falling back to 1 default profile: "default"
[2024-12-03 13:06:54 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-03 13:06:54 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-0.0.0.0-8080"]
[2024-12-03 13:06:54 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-03 13:06:54 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-03 13:06:54 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-03 13:06:54 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 182 ms
[2024-12-03 13:06:54 INFO restartedMain] [com.green.greengram.common.MyFileUtils] MyFileUtils - 생성자 D:/BHB/download/greengram_ver2
[2024-12-03 13:06:55 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-03 13:06:55 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-03 13:06:55 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-0.0.0.0-8080"]
[2024-12-03 13:06:55 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-03 13:06:55 INFO restartedMain] [com.green.greengram.GreenGramApplication] Started GreenGramVer2Application in 0.336 seconds (process running for 157.466)
[2024-12-03 13:06:55 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener] Condition evaluation unchanged
[2024-12-03 13:11:28 INFO restartedMain] [com.green.greengram.GreenGramApplication] Starting GreenGramVer2Application using Java 17.0.12 with PID 7188 (D:\BHB\GreenGramVer2\build\classes\java\main started by Administrator in D:\BHB\GreenGramVer2)
[2024-12-03 13:11:28 INFO restartedMain] [com.green.greengram.GreenGramApplication] No active profile set, falling back to 1 default profile: "default"
[2024-12-03 13:11:28 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-03 13:11:28 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-03 13:11:29 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-03 13:11:29 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-0.0.0.0-8080"]
[2024-12-03 13:11:29 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-03 13:11:29 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-03 13:11:29 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-03 13:11:29 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 789 ms
[2024-12-03 13:11:29 INFO restartedMain] [com.green.greengram.common.MyFileUtils] MyFileUtils - 생성자 D:/BHB/download/greengram_ver2
[2024-12-03 13:11:29 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-03 13:11:29 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-03 13:11:29 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-0.0.0.0-8080"]
[2024-12-03 13:11:29 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-03 13:11:29 INFO restartedMain] [com.green.greengram.GreenGramApplication] Started GreenGramVer2Application in 1.639 seconds (process running for 1.976)
[2024-12-03 13:11:33 INFO http-nio-0.0.0.0-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring DispatcherServlet 'dispatcherServlet'
[2024-12-03 13:11:33 INFO http-nio-0.0.0.0-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[2024-12-03 13:11:33 INFO http-nio-0.0.0.0-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Completed initialization in 0 ms
[2024-12-03 13:11:33 INFO http-nio-0.0.0.0-8080-exec-10] [org.springdoc.api.AbstractOpenApiResource] Init duration for springdoc-openapi is: 197 ms
[2024-12-03 13:11:43 INFO http-nio-0.0.0.0-8080-exec-5] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Starting...
[2024-12-03 13:11:43 INFO http-nio-0.0.0.0-8080-exec-5] [com.zaxxer.hikari.pool.HikariPool] HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@5495ba58
[2024-12-03 13:11:43 INFO http-nio-0.0.0.0-8080-exec-5] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Start completed.
[2024-12-03 13:11:43 WARN http-nio-0.0.0.0-8080-exec-5] [org.mariadb.jdbc.message.server.ErrorPacket] Error: 1451-23000: Cannot delete or update a parent row: a foreign key constraint fails (`greengram_ver2`.`feed_like`, CONSTRAINT `feed_like_ibfk_1` FOREIGN KEY (`feed_id`) REFERENCES `feed` (`feed_id`))
[2024-12-03 13:11:43 ERRORhttp-nio-0.0.0.0-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. delete from feed
        where feed_id = 4
 {FAILED after 3 msec}
java.sql.SQLIntegrityConstraintViolationException: (conn=164) Cannot delete or update a parent row: a foreign key constraint fails (`greengram_ver2`.`feed_like`, CONSTRAINT `feed_like_ibfk_1` FOREIGN KEY (`feed_id`) REFERENCES `feed` (`feed_id`))
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:297)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:93)
	at org.mariadb.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:276)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:48)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:75)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.delete(DefaultSqlSession.java:212)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy80.delete(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.delete(SqlSessionTemplate.java:304)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:72)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy84.delFeed(Unknown Source)
	at com.green.greengram.feed.FeedService.feedDel(FeedService.java:85)
	at com.green.greengram.feed.FeedController.deleteFeed(FeedController.java:47)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doDelete(FrameworkServlet.java:936)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:596)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-03 13:11:43 ERRORhttp-nio-0.0.0.0-8080-exec-5] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: (conn=164) Cannot delete or update a parent row: a foreign key constraint fails (`greengram_ver2`.`feed_like`, CONSTRAINT `feed_like_ibfk_1` FOREIGN KEY (`feed_id`) REFERENCES `feed` (`feed_id`))
### The error may exist in file [D:\BHB\GreenGramVer2\build\resources\main\mappers\FeedMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: delete from feed         where feed_id = ?
### Cause: java.sql.SQLIntegrityConstraintViolationException: (conn=164) Cannot delete or update a parent row: a foreign key constraint fails (`greengram_ver2`.`feed_like`, CONSTRAINT `feed_like_ibfk_1` FOREIGN KEY (`feed_id`) REFERENCES `feed` (`feed_id`))
; (conn=164) Cannot delete or update a parent row: a foreign key constraint fails (`greengram_ver2`.`feed_like`, CONSTRAINT `feed_like_ibfk_1` FOREIGN KEY (`feed_id`) REFERENCES `feed` (`feed_id`))] with root cause
java.sql.SQLIntegrityConstraintViolationException: (conn=164) Cannot delete or update a parent row: a foreign key constraint fails (`greengram_ver2`.`feed_like`, CONSTRAINT `feed_like_ibfk_1` FOREIGN KEY (`feed_id`) REFERENCES `feed` (`feed_id`))
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:297)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:93)
	at org.mariadb.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:276)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:48)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:75)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.delete(DefaultSqlSession.java:212)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy80.delete(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.delete(SqlSessionTemplate.java:304)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:72)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy84.delFeed(Unknown Source)
	at com.green.greengram.feed.FeedService.feedDel(FeedService.java:85)
	at com.green.greengram.feed.FeedController.deleteFeed(FeedController.java:47)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doDelete(FrameworkServlet.java:936)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:596)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-03 13:12:17 INFO File Watcher] [org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener] Restarting due to 26 class path changes (0 additions, 0 deletions, 26 modifications)
[2024-12-03 13:12:17 INFO Thread-5] [org.apache.coyote.http11.Http11NioProtocol] Stopping ProtocolHandler ["http-nio-0.0.0.0-8080"]
[2024-12-03 13:12:17 INFO Thread-5] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown initiated...
[2024-12-03 13:12:17 INFO Thread-5] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown completed.
[2024-12-03 13:12:17 INFO restartedMain] [com.green.greengram.GreenGramApplication] Starting GreenGramVer2Application using Java 17.0.12 with PID 7188 (D:\BHB\GreenGramVer2\build\classes\java\main started by Administrator in D:\BHB\GreenGramVer2)
[2024-12-03 13:12:17 INFO restartedMain] [com.green.greengram.GreenGramApplication] No active profile set, falling back to 1 default profile: "default"
[2024-12-03 13:12:17 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-03 13:12:17 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-0.0.0.0-8080"]
[2024-12-03 13:12:17 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-03 13:12:17 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-03 13:12:17 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-03 13:12:17 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 219 ms
[2024-12-03 13:12:17 INFO restartedMain] [com.green.greengram.common.MyFileUtils] MyFileUtils - 생성자 D:/BHB/download/greengram_ver2
[2024-12-03 13:12:17 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-03 13:12:17 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-03 13:12:17 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-0.0.0.0-8080"]
[2024-12-03 13:12:17 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-03 13:12:17 INFO restartedMain] [com.green.greengram.GreenGramApplication] Started GreenGramVer2Application in 0.363 seconds (process running for 49.8)
[2024-12-03 13:12:17 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener] Condition evaluation unchanged
[2024-12-03 13:12:32 INFO File Watcher] [org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener] Restarting due to 26 class path changes (0 additions, 0 deletions, 26 modifications)
[2024-12-03 13:12:32 INFO Thread-7] [org.apache.coyote.http11.Http11NioProtocol] Stopping ProtocolHandler ["http-nio-0.0.0.0-8080"]
[2024-12-03 13:12:32 INFO restartedMain] [com.green.greengram.GreenGramApplication] Starting GreenGramVer2Application using Java 17.0.12 with PID 7188 (D:\BHB\GreenGramVer2\build\classes\java\main started by Administrator in D:\BHB\GreenGramVer2)
[2024-12-03 13:12:32 INFO restartedMain] [com.green.greengram.GreenGramApplication] No active profile set, falling back to 1 default profile: "default"
[2024-12-03 13:12:32 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-03 13:12:32 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-0.0.0.0-8080"]
[2024-12-03 13:12:32 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-03 13:12:32 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-03 13:12:32 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-03 13:12:32 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 184 ms
[2024-12-03 13:12:32 INFO restartedMain] [com.green.greengram.common.MyFileUtils] MyFileUtils - 생성자 D:/BHB/download/greengram_ver2
[2024-12-03 13:12:32 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-03 13:12:32 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-03 13:12:32 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-0.0.0.0-8080"]
[2024-12-03 13:12:32 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-03 13:12:32 INFO restartedMain] [com.green.greengram.GreenGramApplication] Started GreenGramVer2Application in 0.325 seconds (process running for 64.855)
[2024-12-03 13:12:32 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener] Condition evaluation unchanged
[2024-12-03 13:12:47 INFO restartedMain] [com.green.greengram.GreenGramApplication] Starting GreenGramVer2Application using Java 17.0.12 with PID 3416 (D:\BHB\GreenGramVer2\build\classes\java\main started by Administrator in D:\BHB\GreenGramVer2)
[2024-12-03 13:12:47 INFO restartedMain] [com.green.greengram.GreenGramApplication] No active profile set, falling back to 1 default profile: "default"
[2024-12-03 13:12:47 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-03 13:12:47 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-03 13:12:48 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-03 13:12:48 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-0.0.0.0-8080"]
[2024-12-03 13:12:48 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-03 13:12:48 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-03 13:12:48 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-03 13:12:48 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 783 ms
[2024-12-03 13:12:48 INFO restartedMain] [com.green.greengram.common.MyFileUtils] MyFileUtils - 생성자 D:/BHB/download/greengram_ver2
[2024-12-03 13:12:48 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-03 13:12:48 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-03 13:12:48 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-0.0.0.0-8080"]
[2024-12-03 13:12:48 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-03 13:12:48 INFO restartedMain] [com.green.greengram.GreenGramApplication] Started GreenGramVer2Application in 1.645 seconds (process running for 2.001)
[2024-12-03 13:12:50 INFO http-nio-0.0.0.0-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring DispatcherServlet 'dispatcherServlet'
[2024-12-03 13:12:50 INFO http-nio-0.0.0.0-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[2024-12-03 13:12:50 INFO http-nio-0.0.0.0-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Completed initialization in 1 ms
[2024-12-03 13:12:50 INFO http-nio-0.0.0.0-8080-exec-10] [org.springdoc.api.AbstractOpenApiResource] Init duration for springdoc-openapi is: 199 ms
[2024-12-03 13:13:00 INFO http-nio-0.0.0.0-8080-exec-5] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Starting...
[2024-12-03 13:13:00 INFO http-nio-0.0.0.0-8080-exec-5] [com.zaxxer.hikari.pool.HikariPool] HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@5495ba58
[2024-12-03 13:13:00 INFO http-nio-0.0.0.0-8080-exec-5] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Start completed.
[2024-12-03 13:13:00 WARN http-nio-0.0.0.0-8080-exec-5] [org.mariadb.jdbc.message.server.ErrorPacket] Error: 1451-23000: Cannot delete or update a parent row: a foreign key constraint fails (`greengram_ver2`.`feed_like`, CONSTRAINT `feed_like_ibfk_1` FOREIGN KEY (`feed_id`) REFERENCES `feed` (`feed_id`))
[2024-12-03 13:13:00 ERRORhttp-nio-0.0.0.0-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. delete from feed
        where feed_id = 4
        AND writer_user_id = 1
 {FAILED after 3 msec}
java.sql.SQLIntegrityConstraintViolationException: (conn=174) Cannot delete or update a parent row: a foreign key constraint fails (`greengram_ver2`.`feed_like`, CONSTRAINT `feed_like_ibfk_1` FOREIGN KEY (`feed_id`) REFERENCES `feed` (`feed_id`))
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:297)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:93)
	at org.mariadb.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:276)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:48)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:75)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.delete(DefaultSqlSession.java:212)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy80.delete(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.delete(SqlSessionTemplate.java:304)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:72)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy84.delFeed(Unknown Source)
	at com.green.greengram.feed.FeedService.feedDel(FeedService.java:85)
	at com.green.greengram.feed.FeedController.deleteFeed(FeedController.java:47)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doDelete(FrameworkServlet.java:936)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:596)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-03 13:13:00 ERRORhttp-nio-0.0.0.0-8080-exec-5] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: (conn=174) Cannot delete or update a parent row: a foreign key constraint fails (`greengram_ver2`.`feed_like`, CONSTRAINT `feed_like_ibfk_1` FOREIGN KEY (`feed_id`) REFERENCES `feed` (`feed_id`))
### The error may exist in file [D:\BHB\GreenGramVer2\build\resources\main\mappers\FeedMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: delete from feed         where feed_id = ?         AND writer_user_id = ?
### Cause: java.sql.SQLIntegrityConstraintViolationException: (conn=174) Cannot delete or update a parent row: a foreign key constraint fails (`greengram_ver2`.`feed_like`, CONSTRAINT `feed_like_ibfk_1` FOREIGN KEY (`feed_id`) REFERENCES `feed` (`feed_id`))
; (conn=174) Cannot delete or update a parent row: a foreign key constraint fails (`greengram_ver2`.`feed_like`, CONSTRAINT `feed_like_ibfk_1` FOREIGN KEY (`feed_id`) REFERENCES `feed` (`feed_id`))] with root cause
java.sql.SQLIntegrityConstraintViolationException: (conn=174) Cannot delete or update a parent row: a foreign key constraint fails (`greengram_ver2`.`feed_like`, CONSTRAINT `feed_like_ibfk_1` FOREIGN KEY (`feed_id`) REFERENCES `feed` (`feed_id`))
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:297)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:93)
	at org.mariadb.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:276)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:48)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:75)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.delete(DefaultSqlSession.java:212)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy80.delete(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.delete(SqlSessionTemplate.java:304)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:72)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy84.delFeed(Unknown Source)
	at com.green.greengram.feed.FeedService.feedDel(FeedService.java:85)
	at com.green.greengram.feed.FeedController.deleteFeed(FeedController.java:47)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doDelete(FrameworkServlet.java:936)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:596)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-03 13:13:37 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown initiated...
[2024-12-03 13:13:37 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown completed.
[2024-12-03 13:13:38 INFO restartedMain] [com.green.greengram.GreenGramApplication] Starting GreenGramVer2Application using Java 17.0.12 with PID 9680 (D:\BHB\GreenGramVer2\build\classes\java\main started by Administrator in D:\BHB\GreenGramVer2)
[2024-12-03 13:13:38 INFO restartedMain] [com.green.greengram.GreenGramApplication] No active profile set, falling back to 1 default profile: "default"
[2024-12-03 13:13:38 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-03 13:13:38 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-03 13:13:39 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-03 13:13:39 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-0.0.0.0-8080"]
[2024-12-03 13:13:39 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-03 13:13:39 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-03 13:13:39 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-03 13:13:39 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 785 ms
[2024-12-03 13:13:39 INFO restartedMain] [com.green.greengram.common.MyFileUtils] MyFileUtils - 생성자 D:/BHB/download/greengram_ver2
[2024-12-03 13:13:40 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-03 13:13:40 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-03 13:13:40 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-0.0.0.0-8080"]
[2024-12-03 13:13:40 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-03 13:13:40 INFO restartedMain] [com.green.greengram.GreenGramApplication] Started GreenGramVer2Application in 1.635 seconds (process running for 1.97)
[2024-12-03 13:13:50 INFO http-nio-0.0.0.0-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring DispatcherServlet 'dispatcherServlet'
[2024-12-03 13:13:50 INFO http-nio-0.0.0.0-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[2024-12-03 13:13:50 INFO http-nio-0.0.0.0-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Completed initialization in 0 ms
[2024-12-03 13:13:50 INFO http-nio-0.0.0.0-8080-exec-3] [org.springdoc.api.AbstractOpenApiResource] Init duration for springdoc-openapi is: 194 ms
[2024-12-03 13:14:00 INFO http-nio-0.0.0.0-8080-exec-8] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Starting...
[2024-12-03 13:14:00 INFO http-nio-0.0.0.0-8080-exec-8] [com.zaxxer.hikari.pool.HikariPool] HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@d320a59
[2024-12-03 13:14:00 INFO http-nio-0.0.0.0-8080-exec-8] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Start completed.
[2024-12-03 13:14:00 WARN http-nio-0.0.0.0-8080-exec-8] [org.mariadb.jdbc.message.server.ErrorPacket] Error: 1451-23000: Cannot delete or update a parent row: a foreign key constraint fails (`greengram_ver2`.`feed_like`, CONSTRAINT `feed_like_ibfk_1` FOREIGN KEY (`feed_id`) REFERENCES `feed` (`feed_id`))
[2024-12-03 13:14:00 ERRORhttp-nio-0.0.0.0-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. delete from feed
        where feed_id = 4
        AND writer_user_id = 1
 {FAILED after 2 msec}
java.sql.SQLIntegrityConstraintViolationException: (conn=184) Cannot delete or update a parent row: a foreign key constraint fails (`greengram_ver2`.`feed_like`, CONSTRAINT `feed_like_ibfk_1` FOREIGN KEY (`feed_id`) REFERENCES `feed` (`feed_id`))
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:297)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:93)
	at org.mariadb.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:276)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:48)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:75)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.delete(DefaultSqlSession.java:212)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy80.delete(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.delete(SqlSessionTemplate.java:304)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:72)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy84.delFeed(Unknown Source)
	at com.green.greengram.feed.FeedService.feedDel(FeedService.java:85)
	at com.green.greengram.feed.FeedController.deleteFeed(FeedController.java:47)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doDelete(FrameworkServlet.java:936)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:596)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-03 13:14:01 ERRORhttp-nio-0.0.0.0-8080-exec-8] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: (conn=184) Cannot delete or update a parent row: a foreign key constraint fails (`greengram_ver2`.`feed_like`, CONSTRAINT `feed_like_ibfk_1` FOREIGN KEY (`feed_id`) REFERENCES `feed` (`feed_id`))
### The error may exist in file [D:\BHB\GreenGramVer2\build\resources\main\mappers\FeedMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: delete from feed         where feed_id = ?         AND writer_user_id = ?
### Cause: java.sql.SQLIntegrityConstraintViolationException: (conn=184) Cannot delete or update a parent row: a foreign key constraint fails (`greengram_ver2`.`feed_like`, CONSTRAINT `feed_like_ibfk_1` FOREIGN KEY (`feed_id`) REFERENCES `feed` (`feed_id`))
; (conn=184) Cannot delete or update a parent row: a foreign key constraint fails (`greengram_ver2`.`feed_like`, CONSTRAINT `feed_like_ibfk_1` FOREIGN KEY (`feed_id`) REFERENCES `feed` (`feed_id`))] with root cause
java.sql.SQLIntegrityConstraintViolationException: (conn=184) Cannot delete or update a parent row: a foreign key constraint fails (`greengram_ver2`.`feed_like`, CONSTRAINT `feed_like_ibfk_1` FOREIGN KEY (`feed_id`) REFERENCES `feed` (`feed_id`))
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:297)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:93)
	at org.mariadb.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:276)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:48)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:75)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.delete(DefaultSqlSession.java:212)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy80.delete(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.delete(SqlSessionTemplate.java:304)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:72)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy84.delFeed(Unknown Source)
	at com.green.greengram.feed.FeedService.feedDel(FeedService.java:85)
	at com.green.greengram.feed.FeedController.deleteFeed(FeedController.java:47)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doDelete(FrameworkServlet.java:936)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:596)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-03 13:14:44 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown initiated...
[2024-12-03 13:14:44 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown completed.
[2024-12-03 13:14:47 INFO restartedMain] [com.green.greengram.GreenGramApplication] Starting GreenGramVer2Application using Java 17.0.12 with PID 7016 (D:\BHB\GreenGramVer2\build\classes\java\main started by Administrator in D:\BHB\GreenGramVer2)
[2024-12-03 13:14:47 INFO restartedMain] [com.green.greengram.GreenGramApplication] No active profile set, falling back to 1 default profile: "default"
[2024-12-03 13:14:47 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-03 13:14:47 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-03 13:14:48 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-03 13:14:48 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-0.0.0.0-8080"]
[2024-12-03 13:14:48 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-03 13:14:48 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-03 13:14:48 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-03 13:14:48 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 803 ms
[2024-12-03 13:14:48 INFO restartedMain] [com.green.greengram.common.MyFileUtils] MyFileUtils - 생성자 D:/BHB/download/greengram_ver2
[2024-12-03 13:14:48 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-03 13:14:49 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-03 13:14:49 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-0.0.0.0-8080"]
[2024-12-03 13:14:49 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-03 13:14:49 INFO restartedMain] [com.green.greengram.GreenGramApplication] Started GreenGramVer2Application in 1.816 seconds (process running for 2.163)
[2024-12-03 13:14:51 INFO http-nio-0.0.0.0-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring DispatcherServlet 'dispatcherServlet'
[2024-12-03 13:14:51 INFO http-nio-0.0.0.0-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[2024-12-03 13:14:51 INFO http-nio-0.0.0.0-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Completed initialization in 0 ms
[2024-12-03 13:14:51 INFO http-nio-0.0.0.0-8080-exec-4] [org.springdoc.api.AbstractOpenApiResource] Init duration for springdoc-openapi is: 196 ms
[2024-12-03 13:14:59 INFO http-nio-0.0.0.0-8080-exec-5] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Starting...
[2024-12-03 13:14:59 INFO http-nio-0.0.0.0-8080-exec-5] [com.zaxxer.hikari.pool.HikariPool] HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@45340e4c
[2024-12-03 13:14:59 INFO http-nio-0.0.0.0-8080-exec-5] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Start completed.
[2024-12-03 13:14:59 WARN http-nio-0.0.0.0-8080-exec-5] [org.mariadb.jdbc.message.server.ErrorPacket] Error: 1451-23000: Cannot delete or update a parent row: a foreign key constraint fails (`greengram_ver2`.`feed_like`, CONSTRAINT `feed_like_ibfk_1` FOREIGN KEY (`feed_id`) REFERENCES `feed` (`feed_id`))
[2024-12-03 13:14:59 ERRORhttp-nio-0.0.0.0-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. delete from feed
        where feed_id = 4
        AND writer_user_id = 1
 {FAILED after 3 msec}
java.sql.SQLIntegrityConstraintViolationException: (conn=194) Cannot delete or update a parent row: a foreign key constraint fails (`greengram_ver2`.`feed_like`, CONSTRAINT `feed_like_ibfk_1` FOREIGN KEY (`feed_id`) REFERENCES `feed` (`feed_id`))
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:297)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:93)
	at org.mariadb.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:276)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:48)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:75)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.delete(DefaultSqlSession.java:212)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy80.delete(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.delete(SqlSessionTemplate.java:304)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:72)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy84.delFeed(Unknown Source)
	at com.green.greengram.feed.FeedService.feedDel(FeedService.java:85)
	at com.green.greengram.feed.FeedController.deleteFeed(FeedController.java:47)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doDelete(FrameworkServlet.java:936)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:596)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-03 13:14:59 ERRORhttp-nio-0.0.0.0-8080-exec-5] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: (conn=194) Cannot delete or update a parent row: a foreign key constraint fails (`greengram_ver2`.`feed_like`, CONSTRAINT `feed_like_ibfk_1` FOREIGN KEY (`feed_id`) REFERENCES `feed` (`feed_id`))
### The error may exist in file [D:\BHB\GreenGramVer2\build\resources\main\mappers\FeedMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: delete from feed         where feed_id = ?         AND writer_user_id = ?
### Cause: java.sql.SQLIntegrityConstraintViolationException: (conn=194) Cannot delete or update a parent row: a foreign key constraint fails (`greengram_ver2`.`feed_like`, CONSTRAINT `feed_like_ibfk_1` FOREIGN KEY (`feed_id`) REFERENCES `feed` (`feed_id`))
; (conn=194) Cannot delete or update a parent row: a foreign key constraint fails (`greengram_ver2`.`feed_like`, CONSTRAINT `feed_like_ibfk_1` FOREIGN KEY (`feed_id`) REFERENCES `feed` (`feed_id`))] with root cause
java.sql.SQLIntegrityConstraintViolationException: (conn=194) Cannot delete or update a parent row: a foreign key constraint fails (`greengram_ver2`.`feed_like`, CONSTRAINT `feed_like_ibfk_1` FOREIGN KEY (`feed_id`) REFERENCES `feed` (`feed_id`))
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:297)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:93)
	at org.mariadb.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:276)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:48)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:75)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.delete(DefaultSqlSession.java:212)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy80.delete(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.delete(SqlSessionTemplate.java:304)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:72)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy84.delFeed(Unknown Source)
	at com.green.greengram.feed.FeedService.feedDel(FeedService.java:85)
	at com.green.greengram.feed.FeedController.deleteFeed(FeedController.java:47)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doDelete(FrameworkServlet.java:936)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:596)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-03 13:15:23 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown initiated...
[2024-12-03 13:15:23 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown completed.
[2024-12-03 14:24:25 INFO restartedMain] [com.green.greengram.GreenGramApplication] Starting GreenGramVer2Application using Java 17.0.12 with PID 10152 (D:\BHB\GreenGramVer2\build\classes\java\main started by Administrator in D:\BHB\GreenGramVer2)
[2024-12-03 14:24:25 INFO restartedMain] [com.green.greengram.GreenGramApplication] No active profile set, falling back to 1 default profile: "default"
[2024-12-03 14:24:25 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-03 14:24:25 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-03 14:24:26 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-03 14:24:26 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-0.0.0.0-8080"]
[2024-12-03 14:24:26 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-03 14:24:26 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-03 14:24:26 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-03 14:24:26 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 783 ms
[2024-12-03 14:24:26 INFO restartedMain] [com.green.greengram.common.MyFileUtils] MyFileUtils - 생성자 D:/BHB/download/greengram_ver2
[2024-12-03 14:24:26 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-03 14:24:26 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-03 14:24:26 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-0.0.0.0-8080"]
[2024-12-03 14:24:26 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-03 14:24:26 INFO restartedMain] [com.green.greengram.GreenGramApplication] Started GreenGramVer2Application in 1.647 seconds (process running for 1.993)
[2024-12-03 14:24:30 INFO http-nio-0.0.0.0-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring DispatcherServlet 'dispatcherServlet'
[2024-12-03 14:24:30 INFO http-nio-0.0.0.0-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[2024-12-03 14:24:30 INFO http-nio-0.0.0.0-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Completed initialization in 0 ms
[2024-12-03 14:24:30 INFO http-nio-0.0.0.0-8080-exec-1] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Starting...
[2024-12-03 14:24:30 INFO http-nio-0.0.0.0-8080-exec-1] [com.zaxxer.hikari.pool.HikariPool] HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@4b700f0d
[2024-12-03 14:24:30 INFO http-nio-0.0.0.0-8080-exec-1] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Start completed.
[2024-12-03 14:24:30 DEBUGhttp-nio-0.0.0.0-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. insert into feed_comment
        set `feed_id` = 14
        , `user_id` = 1
        , `COMMENT` = 'ㅁㅁㅁㅁㄴㅇ'
 {executed in 2 msec}
[2024-12-03 14:24:30 DEBUGhttp-nio-0.0.0.0-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
1. getGeneratedKeys on query: insert into feed_comment
        set `feed_id` = 14
        , `user_id` = 1
        , `COMMENT` = 'ㅁㅁㅁㅁㄴㅇ'
 {executed in 0 msec}
[2024-12-03 14:24:30 INFO http-nio-0.0.0.0-8080-exec-1] [jdbc.resultsettable] 
|----------|
|insert_id |
|----------|
|64        |
|----------|

[2024-12-03 14:24:32 DEBUGhttp-nio-0.0.0.0-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. insert into feed_comment
        set `feed_id` = 14
        , `user_id` = 1
        , `COMMENT` = 'ㅁㅁㅁ'
 {executed in 3 msec}
[2024-12-03 14:24:32 DEBUGhttp-nio-0.0.0.0-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
1. getGeneratedKeys on query: insert into feed_comment
        set `feed_id` = 14
        , `user_id` = 1
        , `COMMENT` = 'ㅁㅁㅁ'
 {executed in 0 msec}
[2024-12-03 14:24:32 INFO http-nio-0.0.0.0-8080-exec-2] [jdbc.resultsettable] 
|----------|
|insert_id |
|----------|
|65        |
|----------|

[2024-12-03 14:24:33 DEBUGhttp-nio-0.0.0.0-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. insert into feed_comment
        set `feed_id` = 14
        , `user_id` = 1
        , `COMMENT` = 'ㅁㅁ'
 {executed in 2 msec}
[2024-12-03 14:24:33 DEBUGhttp-nio-0.0.0.0-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
1. getGeneratedKeys on query: insert into feed_comment
        set `feed_id` = 14
        , `user_id` = 1
        , `COMMENT` = 'ㅁㅁ'
 {executed in 0 msec}
[2024-12-03 14:24:33 INFO http-nio-0.0.0.0-8080-exec-3] [jdbc.resultsettable] 
|----------|
|insert_id |
|----------|
|66        |
|----------|

[2024-12-03 14:24:35 DEBUGhttp-nio-0.0.0.0-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. insert into feed_comment
        set `feed_id` = 14
        , `user_id` = 1
        , `COMMENT` = 'ㅁㅁㅁ'
 {executed in 2 msec}
[2024-12-03 14:24:35 DEBUGhttp-nio-0.0.0.0-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
1. getGeneratedKeys on query: insert into feed_comment
        set `feed_id` = 14
        , `user_id` = 1
        , `COMMENT` = 'ㅁㅁㅁ'
 {executed in 0 msec}
[2024-12-03 14:24:35 INFO http-nio-0.0.0.0-8080-exec-4] [jdbc.resultsettable] 
|----------|
|insert_id |
|----------|
|67        |
|----------|

[2024-12-03 14:24:36 DEBUGhttp-nio-0.0.0.0-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. insert into feed_comment
        set `feed_id` = 14
        , `user_id` = 1
        , `COMMENT` = 'ㅁㅁㅁ'
 {executed in 3 msec}
[2024-12-03 14:24:36 DEBUGhttp-nio-0.0.0.0-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
1. getGeneratedKeys on query: insert into feed_comment
        set `feed_id` = 14
        , `user_id` = 1
        , `COMMENT` = 'ㅁㅁㅁ'
 {executed in 0 msec}
[2024-12-03 14:24:36 INFO http-nio-0.0.0.0-8080-exec-5] [jdbc.resultsettable] 
|----------|
|insert_id |
|----------|
|68        |
|----------|

[2024-12-03 14:24:38 INFO http-nio-0.0.0.0-8080-exec-1] [com.green.greengram.feed.model.FeedGetReq] page : 1, size : null, userId : 1
[2024-12-03 14:24:38 INFO http-nio-0.0.0.0-8080-exec-1] [com.green.greengram.feed.FeedController] FeedController > getFeedList > p : FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=1)
[2024-12-03 14:24:38 DEBUGhttp-nio-0.0.0.0-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId,
        C.user_id AS writerUserId,
        if(C.nick_name IS NULL, C.uid, C.nick_name) AS writerNm,
        C.pic AS writerPic,
        contents, location,
        A.created_at AS createdAt,
        if(D.feed_id IS NULL, 0, 1) AS isLike
        from feed A
        JOIN user C
        ON A.writer_user_id = C.user_id
        LEFT JOIN feed_like D
        ON C.user_id = D.user_id
        AND D.user_id = 1
        order BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 0 msec}
[2024-12-03 14:24:38 INFO http-nio-0.0.0.0-8080-exec-1] [jdbc.resultsettable] 
|--------|--------|---------|-----------------------------------------|---------|---------|--------------------|-------|
|feed_id |user_id |writernm |pic                                      |contents |location |created_at          |islike |
|--------|--------|---------|-----------------------------------------|---------|---------|--------------------|-------|
|14      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |ㅇ        |ㅇ        |2024-12-03 11:49:38 |1      |
|14      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |ㅇ        |ㅇ        |2024-12-03 11:49:38 |1      |
|13      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |d        |d        |2024-12-03 11:15:02 |1      |
|13      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |d        |d        |2024-12-03 11:15:02 |1      |
|12      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |ㅁㄴㅇ      |ㅁㄴㅇ      |2024-11-29 16:17:53 |1      |
|12      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |ㅁㄴㅇ      |ㅁㄴㅇ      |2024-11-29 16:17:53 |1      |
|11      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |         |         |2024-11-29 16:12:11 |1      |
|11      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |         |         |2024-11-29 16:12:11 |1      |
|10      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |asd      |asd      |2024-11-29 16:05:52 |1      |
|10      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |asd      |asd      |2024-11-29 16:05:52 |1      |
|9       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |sda      |asd      |2024-11-29 16:00:32 |1      |
|9       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |sda      |asd      |2024-11-29 16:00:32 |1      |
|5       |2       |홍길동      |6d88f58a-0c38-4010-b703-3ccb187071d8.jpg |123      |중앙로      |2024-11-29 10:36:12 |0      |
|4       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |123      |그린컴      |2024-11-28 17:24:40 |1      |
|4       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |123      |그린컴      |2024-11-28 17:24:40 |1      |
|--------|--------|---------|-----------------------------------------|---------|---------|--------------------|-------|

[2024-12-03 14:24:38 DEBUGhttp-nio-0.0.0.0-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 14
 {executed in 1 msec}
[2024-12-03 14:24:38 INFO http-nio-0.0.0.0-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|d3ab1225-6450-4fc4-9f31-eb10a531825a.gif |
|-----------------------------------------|

[2024-12-03 14:24:38 DEBUGhttp-nio-0.0.0.0-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 14
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 14:24:38 INFO http-nio-0.0.0.0-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|68              |ㅁㅁㅁ     |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|67              |ㅁㅁㅁ     |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|66              |ㅁㅁ      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|65              |ㅁㅁㅁ     |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-03 14:24:38 DEBUGhttp-nio-0.0.0.0-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 14
 {executed in 0 msec}
[2024-12-03 14:24:38 INFO http-nio-0.0.0.0-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|d3ab1225-6450-4fc4-9f31-eb10a531825a.gif |
|-----------------------------------------|

[2024-12-03 14:24:38 DEBUGhttp-nio-0.0.0.0-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 14
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 14:24:38 INFO http-nio-0.0.0.0-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|68              |ㅁㅁㅁ     |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|67              |ㅁㅁㅁ     |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|66              |ㅁㅁ      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|65              |ㅁㅁㅁ     |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-03 14:24:38 DEBUGhttp-nio-0.0.0.0-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 13
 {executed in 1 msec}
[2024-12-03 14:24:38 INFO http-nio-0.0.0.0-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|7af273d9-3528-498f-b249-e48a4bc99755.jpg |
|-----------------------------------------|

[2024-12-03 14:24:38 DEBUGhttp-nio-0.0.0.0-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 13
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 14:24:38 INFO http-nio-0.0.0.0-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|61              |34      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|60              |33      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|59              |32      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|58              |31      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-03 14:24:38 DEBUGhttp-nio-0.0.0.0-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 13
 {executed in 1 msec}
[2024-12-03 14:24:38 INFO http-nio-0.0.0.0-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|7af273d9-3528-498f-b249-e48a4bc99755.jpg |
|-----------------------------------------|

[2024-12-03 14:24:38 DEBUGhttp-nio-0.0.0.0-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 13
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 14:24:38 INFO http-nio-0.0.0.0-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|61              |34      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|60              |33      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|59              |32      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|58              |31      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-03 14:24:38 DEBUGhttp-nio-0.0.0.0-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 12
 {executed in 1 msec}
[2024-12-03 14:24:38 INFO http-nio-0.0.0.0-8080-exec-1] [jdbc.resultsettable] 
|---------|
|pic      |
|---------|
|aaaa.gif |
|---------|

[2024-12-03 14:24:38 DEBUGhttp-nio-0.0.0.0-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 12
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 14:24:38 INFO http-nio-0.0.0.0-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|24              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|23              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|22              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|21              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-03 14:24:38 DEBUGhttp-nio-0.0.0.0-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 12
 {executed in 0 msec}
[2024-12-03 14:24:38 INFO http-nio-0.0.0.0-8080-exec-1] [jdbc.resultsettable] 
|---------|
|pic      |
|---------|
|aaaa.gif |
|---------|

[2024-12-03 14:24:38 DEBUGhttp-nio-0.0.0.0-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 12
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 14:24:38 INFO http-nio-0.0.0.0-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|24              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|23              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|22              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|21              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-03 14:24:38 DEBUGhttp-nio-0.0.0.0-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 11
 {executed in 1 msec}
[2024-12-03 14:24:38 INFO http-nio-0.0.0.0-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|f3f416ca-1a7e-4483-b1db-b2164d76d4f4.png |
|-----------------------------------------|

[2024-12-03 14:24:38 DEBUGhttp-nio-0.0.0.0-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 11
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 14:24:38 INFO http-nio-0.0.0.0-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-03 14:24:38 DEBUGhttp-nio-0.0.0.0-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 11
 {executed in 0 msec}
[2024-12-03 14:24:38 INFO http-nio-0.0.0.0-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|f3f416ca-1a7e-4483-b1db-b2164d76d4f4.png |
|-----------------------------------------|

[2024-12-03 14:24:38 DEBUGhttp-nio-0.0.0.0-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 11
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 14:24:38 INFO http-nio-0.0.0.0-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-03 14:24:38 DEBUGhttp-nio-0.0.0.0-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 10
 {executed in 1 msec}
[2024-12-03 14:24:38 INFO http-nio-0.0.0.0-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|53da69e7-7ae4-4e7b-b95b-a4c4ca01bdc8.jpg |
|-----------------------------------------|

[2024-12-03 14:24:38 DEBUGhttp-nio-0.0.0.0-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 10
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 14:24:38 INFO http-nio-0.0.0.0-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|29              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|28              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|27              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|26              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-03 14:24:38 DEBUGhttp-nio-0.0.0.0-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 10
 {executed in 0 msec}
[2024-12-03 14:24:38 INFO http-nio-0.0.0.0-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|53da69e7-7ae4-4e7b-b95b-a4c4ca01bdc8.jpg |
|-----------------------------------------|

[2024-12-03 14:24:38 DEBUGhttp-nio-0.0.0.0-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 10
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 14:24:38 INFO http-nio-0.0.0.0-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|29              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|28              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|27              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|26              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-03 14:24:38 DEBUGhttp-nio-0.0.0.0-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 9
 {executed in 0 msec}
[2024-12-03 14:24:38 INFO http-nio-0.0.0.0-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|7875594b-3649-4059-a29a-5c09feeab0ad.jpg |
|-----------------------------------------|

[2024-12-03 14:24:38 DEBUGhttp-nio-0.0.0.0-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 9
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 14:24:38 INFO http-nio-0.0.0.0-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-03 14:24:38 DEBUGhttp-nio-0.0.0.0-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 9
 {executed in 0 msec}
[2024-12-03 14:24:38 INFO http-nio-0.0.0.0-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|7875594b-3649-4059-a29a-5c09feeab0ad.jpg |
|-----------------------------------------|

[2024-12-03 14:24:38 DEBUGhttp-nio-0.0.0.0-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 9
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 14:24:38 INFO http-nio-0.0.0.0-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-03 14:24:38 DEBUGhttp-nio-0.0.0.0-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 5
 {executed in 0 msec}
[2024-12-03 14:24:38 INFO http-nio-0.0.0.0-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|675d9f82-0c18-4f6e-91a3-9858129aeb7e.jpg |
|c95cc439-e1e7-40f4-81fa-013b069631ca.jpg |
|f490d2ad-c64d-4006-a74a-8235888e3e87.jpg |
|-----------------------------------------|

[2024-12-03 14:24:38 DEBUGhttp-nio-0.0.0.0-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 5
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-03 14:24:38 INFO http-nio-0.0.0.0-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-03 14:24:38 DEBUGhttp-nio-0.0.0.0-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 4
 {executed in 1 msec}
[2024-12-03 14:24:38 INFO http-nio-0.0.0.0-8080-exec-1] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-03 14:24:38 DEBUGhttp-nio-0.0.0.0-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 4
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 14:24:38 INFO http-nio-0.0.0.0-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-03 14:24:38 DEBUGhttp-nio-0.0.0.0-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 4
 {executed in 1 msec}
[2024-12-03 14:24:38 INFO http-nio-0.0.0.0-8080-exec-1] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-03 14:24:38 DEBUGhttp-nio-0.0.0.0-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 4
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 14:24:38 INFO http-nio-0.0.0.0-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-03 14:24:41 DEBUGhttp-nio-0.0.0.0-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. DELETE FROM feed_comment
        WHERE feed_comment_id = 68
        AND user_id = 1
 {executed in 0 msec}
[2024-12-03 14:24:42 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 14
        ORDER BY A.feed_comment_id DESC
        LIMIT 3, 21
 {executed in 0 msec}
[2024-12-03 14:24:42 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|64              |ㅁㅁㅁㅁㄴㅇ  |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-03 14:25:55 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown initiated...
[2024-12-03 14:25:55 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown completed.
[2024-12-03 14:25:58 INFO restartedMain] [com.green.greengram.GreenGramApplication] Starting GreenGramVer2Application using Java 17.0.12 with PID 8268 (D:\BHB\GreenGramVer2\build\classes\java\main started by Administrator in D:\BHB\GreenGramVer2)
[2024-12-03 14:25:58 INFO restartedMain] [com.green.greengram.GreenGramApplication] No active profile set, falling back to 1 default profile: "default"
[2024-12-03 14:25:58 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-03 14:25:58 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-03 14:25:58 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-03 14:25:58 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-0.0.0.0-8080"]
[2024-12-03 14:25:58 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-03 14:25:58 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-03 14:25:59 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-03 14:25:59 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 811 ms
[2024-12-03 14:25:59 INFO restartedMain] [com.green.greengram.common.MyFileUtils] MyFileUtils - 생성자 D:/BHB/download/greengram_ver2
[2024-12-03 14:25:59 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-03 14:25:59 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-03 14:25:59 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-0.0.0.0-8080"]
[2024-12-03 14:25:59 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-03 14:25:59 INFO restartedMain] [com.green.greengram.GreenGramApplication] Started GreenGramVer2Application in 1.678 seconds (process running for 2.025)
[2024-12-03 14:26:02 INFO http-nio-0.0.0.0-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring DispatcherServlet 'dispatcherServlet'
[2024-12-03 14:26:02 INFO http-nio-0.0.0.0-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[2024-12-03 14:26:02 INFO http-nio-0.0.0.0-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Completed initialization in 0 ms
[2024-12-03 14:26:03 INFO http-nio-0.0.0.0-8080-exec-3] [com.green.greengram.feed.model.FeedGetReq] page : 1, size : null, userId : 1
[2024-12-03 14:26:03 INFO http-nio-0.0.0.0-8080-exec-3] [com.green.greengram.feed.FeedController] FeedController > getFeedList > p : FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=1)
[2024-12-03 14:26:03 INFO http-nio-0.0.0.0-8080-exec-3] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Starting...
[2024-12-03 14:26:03 INFO http-nio-0.0.0.0-8080-exec-3] [com.zaxxer.hikari.pool.HikariPool] HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@65296e26
[2024-12-03 14:26:03 INFO http-nio-0.0.0.0-8080-exec-3] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Start completed.
[2024-12-03 14:26:03 DEBUGhttp-nio-0.0.0.0-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId,
        C.user_id AS writerUserId,
        if(C.nick_name IS NULL, C.uid, C.nick_name) AS writerNm,
        C.pic AS writerPic,
        contents, location,
        A.created_at AS createdAt,
        if(D.feed_id IS NULL, 0, 1) AS isLike
        from feed A
        JOIN user C
        ON A.writer_user_id = C.user_id
        LEFT JOIN feed_like D
        ON C.user_id = D.user_id
        AND D.user_id = 1
        order BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 1 msec}
[2024-12-03 14:26:03 INFO http-nio-0.0.0.0-8080-exec-3] [jdbc.resultsettable] 
|--------|--------|---------|-----------------------------------------|---------|---------|--------------------|-------|
|feed_id |user_id |writernm |pic                                      |contents |location |created_at          |islike |
|--------|--------|---------|-----------------------------------------|---------|---------|--------------------|-------|
|14      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |ㅇ        |ㅇ        |2024-12-03 11:49:38 |1      |
|14      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |ㅇ        |ㅇ        |2024-12-03 11:49:38 |1      |
|13      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |d        |d        |2024-12-03 11:15:02 |1      |
|13      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |d        |d        |2024-12-03 11:15:02 |1      |
|12      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |ㅁㄴㅇ      |ㅁㄴㅇ      |2024-11-29 16:17:53 |1      |
|12      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |ㅁㄴㅇ      |ㅁㄴㅇ      |2024-11-29 16:17:53 |1      |
|11      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |         |         |2024-11-29 16:12:11 |1      |
|11      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |         |         |2024-11-29 16:12:11 |1      |
|10      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |asd      |asd      |2024-11-29 16:05:52 |1      |
|10      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |asd      |asd      |2024-11-29 16:05:52 |1      |
|9       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |sda      |asd      |2024-11-29 16:00:32 |1      |
|9       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |sda      |asd      |2024-11-29 16:00:32 |1      |
|5       |2       |홍길동      |6d88f58a-0c38-4010-b703-3ccb187071d8.jpg |123      |중앙로      |2024-11-29 10:36:12 |0      |
|4       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |123      |그린컴      |2024-11-28 17:24:40 |1      |
|4       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |123      |그린컴      |2024-11-28 17:24:40 |1      |
|--------|--------|---------|-----------------------------------------|---------|---------|--------------------|-------|

[2024-12-03 14:26:03 DEBUGhttp-nio-0.0.0.0-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 14
 {executed in 0 msec}
[2024-12-03 14:26:03 INFO http-nio-0.0.0.0-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|d3ab1225-6450-4fc4-9f31-eb10a531825a.gif |
|-----------------------------------------|

[2024-12-03 14:26:03 DEBUGhttp-nio-0.0.0.0-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 14
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 14:26:03 INFO http-nio-0.0.0.0-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|67              |ㅁㅁㅁ     |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|66              |ㅁㅁ      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|65              |ㅁㅁㅁ     |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|64              |ㅁㅁㅁㅁㄴㅇ  |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-03 14:26:03 DEBUGhttp-nio-0.0.0.0-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 14
 {executed in 0 msec}
[2024-12-03 14:26:03 INFO http-nio-0.0.0.0-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|d3ab1225-6450-4fc4-9f31-eb10a531825a.gif |
|-----------------------------------------|

[2024-12-03 14:26:03 DEBUGhttp-nio-0.0.0.0-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 14
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-03 14:26:03 INFO http-nio-0.0.0.0-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|67              |ㅁㅁㅁ     |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|66              |ㅁㅁ      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|65              |ㅁㅁㅁ     |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|64              |ㅁㅁㅁㅁㄴㅇ  |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-03 14:26:03 DEBUGhttp-nio-0.0.0.0-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 13
 {executed in 0 msec}
[2024-12-03 14:26:03 INFO http-nio-0.0.0.0-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|7af273d9-3528-498f-b249-e48a4bc99755.jpg |
|-----------------------------------------|

[2024-12-03 14:26:03 DEBUGhttp-nio-0.0.0.0-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 13
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-03 14:26:03 INFO http-nio-0.0.0.0-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|61              |34      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|60              |33      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|59              |32      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|58              |31      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-03 14:26:03 DEBUGhttp-nio-0.0.0.0-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 13
 {executed in 0 msec}
[2024-12-03 14:26:03 INFO http-nio-0.0.0.0-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|7af273d9-3528-498f-b249-e48a4bc99755.jpg |
|-----------------------------------------|

[2024-12-03 14:26:03 DEBUGhttp-nio-0.0.0.0-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 13
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-03 14:26:03 INFO http-nio-0.0.0.0-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|61              |34      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|60              |33      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|59              |32      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|58              |31      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-03 14:26:03 DEBUGhttp-nio-0.0.0.0-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 12
 {executed in 0 msec}
[2024-12-03 14:26:03 INFO http-nio-0.0.0.0-8080-exec-3] [jdbc.resultsettable] 
|---------|
|pic      |
|---------|
|aaaa.gif |
|---------|

[2024-12-03 14:26:03 DEBUGhttp-nio-0.0.0.0-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 12
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 14:26:03 INFO http-nio-0.0.0.0-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|24              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|23              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|22              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|21              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-03 14:26:03 DEBUGhttp-nio-0.0.0.0-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 12
 {executed in 0 msec}
[2024-12-03 14:26:03 INFO http-nio-0.0.0.0-8080-exec-3] [jdbc.resultsettable] 
|---------|
|pic      |
|---------|
|aaaa.gif |
|---------|

[2024-12-03 14:26:03 DEBUGhttp-nio-0.0.0.0-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 12
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 14:26:03 INFO http-nio-0.0.0.0-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|24              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|23              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|22              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|21              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-03 14:26:03 DEBUGhttp-nio-0.0.0.0-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 11
 {executed in 0 msec}
[2024-12-03 14:26:03 INFO http-nio-0.0.0.0-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|f3f416ca-1a7e-4483-b1db-b2164d76d4f4.png |
|-----------------------------------------|

[2024-12-03 14:26:03 DEBUGhttp-nio-0.0.0.0-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 11
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 14:26:03 INFO http-nio-0.0.0.0-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-03 14:26:03 DEBUGhttp-nio-0.0.0.0-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 11
 {executed in 0 msec}
[2024-12-03 14:26:03 INFO http-nio-0.0.0.0-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|f3f416ca-1a7e-4483-b1db-b2164d76d4f4.png |
|-----------------------------------------|

[2024-12-03 14:26:03 DEBUGhttp-nio-0.0.0.0-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 11
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 14:26:03 INFO http-nio-0.0.0.0-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-03 14:26:03 DEBUGhttp-nio-0.0.0.0-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 10
 {executed in 0 msec}
[2024-12-03 14:26:03 INFO http-nio-0.0.0.0-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|53da69e7-7ae4-4e7b-b95b-a4c4ca01bdc8.jpg |
|-----------------------------------------|

[2024-12-03 14:26:03 DEBUGhttp-nio-0.0.0.0-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 10
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 14:26:03 INFO http-nio-0.0.0.0-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|29              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|28              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|27              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|26              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-03 14:26:03 DEBUGhttp-nio-0.0.0.0-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 10
 {executed in 0 msec}
[2024-12-03 14:26:03 INFO http-nio-0.0.0.0-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|53da69e7-7ae4-4e7b-b95b-a4c4ca01bdc8.jpg |
|-----------------------------------------|

[2024-12-03 14:26:03 DEBUGhttp-nio-0.0.0.0-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 10
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 14:26:03 INFO http-nio-0.0.0.0-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|29              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|28              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|27              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|26              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-03 14:26:03 DEBUGhttp-nio-0.0.0.0-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 9
 {executed in 0 msec}
[2024-12-03 14:26:03 INFO http-nio-0.0.0.0-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|7875594b-3649-4059-a29a-5c09feeab0ad.jpg |
|-----------------------------------------|

[2024-12-03 14:26:03 DEBUGhttp-nio-0.0.0.0-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 9
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 14:26:03 INFO http-nio-0.0.0.0-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-03 14:26:03 DEBUGhttp-nio-0.0.0.0-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 9
 {executed in 0 msec}
[2024-12-03 14:26:03 INFO http-nio-0.0.0.0-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|7875594b-3649-4059-a29a-5c09feeab0ad.jpg |
|-----------------------------------------|

[2024-12-03 14:26:03 DEBUGhttp-nio-0.0.0.0-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 9
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 14:26:03 INFO http-nio-0.0.0.0-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-03 14:26:03 DEBUGhttp-nio-0.0.0.0-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 5
 {executed in 0 msec}
[2024-12-03 14:26:03 INFO http-nio-0.0.0.0-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|675d9f82-0c18-4f6e-91a3-9858129aeb7e.jpg |
|c95cc439-e1e7-40f4-81fa-013b069631ca.jpg |
|f490d2ad-c64d-4006-a74a-8235888e3e87.jpg |
|-----------------------------------------|

[2024-12-03 14:26:03 DEBUGhttp-nio-0.0.0.0-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 5
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 14:26:03 INFO http-nio-0.0.0.0-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-03 14:26:03 DEBUGhttp-nio-0.0.0.0-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 4
 {executed in 0 msec}
[2024-12-03 14:26:03 INFO http-nio-0.0.0.0-8080-exec-3] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-03 14:26:03 DEBUGhttp-nio-0.0.0.0-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 4
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 14:26:03 INFO http-nio-0.0.0.0-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-03 14:26:03 DEBUGhttp-nio-0.0.0.0-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 4
 {executed in 0 msec}
[2024-12-03 14:26:03 INFO http-nio-0.0.0.0-8080-exec-3] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-03 14:26:03 DEBUGhttp-nio-0.0.0.0-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 4
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 14:26:03 INFO http-nio-0.0.0.0-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-03 14:26:06 DEBUGhttp-nio-0.0.0.0-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. DELETE FROM feed_comment
        WHERE feed_comment_id = 67
        AND user_id = 1
 {executed in 0 msec}
[2024-12-03 14:26:07 DEBUGhttp-nio-0.0.0.0-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. DELETE FROM feed_comment
        WHERE feed_comment_id = 66
        AND user_id = 1
 {executed in 3 msec}
[2024-12-03 14:26:07 DEBUGhttp-nio-0.0.0.0-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. DELETE FROM feed_comment
        WHERE feed_comment_id = 65
        AND user_id = 1
 {executed in 3 msec}
[2024-12-03 14:26:08 DEBUGhttp-nio-0.0.0.0-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 14
        ORDER BY A.feed_comment_id DESC
        LIMIT 3, 21
 {executed in 0 msec}
[2024-12-03 14:26:08 INFO http-nio-0.0.0.0-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-03 14:26:10 INFO http-nio-0.0.0.0-8080-exec-8] [com.green.greengram.feed.model.FeedGetReq] page : 1, size : null, userId : 1
[2024-12-03 14:26:10 INFO http-nio-0.0.0.0-8080-exec-8] [com.green.greengram.feed.FeedController] FeedController > getFeedList > p : FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=1)
[2024-12-03 14:26:10 DEBUGhttp-nio-0.0.0.0-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId,
        C.user_id AS writerUserId,
        if(C.nick_name IS NULL, C.uid, C.nick_name) AS writerNm,
        C.pic AS writerPic,
        contents, location,
        A.created_at AS createdAt,
        if(D.feed_id IS NULL, 0, 1) AS isLike
        from feed A
        JOIN user C
        ON A.writer_user_id = C.user_id
        LEFT JOIN feed_like D
        ON C.user_id = D.user_id
        AND D.user_id = 1
        order BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 0 msec}
[2024-12-03 14:26:10 INFO http-nio-0.0.0.0-8080-exec-8] [jdbc.resultsettable] 
|--------|--------|---------|-----------------------------------------|---------|---------|--------------------|-------|
|feed_id |user_id |writernm |pic                                      |contents |location |created_at          |islike |
|--------|--------|---------|-----------------------------------------|---------|---------|--------------------|-------|
|14      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |ㅇ        |ㅇ        |2024-12-03 11:49:38 |1      |
|14      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |ㅇ        |ㅇ        |2024-12-03 11:49:38 |1      |
|13      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |d        |d        |2024-12-03 11:15:02 |1      |
|13      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |d        |d        |2024-12-03 11:15:02 |1      |
|12      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |ㅁㄴㅇ      |ㅁㄴㅇ      |2024-11-29 16:17:53 |1      |
|12      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |ㅁㄴㅇ      |ㅁㄴㅇ      |2024-11-29 16:17:53 |1      |
|11      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |         |         |2024-11-29 16:12:11 |1      |
|11      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |         |         |2024-11-29 16:12:11 |1      |
|10      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |asd      |asd      |2024-11-29 16:05:52 |1      |
|10      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |asd      |asd      |2024-11-29 16:05:52 |1      |
|9       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |sda      |asd      |2024-11-29 16:00:32 |1      |
|9       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |sda      |asd      |2024-11-29 16:00:32 |1      |
|5       |2       |홍길동      |6d88f58a-0c38-4010-b703-3ccb187071d8.jpg |123      |중앙로      |2024-11-29 10:36:12 |0      |
|4       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |123      |그린컴      |2024-11-28 17:24:40 |1      |
|4       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |123      |그린컴      |2024-11-28 17:24:40 |1      |
|--------|--------|---------|-----------------------------------------|---------|---------|--------------------|-------|

[2024-12-03 14:26:10 DEBUGhttp-nio-0.0.0.0-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 14
 {executed in 0 msec}
[2024-12-03 14:26:10 INFO http-nio-0.0.0.0-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|d3ab1225-6450-4fc4-9f31-eb10a531825a.gif |
|-----------------------------------------|

[2024-12-03 14:26:10 DEBUGhttp-nio-0.0.0.0-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 14
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 14:26:10 INFO http-nio-0.0.0.0-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|64              |ㅁㅁㅁㅁㄴㅇ  |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-03 14:26:10 DEBUGhttp-nio-0.0.0.0-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 14
 {executed in 0 msec}
[2024-12-03 14:26:10 INFO http-nio-0.0.0.0-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|d3ab1225-6450-4fc4-9f31-eb10a531825a.gif |
|-----------------------------------------|

[2024-12-03 14:26:10 DEBUGhttp-nio-0.0.0.0-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 14
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 14:26:10 INFO http-nio-0.0.0.0-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|64              |ㅁㅁㅁㅁㄴㅇ  |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-03 14:26:10 DEBUGhttp-nio-0.0.0.0-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 13
 {executed in 0 msec}
[2024-12-03 14:26:10 INFO http-nio-0.0.0.0-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|7af273d9-3528-498f-b249-e48a4bc99755.jpg |
|-----------------------------------------|

[2024-12-03 14:26:10 DEBUGhttp-nio-0.0.0.0-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 13
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 14:26:10 INFO http-nio-0.0.0.0-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|61              |34      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|60              |33      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|59              |32      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|58              |31      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-03 14:26:10 DEBUGhttp-nio-0.0.0.0-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 13
 {executed in 0 msec}
[2024-12-03 14:26:10 INFO http-nio-0.0.0.0-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|7af273d9-3528-498f-b249-e48a4bc99755.jpg |
|-----------------------------------------|

[2024-12-03 14:26:10 DEBUGhttp-nio-0.0.0.0-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 13
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 14:26:10 INFO http-nio-0.0.0.0-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|61              |34      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|60              |33      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|59              |32      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|58              |31      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-03 14:26:10 DEBUGhttp-nio-0.0.0.0-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 12
 {executed in 0 msec}
[2024-12-03 14:26:10 INFO http-nio-0.0.0.0-8080-exec-8] [jdbc.resultsettable] 
|---------|
|pic      |
|---------|
|aaaa.gif |
|---------|

[2024-12-03 14:26:10 DEBUGhttp-nio-0.0.0.0-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 12
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 14:26:10 INFO http-nio-0.0.0.0-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|24              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|23              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|22              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|21              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-03 14:26:10 DEBUGhttp-nio-0.0.0.0-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 12
 {executed in 0 msec}
[2024-12-03 14:26:10 INFO http-nio-0.0.0.0-8080-exec-8] [jdbc.resultsettable] 
|---------|
|pic      |
|---------|
|aaaa.gif |
|---------|

[2024-12-03 14:26:10 DEBUGhttp-nio-0.0.0.0-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 12
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 14:26:10 INFO http-nio-0.0.0.0-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|24              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|23              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|22              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|21              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-03 14:26:10 DEBUGhttp-nio-0.0.0.0-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 11
 {executed in 0 msec}
[2024-12-03 14:26:10 INFO http-nio-0.0.0.0-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|f3f416ca-1a7e-4483-b1db-b2164d76d4f4.png |
|-----------------------------------------|

[2024-12-03 14:26:10 DEBUGhttp-nio-0.0.0.0-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 11
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 14:26:10 INFO http-nio-0.0.0.0-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-03 14:26:10 DEBUGhttp-nio-0.0.0.0-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 11
 {executed in 0 msec}
[2024-12-03 14:26:10 INFO http-nio-0.0.0.0-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|f3f416ca-1a7e-4483-b1db-b2164d76d4f4.png |
|-----------------------------------------|

[2024-12-03 14:26:10 DEBUGhttp-nio-0.0.0.0-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 11
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 14:26:10 INFO http-nio-0.0.0.0-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-03 14:26:10 DEBUGhttp-nio-0.0.0.0-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 10
 {executed in 0 msec}
[2024-12-03 14:26:10 INFO http-nio-0.0.0.0-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|53da69e7-7ae4-4e7b-b95b-a4c4ca01bdc8.jpg |
|-----------------------------------------|

[2024-12-03 14:26:10 DEBUGhttp-nio-0.0.0.0-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 10
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 14:26:10 INFO http-nio-0.0.0.0-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|29              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|28              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|27              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|26              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-03 14:26:10 DEBUGhttp-nio-0.0.0.0-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 10
 {executed in 0 msec}
[2024-12-03 14:26:10 INFO http-nio-0.0.0.0-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|53da69e7-7ae4-4e7b-b95b-a4c4ca01bdc8.jpg |
|-----------------------------------------|

[2024-12-03 14:26:10 DEBUGhttp-nio-0.0.0.0-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 10
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 14:26:10 INFO http-nio-0.0.0.0-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|29              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|28              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|27              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|26              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-03 14:26:10 DEBUGhttp-nio-0.0.0.0-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 9
 {executed in 0 msec}
[2024-12-03 14:26:10 INFO http-nio-0.0.0.0-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|7875594b-3649-4059-a29a-5c09feeab0ad.jpg |
|-----------------------------------------|

[2024-12-03 14:26:10 DEBUGhttp-nio-0.0.0.0-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 9
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 14:26:10 INFO http-nio-0.0.0.0-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-03 14:26:10 DEBUGhttp-nio-0.0.0.0-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 9
 {executed in 0 msec}
[2024-12-03 14:26:10 INFO http-nio-0.0.0.0-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|7875594b-3649-4059-a29a-5c09feeab0ad.jpg |
|-----------------------------------------|

[2024-12-03 14:26:10 DEBUGhttp-nio-0.0.0.0-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 9
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 14:26:10 INFO http-nio-0.0.0.0-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-03 14:26:10 DEBUGhttp-nio-0.0.0.0-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 5
 {executed in 0 msec}
[2024-12-03 14:26:10 INFO http-nio-0.0.0.0-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|675d9f82-0c18-4f6e-91a3-9858129aeb7e.jpg |
|c95cc439-e1e7-40f4-81fa-013b069631ca.jpg |
|f490d2ad-c64d-4006-a74a-8235888e3e87.jpg |
|-----------------------------------------|

[2024-12-03 14:26:10 DEBUGhttp-nio-0.0.0.0-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 5
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 14:26:10 INFO http-nio-0.0.0.0-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-03 14:26:10 DEBUGhttp-nio-0.0.0.0-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 4
 {executed in 0 msec}
[2024-12-03 14:26:10 INFO http-nio-0.0.0.0-8080-exec-8] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-03 14:26:10 DEBUGhttp-nio-0.0.0.0-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 4
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 16 msec}
[2024-12-03 14:26:10 INFO http-nio-0.0.0.0-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-03 14:26:10 DEBUGhttp-nio-0.0.0.0-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 4
 {executed in 0 msec}
[2024-12-03 14:26:10 INFO http-nio-0.0.0.0-8080-exec-8] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-03 14:26:10 DEBUGhttp-nio-0.0.0.0-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 4
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 14:26:10 INFO http-nio-0.0.0.0-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-03 14:26:12 DEBUGhttp-nio-0.0.0.0-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. DELETE FROM feed_comment
        WHERE feed_comment_id = 64
        AND user_id = 1
 {executed in 2 msec}
[2024-12-03 14:26:16 DEBUGhttp-nio-0.0.0.0-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. insert into feed_comment
        set `feed_id` = 14
        , `user_id` = 1
        , `COMMENT` = '1'
 {executed in 0 msec}
[2024-12-03 14:26:16 DEBUGhttp-nio-0.0.0.0-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
1. getGeneratedKeys on query: insert into feed_comment
        set `feed_id` = 14
        , `user_id` = 1
        , `COMMENT` = '1'
 {executed in 0 msec}
[2024-12-03 14:26:16 INFO http-nio-0.0.0.0-8080-exec-4] [jdbc.resultsettable] 
|----------|
|insert_id |
|----------|
|69        |
|----------|

[2024-12-03 14:26:17 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. insert into feed_comment
        set `feed_id` = 14
        , `user_id` = 1
        , `COMMENT` = '2'
 {executed in 0 msec}
[2024-12-03 14:26:17 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
1. getGeneratedKeys on query: insert into feed_comment
        set `feed_id` = 14
        , `user_id` = 1
        , `COMMENT` = '2'
 {executed in 0 msec}
[2024-12-03 14:26:17 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|----------|
|insert_id |
|----------|
|70        |
|----------|

[2024-12-03 14:26:18 DEBUGhttp-nio-0.0.0.0-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. insert into feed_comment
        set `feed_id` = 14
        , `user_id` = 1
        , `COMMENT` = '3'
 {executed in 0 msec}
[2024-12-03 14:26:18 DEBUGhttp-nio-0.0.0.0-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
1. getGeneratedKeys on query: insert into feed_comment
        set `feed_id` = 14
        , `user_id` = 1
        , `COMMENT` = '3'
 {executed in 0 msec}
[2024-12-03 14:26:18 INFO http-nio-0.0.0.0-8080-exec-2] [jdbc.resultsettable] 
|----------|
|insert_id |
|----------|
|71        |
|----------|

[2024-12-03 14:26:19 DEBUGhttp-nio-0.0.0.0-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. insert into feed_comment
        set `feed_id` = 14
        , `user_id` = 1
        , `COMMENT` = '4'
 {executed in 15 msec}
[2024-12-03 14:26:19 DEBUGhttp-nio-0.0.0.0-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
1. getGeneratedKeys on query: insert into feed_comment
        set `feed_id` = 14
        , `user_id` = 1
        , `COMMENT` = '4'
 {executed in 0 msec}
[2024-12-03 14:26:19 INFO http-nio-0.0.0.0-8080-exec-5] [jdbc.resultsettable] 
|----------|
|insert_id |
|----------|
|72        |
|----------|

[2024-12-03 14:26:21 DEBUGhttp-nio-0.0.0.0-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. insert into feed_comment
        set `feed_id` = 14
        , `user_id` = 1
        , `COMMENT` = '5'
 {executed in 0 msec}
[2024-12-03 14:26:21 DEBUGhttp-nio-0.0.0.0-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
1. getGeneratedKeys on query: insert into feed_comment
        set `feed_id` = 14
        , `user_id` = 1
        , `COMMENT` = '5'
 {executed in 0 msec}
[2024-12-03 14:26:21 INFO http-nio-0.0.0.0-8080-exec-3] [jdbc.resultsettable] 
|----------|
|insert_id |
|----------|
|73        |
|----------|

[2024-12-03 14:26:22 DEBUGhttp-nio-0.0.0.0-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. insert into feed_comment
        set `feed_id` = 14
        , `user_id` = 1
        , `COMMENT` = '6'
 {executed in 17 msec}
[2024-12-03 14:26:22 DEBUGhttp-nio-0.0.0.0-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
1. getGeneratedKeys on query: insert into feed_comment
        set `feed_id` = 14
        , `user_id` = 1
        , `COMMENT` = '6'
 {executed in 0 msec}
[2024-12-03 14:26:22 INFO http-nio-0.0.0.0-8080-exec-7] [jdbc.resultsettable] 
|----------|
|insert_id |
|----------|
|74        |
|----------|

[2024-12-03 14:26:24 INFO http-nio-0.0.0.0-8080-exec-6] [com.green.greengram.feed.model.FeedGetReq] page : 1, size : null, userId : 1
[2024-12-03 14:26:24 INFO http-nio-0.0.0.0-8080-exec-6] [com.green.greengram.feed.FeedController] FeedController > getFeedList > p : FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=1)
[2024-12-03 14:26:24 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId,
        C.user_id AS writerUserId,
        if(C.nick_name IS NULL, C.uid, C.nick_name) AS writerNm,
        C.pic AS writerPic,
        contents, location,
        A.created_at AS createdAt,
        if(D.feed_id IS NULL, 0, 1) AS isLike
        from feed A
        JOIN user C
        ON A.writer_user_id = C.user_id
        LEFT JOIN feed_like D
        ON C.user_id = D.user_id
        AND D.user_id = 1
        order BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 0 msec}
[2024-12-03 14:26:24 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|--------|--------|---------|-----------------------------------------|---------|---------|--------------------|-------|
|feed_id |user_id |writernm |pic                                      |contents |location |created_at          |islike |
|--------|--------|---------|-----------------------------------------|---------|---------|--------------------|-------|
|14      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |ㅇ        |ㅇ        |2024-12-03 11:49:38 |1      |
|14      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |ㅇ        |ㅇ        |2024-12-03 11:49:38 |1      |
|13      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |d        |d        |2024-12-03 11:15:02 |1      |
|13      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |d        |d        |2024-12-03 11:15:02 |1      |
|12      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |ㅁㄴㅇ      |ㅁㄴㅇ      |2024-11-29 16:17:53 |1      |
|12      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |ㅁㄴㅇ      |ㅁㄴㅇ      |2024-11-29 16:17:53 |1      |
|11      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |         |         |2024-11-29 16:12:11 |1      |
|11      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |         |         |2024-11-29 16:12:11 |1      |
|10      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |asd      |asd      |2024-11-29 16:05:52 |1      |
|10      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |asd      |asd      |2024-11-29 16:05:52 |1      |
|9       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |sda      |asd      |2024-11-29 16:00:32 |1      |
|9       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |sda      |asd      |2024-11-29 16:00:32 |1      |
|5       |2       |홍길동      |6d88f58a-0c38-4010-b703-3ccb187071d8.jpg |123      |중앙로      |2024-11-29 10:36:12 |0      |
|4       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |123      |그린컴      |2024-11-28 17:24:40 |1      |
|4       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |123      |그린컴      |2024-11-28 17:24:40 |1      |
|--------|--------|---------|-----------------------------------------|---------|---------|--------------------|-------|

[2024-12-03 14:26:24 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 14
 {executed in 0 msec}
[2024-12-03 14:26:24 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|d3ab1225-6450-4fc4-9f31-eb10a531825a.gif |
|-----------------------------------------|

[2024-12-03 14:26:24 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 14
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 14:26:24 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|74              |6       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|73              |5       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|72              |4       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|71              |3       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-03 14:26:24 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 14
 {executed in 0 msec}
[2024-12-03 14:26:24 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|d3ab1225-6450-4fc4-9f31-eb10a531825a.gif |
|-----------------------------------------|

[2024-12-03 14:26:24 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 14
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 14:26:24 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|74              |6       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|73              |5       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|72              |4       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|71              |3       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-03 14:26:24 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 13
 {executed in 0 msec}
[2024-12-03 14:26:24 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|7af273d9-3528-498f-b249-e48a4bc99755.jpg |
|-----------------------------------------|

[2024-12-03 14:26:24 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 13
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 14:26:24 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|61              |34      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|60              |33      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|59              |32      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|58              |31      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-03 14:26:24 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 13
 {executed in 0 msec}
[2024-12-03 14:26:24 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|7af273d9-3528-498f-b249-e48a4bc99755.jpg |
|-----------------------------------------|

[2024-12-03 14:26:24 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 13
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 14:26:24 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|61              |34      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|60              |33      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|59              |32      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|58              |31      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-03 14:26:24 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 12
 {executed in 0 msec}
[2024-12-03 14:26:24 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|---------|
|pic      |
|---------|
|aaaa.gif |
|---------|

[2024-12-03 14:26:24 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 12
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 14:26:24 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|24              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|23              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|22              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|21              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-03 14:26:24 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 12
 {executed in 0 msec}
[2024-12-03 14:26:24 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|---------|
|pic      |
|---------|
|aaaa.gif |
|---------|

[2024-12-03 14:26:24 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 12
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 14:26:24 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|24              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|23              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|22              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|21              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-03 14:26:24 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 11
 {executed in 0 msec}
[2024-12-03 14:26:24 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|f3f416ca-1a7e-4483-b1db-b2164d76d4f4.png |
|-----------------------------------------|

[2024-12-03 14:26:24 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 11
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-03 14:26:24 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-03 14:26:24 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 11
 {executed in 0 msec}
[2024-12-03 14:26:24 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|f3f416ca-1a7e-4483-b1db-b2164d76d4f4.png |
|-----------------------------------------|

[2024-12-03 14:26:24 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 11
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 14:26:24 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-03 14:26:24 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 10
 {executed in 0 msec}
[2024-12-03 14:26:24 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|53da69e7-7ae4-4e7b-b95b-a4c4ca01bdc8.jpg |
|-----------------------------------------|

[2024-12-03 14:26:24 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 10
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 14:26:24 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|29              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|28              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|27              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|26              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-03 14:26:24 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 10
 {executed in 0 msec}
[2024-12-03 14:26:24 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|53da69e7-7ae4-4e7b-b95b-a4c4ca01bdc8.jpg |
|-----------------------------------------|

[2024-12-03 14:26:24 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 10
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 14:26:24 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|29              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|28              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|27              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|26              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-03 14:26:24 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 9
 {executed in 0 msec}
[2024-12-03 14:26:24 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|7875594b-3649-4059-a29a-5c09feeab0ad.jpg |
|-----------------------------------------|

[2024-12-03 14:26:24 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 9
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 14:26:24 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-03 14:26:24 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 9
 {executed in 0 msec}
[2024-12-03 14:26:24 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|7875594b-3649-4059-a29a-5c09feeab0ad.jpg |
|-----------------------------------------|

[2024-12-03 14:26:24 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 9
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 14:26:24 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-03 14:26:24 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 5
 {executed in 0 msec}
[2024-12-03 14:26:24 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|675d9f82-0c18-4f6e-91a3-9858129aeb7e.jpg |
|c95cc439-e1e7-40f4-81fa-013b069631ca.jpg |
|f490d2ad-c64d-4006-a74a-8235888e3e87.jpg |
|-----------------------------------------|

[2024-12-03 14:26:24 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 5
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 14:26:24 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-03 14:26:24 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 4
 {executed in 0 msec}
[2024-12-03 14:26:24 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-03 14:26:24 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 4
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 14:26:24 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-03 14:26:24 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 4
 {executed in 0 msec}
[2024-12-03 14:26:24 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-03 14:26:24 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 4
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 14:26:24 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-03 14:26:27 DEBUGhttp-nio-0.0.0.0-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. DELETE FROM feed_comment
        WHERE feed_comment_id = 74
        AND user_id = 1
 {executed in 0 msec}
[2024-12-03 14:26:28 DEBUGhttp-nio-0.0.0.0-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 14
        ORDER BY A.feed_comment_id DESC
        LIMIT 3, 21
 {executed in 1 msec}
[2024-12-03 14:26:28 INFO http-nio-0.0.0.0-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|70              |2       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|69              |1       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-03 14:28:04 INFO File Watcher] [org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener] Restarting due to 2 class path changes (0 additions, 0 deletions, 2 modifications)
[2024-12-03 14:28:04 INFO Thread-5] [org.apache.coyote.http11.Http11NioProtocol] Stopping ProtocolHandler ["http-nio-0.0.0.0-8080"]
[2024-12-03 14:28:04 INFO Thread-5] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown initiated...
[2024-12-03 14:28:04 INFO Thread-5] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown completed.
[2024-12-03 14:28:04 INFO restartedMain] [com.green.greengram.GreenGramApplication] Starting GreenGramVer2Application using Java 17.0.12 with PID 8268 (D:\BHB\GreenGramVer2\build\classes\java\main started by Administrator in D:\BHB\GreenGramVer2)
[2024-12-03 14:28:04 INFO restartedMain] [com.green.greengram.GreenGramApplication] No active profile set, falling back to 1 default profile: "default"
[2024-12-03 14:28:04 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-03 14:28:04 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-0.0.0.0-8080"]
[2024-12-03 14:28:04 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-03 14:28:04 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-03 14:28:04 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-03 14:28:04 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 200 ms
[2024-12-03 14:28:04 INFO restartedMain] [com.green.greengram.common.MyFileUtils] MyFileUtils - 생성자 D:/BHB/download/greengram_ver2
[2024-12-03 14:28:04 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-03 14:28:04 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-03 14:28:04 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-0.0.0.0-8080"]
[2024-12-03 14:28:04 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-03 14:28:04 INFO restartedMain] [com.green.greengram.GreenGramApplication] Started GreenGramVer2Application in 0.38 seconds (process running for 127.469)
[2024-12-03 14:28:04 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener] Condition evaluation unchanged
[2024-12-03 14:29:11 INFO restartedMain] [com.green.greengram.GreenGramApplication] Starting GreenGramVer2Application using Java 17.0.12 with PID 8712 (D:\BHB\GreenGramVer2\build\classes\java\main started by Administrator in D:\BHB\GreenGramVer2)
[2024-12-03 14:29:11 INFO restartedMain] [com.green.greengram.GreenGramApplication] No active profile set, falling back to 1 default profile: "default"
[2024-12-03 14:29:11 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-03 14:29:11 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-03 14:29:12 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-03 14:29:12 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-0.0.0.0-8080"]
[2024-12-03 14:29:12 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-03 14:29:12 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-03 14:29:12 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-03 14:29:12 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 784 ms
[2024-12-03 14:29:12 INFO restartedMain] [com.green.greengram.common.MyFileUtils] MyFileUtils - 생성자 D:/BHB/download/greengram_ver2
[2024-12-03 14:29:12 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-03 14:29:12 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-03 14:29:12 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-0.0.0.0-8080"]
[2024-12-03 14:29:12 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-03 14:29:12 INFO restartedMain] [com.green.greengram.GreenGramApplication] Started GreenGramVer2Application in 1.688 seconds (process running for 2.018)
[2024-12-03 14:29:16 INFO File Watcher] [org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener] Restarting due to 2 class path changes (0 additions, 0 deletions, 2 modifications)
[2024-12-03 14:29:16 INFO Thread-5] [org.apache.coyote.http11.Http11NioProtocol] Stopping ProtocolHandler ["http-nio-0.0.0.0-8080"]
[2024-12-03 14:29:16 INFO restartedMain] [com.green.greengram.GreenGramApplication] Starting GreenGramVer2Application using Java 17.0.12 with PID 8712 (D:\BHB\GreenGramVer2\build\classes\java\main started by Administrator in D:\BHB\GreenGramVer2)
[2024-12-03 14:29:16 INFO restartedMain] [com.green.greengram.GreenGramApplication] No active profile set, falling back to 1 default profile: "default"
[2024-12-03 14:29:16 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-03 14:29:16 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-0.0.0.0-8080"]
[2024-12-03 14:29:16 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-03 14:29:16 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-03 14:29:16 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-03 14:29:16 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 221 ms
[2024-12-03 14:29:16 INFO restartedMain] [com.green.greengram.common.MyFileUtils] MyFileUtils - 생성자 D:/BHB/download/greengram_ver2
[2024-12-03 14:29:16 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-03 14:29:16 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-03 14:29:16 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-0.0.0.0-8080"]
[2024-12-03 14:29:16 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-03 14:29:16 INFO restartedMain] [com.green.greengram.GreenGramApplication] Started GreenGramVer2Application in 0.366 seconds (process running for 5.877)
[2024-12-03 14:29:16 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener] Condition evaluation unchanged
[2024-12-03 14:29:16 INFO http-nio-0.0.0.0-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring DispatcherServlet 'dispatcherServlet'
[2024-12-03 14:29:16 INFO http-nio-0.0.0.0-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[2024-12-03 14:29:16 INFO http-nio-0.0.0.0-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Completed initialization in 0 ms
[2024-12-03 14:29:19 INFO http-nio-0.0.0.0-8080-exec-8] [com.green.greengram.feed.model.FeedGetReq] page : 1, size : null, userId : 1
[2024-12-03 14:29:19 INFO http-nio-0.0.0.0-8080-exec-8] [com.green.greengram.feed.FeedController] FeedController > getFeedList > p : FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=1)
[2024-12-03 14:29:19 INFO http-nio-0.0.0.0-8080-exec-8] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Starting...
[2024-12-03 14:29:19 INFO http-nio-0.0.0.0-8080-exec-8] [com.zaxxer.hikari.pool.HikariPool] HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@68c595c8
[2024-12-03 14:29:19 INFO http-nio-0.0.0.0-8080-exec-8] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Start completed.
[2024-12-03 14:29:19 DEBUGhttp-nio-0.0.0.0-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId,
        C.user_id AS writerUserId,
        if(C.nick_name IS NULL, C.uid, C.nick_name) AS writerNm,
        C.pic AS writerPic,
        contents, location,
        A.created_at AS createdAt,
        if(D.feed_id IS NULL, 0, 1) AS isLike
        from feed A
        JOIN user C
        ON A.writer_user_id = C.user_id
        LEFT JOIN feed_like D
        ON C.user_id = D.user_id
        AND D.user_id = 1
        order BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 0 msec}
[2024-12-03 14:29:19 INFO http-nio-0.0.0.0-8080-exec-8] [jdbc.resultsettable] 
|--------|--------|---------|-----------------------------------------|---------|---------|--------------------|-------|
|feed_id |user_id |writernm |pic                                      |contents |location |created_at          |islike |
|--------|--------|---------|-----------------------------------------|---------|---------|--------------------|-------|
|14      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |ㅇ        |ㅇ        |2024-12-03 11:49:38 |1      |
|14      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |ㅇ        |ㅇ        |2024-12-03 11:49:38 |1      |
|13      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |d        |d        |2024-12-03 11:15:02 |1      |
|13      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |d        |d        |2024-12-03 11:15:02 |1      |
|12      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |ㅁㄴㅇ      |ㅁㄴㅇ      |2024-11-29 16:17:53 |1      |
|12      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |ㅁㄴㅇ      |ㅁㄴㅇ      |2024-11-29 16:17:53 |1      |
|11      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |         |         |2024-11-29 16:12:11 |1      |
|11      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |         |         |2024-11-29 16:12:11 |1      |
|10      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |asd      |asd      |2024-11-29 16:05:52 |1      |
|10      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |asd      |asd      |2024-11-29 16:05:52 |1      |
|9       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |sda      |asd      |2024-11-29 16:00:32 |1      |
|9       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |sda      |asd      |2024-11-29 16:00:32 |1      |
|5       |2       |홍길동      |6d88f58a-0c38-4010-b703-3ccb187071d8.jpg |123      |중앙로      |2024-11-29 10:36:12 |0      |
|4       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |123      |그린컴      |2024-11-28 17:24:40 |1      |
|4       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |123      |그린컴      |2024-11-28 17:24:40 |1      |
|--------|--------|---------|-----------------------------------------|---------|---------|--------------------|-------|

[2024-12-03 14:29:19 DEBUGhttp-nio-0.0.0.0-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 14
 {executed in 0 msec}
[2024-12-03 14:29:19 INFO http-nio-0.0.0.0-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|d3ab1225-6450-4fc4-9f31-eb10a531825a.gif |
|-----------------------------------------|

[2024-12-03 14:29:19 DEBUGhttp-nio-0.0.0.0-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 14
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 14:29:19 INFO http-nio-0.0.0.0-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|73              |5       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|72              |4       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|71              |3       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|70              |2       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-03 14:29:19 DEBUGhttp-nio-0.0.0.0-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 14
 {executed in 0 msec}
[2024-12-03 14:29:19 INFO http-nio-0.0.0.0-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|d3ab1225-6450-4fc4-9f31-eb10a531825a.gif |
|-----------------------------------------|

[2024-12-03 14:29:19 DEBUGhttp-nio-0.0.0.0-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 14
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 14:29:19 INFO http-nio-0.0.0.0-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|73              |5       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|72              |4       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|71              |3       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|70              |2       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-03 14:29:19 DEBUGhttp-nio-0.0.0.0-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 13
 {executed in 0 msec}
[2024-12-03 14:29:19 INFO http-nio-0.0.0.0-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|7af273d9-3528-498f-b249-e48a4bc99755.jpg |
|-----------------------------------------|

[2024-12-03 14:29:19 DEBUGhttp-nio-0.0.0.0-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 13
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 14:29:19 INFO http-nio-0.0.0.0-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|61              |34      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|60              |33      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|59              |32      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|58              |31      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-03 14:29:19 DEBUGhttp-nio-0.0.0.0-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 13
 {executed in 0 msec}
[2024-12-03 14:29:19 INFO http-nio-0.0.0.0-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|7af273d9-3528-498f-b249-e48a4bc99755.jpg |
|-----------------------------------------|

[2024-12-03 14:29:19 DEBUGhttp-nio-0.0.0.0-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 13
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 14:29:19 INFO http-nio-0.0.0.0-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|61              |34      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|60              |33      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|59              |32      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|58              |31      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-03 14:29:19 DEBUGhttp-nio-0.0.0.0-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 12
 {executed in 0 msec}
[2024-12-03 14:29:19 INFO http-nio-0.0.0.0-8080-exec-8] [jdbc.resultsettable] 
|---------|
|pic      |
|---------|
|aaaa.gif |
|---------|

[2024-12-03 14:29:19 DEBUGhttp-nio-0.0.0.0-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 12
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 14:29:19 INFO http-nio-0.0.0.0-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|24              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|23              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|22              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|21              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-03 14:29:19 DEBUGhttp-nio-0.0.0.0-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 12
 {executed in 0 msec}
[2024-12-03 14:29:19 INFO http-nio-0.0.0.0-8080-exec-8] [jdbc.resultsettable] 
|---------|
|pic      |
|---------|
|aaaa.gif |
|---------|

[2024-12-03 14:29:19 DEBUGhttp-nio-0.0.0.0-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 12
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-03 14:29:19 INFO http-nio-0.0.0.0-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|24              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|23              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|22              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|21              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-03 14:29:19 DEBUGhttp-nio-0.0.0.0-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 11
 {executed in 0 msec}
[2024-12-03 14:29:19 INFO http-nio-0.0.0.0-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|f3f416ca-1a7e-4483-b1db-b2164d76d4f4.png |
|-----------------------------------------|

[2024-12-03 14:29:19 DEBUGhttp-nio-0.0.0.0-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 11
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 14:29:19 INFO http-nio-0.0.0.0-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-03 14:29:19 DEBUGhttp-nio-0.0.0.0-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 11
 {executed in 0 msec}
[2024-12-03 14:29:19 INFO http-nio-0.0.0.0-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|f3f416ca-1a7e-4483-b1db-b2164d76d4f4.png |
|-----------------------------------------|

[2024-12-03 14:29:19 DEBUGhttp-nio-0.0.0.0-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 11
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 14:29:19 INFO http-nio-0.0.0.0-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-03 14:29:19 DEBUGhttp-nio-0.0.0.0-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 10
 {executed in 0 msec}
[2024-12-03 14:29:19 INFO http-nio-0.0.0.0-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|53da69e7-7ae4-4e7b-b95b-a4c4ca01bdc8.jpg |
|-----------------------------------------|

[2024-12-03 14:29:19 DEBUGhttp-nio-0.0.0.0-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 10
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 14:29:19 INFO http-nio-0.0.0.0-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|29              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|28              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|27              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|26              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-03 14:29:19 DEBUGhttp-nio-0.0.0.0-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 10
 {executed in 0 msec}
[2024-12-03 14:29:19 INFO http-nio-0.0.0.0-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|53da69e7-7ae4-4e7b-b95b-a4c4ca01bdc8.jpg |
|-----------------------------------------|

[2024-12-03 14:29:19 DEBUGhttp-nio-0.0.0.0-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 10
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 14:29:19 INFO http-nio-0.0.0.0-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|29              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|28              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|27              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|26              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-03 14:29:19 DEBUGhttp-nio-0.0.0.0-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 9
 {executed in 0 msec}
[2024-12-03 14:29:19 INFO http-nio-0.0.0.0-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|7875594b-3649-4059-a29a-5c09feeab0ad.jpg |
|-----------------------------------------|

[2024-12-03 14:29:19 DEBUGhttp-nio-0.0.0.0-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 9
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 14:29:19 INFO http-nio-0.0.0.0-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-03 14:29:19 DEBUGhttp-nio-0.0.0.0-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 9
 {executed in 0 msec}
[2024-12-03 14:29:19 INFO http-nio-0.0.0.0-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|7875594b-3649-4059-a29a-5c09feeab0ad.jpg |
|-----------------------------------------|

[2024-12-03 14:29:19 DEBUGhttp-nio-0.0.0.0-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 9
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 14:29:19 INFO http-nio-0.0.0.0-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-03 14:29:19 DEBUGhttp-nio-0.0.0.0-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 5
 {executed in 0 msec}
[2024-12-03 14:29:19 INFO http-nio-0.0.0.0-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|675d9f82-0c18-4f6e-91a3-9858129aeb7e.jpg |
|c95cc439-e1e7-40f4-81fa-013b069631ca.jpg |
|f490d2ad-c64d-4006-a74a-8235888e3e87.jpg |
|-----------------------------------------|

[2024-12-03 14:29:19 DEBUGhttp-nio-0.0.0.0-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 5
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 14:29:19 INFO http-nio-0.0.0.0-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-03 14:29:19 DEBUGhttp-nio-0.0.0.0-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 4
 {executed in 0 msec}
[2024-12-03 14:29:19 INFO http-nio-0.0.0.0-8080-exec-8] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-03 14:29:19 DEBUGhttp-nio-0.0.0.0-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 4
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 14:29:19 INFO http-nio-0.0.0.0-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-03 14:29:19 DEBUGhttp-nio-0.0.0.0-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 4
 {executed in 0 msec}
[2024-12-03 14:29:19 INFO http-nio-0.0.0.0-8080-exec-8] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-03 14:29:19 DEBUGhttp-nio-0.0.0.0-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 4
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 14:29:19 INFO http-nio-0.0.0.0-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-03 14:29:22 DEBUGhttp-nio-0.0.0.0-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. DELETE FROM feed_comment
        WHERE feed_comment_id = 73
        AND user_id = 1
 {executed in 2 msec}
[2024-12-03 14:29:22 DEBUGhttp-nio-0.0.0.0-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 14
        ORDER BY A.feed_comment_id DESC
        LIMIT 3, 21
 {executed in 0 msec}
[2024-12-03 14:29:22 INFO http-nio-0.0.0.0-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|69              |1       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-03 14:29:25 INFO http-nio-0.0.0.0-8080-exec-8] [com.green.greengram.feed.model.FeedGetReq] page : 1, size : null, userId : 1
[2024-12-03 14:29:25 INFO http-nio-0.0.0.0-8080-exec-8] [com.green.greengram.feed.FeedController] FeedController > getFeedList > p : FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=1)
[2024-12-03 14:29:25 DEBUGhttp-nio-0.0.0.0-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId,
        C.user_id AS writerUserId,
        if(C.nick_name IS NULL, C.uid, C.nick_name) AS writerNm,
        C.pic AS writerPic,
        contents, location,
        A.created_at AS createdAt,
        if(D.feed_id IS NULL, 0, 1) AS isLike
        from feed A
        JOIN user C
        ON A.writer_user_id = C.user_id
        LEFT JOIN feed_like D
        ON C.user_id = D.user_id
        AND D.user_id = 1
        order BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 0 msec}
[2024-12-03 14:29:25 INFO http-nio-0.0.0.0-8080-exec-8] [jdbc.resultsettable] 
|--------|--------|---------|-----------------------------------------|---------|---------|--------------------|-------|
|feed_id |user_id |writernm |pic                                      |contents |location |created_at          |islike |
|--------|--------|---------|-----------------------------------------|---------|---------|--------------------|-------|
|14      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |ㅇ        |ㅇ        |2024-12-03 11:49:38 |1      |
|14      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |ㅇ        |ㅇ        |2024-12-03 11:49:38 |1      |
|13      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |d        |d        |2024-12-03 11:15:02 |1      |
|13      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |d        |d        |2024-12-03 11:15:02 |1      |
|12      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |ㅁㄴㅇ      |ㅁㄴㅇ      |2024-11-29 16:17:53 |1      |
|12      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |ㅁㄴㅇ      |ㅁㄴㅇ      |2024-11-29 16:17:53 |1      |
|11      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |         |         |2024-11-29 16:12:11 |1      |
|11      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |         |         |2024-11-29 16:12:11 |1      |
|10      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |asd      |asd      |2024-11-29 16:05:52 |1      |
|10      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |asd      |asd      |2024-11-29 16:05:52 |1      |
|9       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |sda      |asd      |2024-11-29 16:00:32 |1      |
|9       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |sda      |asd      |2024-11-29 16:00:32 |1      |
|5       |2       |홍길동      |6d88f58a-0c38-4010-b703-3ccb187071d8.jpg |123      |중앙로      |2024-11-29 10:36:12 |0      |
|4       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |123      |그린컴      |2024-11-28 17:24:40 |1      |
|4       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |123      |그린컴      |2024-11-28 17:24:40 |1      |
|--------|--------|---------|-----------------------------------------|---------|---------|--------------------|-------|

[2024-12-03 14:29:25 DEBUGhttp-nio-0.0.0.0-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 14
 {executed in 0 msec}
[2024-12-03 14:29:25 INFO http-nio-0.0.0.0-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|d3ab1225-6450-4fc4-9f31-eb10a531825a.gif |
|-----------------------------------------|

[2024-12-03 14:29:25 DEBUGhttp-nio-0.0.0.0-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 14
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 14:29:25 INFO http-nio-0.0.0.0-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|72              |4       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|71              |3       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|70              |2       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|69              |1       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-03 14:29:25 DEBUGhttp-nio-0.0.0.0-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 14
 {executed in 0 msec}
[2024-12-03 14:29:25 INFO http-nio-0.0.0.0-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|d3ab1225-6450-4fc4-9f31-eb10a531825a.gif |
|-----------------------------------------|

[2024-12-03 14:29:25 DEBUGhttp-nio-0.0.0.0-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 14
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 14:29:25 INFO http-nio-0.0.0.0-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|72              |4       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|71              |3       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|70              |2       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|69              |1       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-03 14:29:25 DEBUGhttp-nio-0.0.0.0-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 13
 {executed in 0 msec}
[2024-12-03 14:29:25 INFO http-nio-0.0.0.0-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|7af273d9-3528-498f-b249-e48a4bc99755.jpg |
|-----------------------------------------|

[2024-12-03 14:29:25 DEBUGhttp-nio-0.0.0.0-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 13
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 14:29:25 INFO http-nio-0.0.0.0-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|61              |34      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|60              |33      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|59              |32      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|58              |31      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-03 14:29:25 DEBUGhttp-nio-0.0.0.0-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 13
 {executed in 0 msec}
[2024-12-03 14:29:25 INFO http-nio-0.0.0.0-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|7af273d9-3528-498f-b249-e48a4bc99755.jpg |
|-----------------------------------------|

[2024-12-03 14:29:25 DEBUGhttp-nio-0.0.0.0-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 13
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 14:29:25 INFO http-nio-0.0.0.0-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|61              |34      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|60              |33      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|59              |32      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|58              |31      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-03 14:29:25 DEBUGhttp-nio-0.0.0.0-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 12
 {executed in 0 msec}
[2024-12-03 14:29:25 INFO http-nio-0.0.0.0-8080-exec-8] [jdbc.resultsettable] 
|---------|
|pic      |
|---------|
|aaaa.gif |
|---------|

[2024-12-03 14:29:25 DEBUGhttp-nio-0.0.0.0-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 12
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 14:29:25 INFO http-nio-0.0.0.0-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|24              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|23              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|22              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|21              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-03 14:29:25 DEBUGhttp-nio-0.0.0.0-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 12
 {executed in 0 msec}
[2024-12-03 14:29:25 INFO http-nio-0.0.0.0-8080-exec-8] [jdbc.resultsettable] 
|---------|
|pic      |
|---------|
|aaaa.gif |
|---------|

[2024-12-03 14:29:25 DEBUGhttp-nio-0.0.0.0-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 12
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 14:29:25 INFO http-nio-0.0.0.0-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|24              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|23              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|22              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|21              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-03 14:29:25 DEBUGhttp-nio-0.0.0.0-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 11
 {executed in 0 msec}
[2024-12-03 14:29:25 INFO http-nio-0.0.0.0-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|f3f416ca-1a7e-4483-b1db-b2164d76d4f4.png |
|-----------------------------------------|

[2024-12-03 14:29:25 DEBUGhttp-nio-0.0.0.0-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 11
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 14:29:25 INFO http-nio-0.0.0.0-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-03 14:29:25 DEBUGhttp-nio-0.0.0.0-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 11
 {executed in 0 msec}
[2024-12-03 14:29:25 INFO http-nio-0.0.0.0-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|f3f416ca-1a7e-4483-b1db-b2164d76d4f4.png |
|-----------------------------------------|

[2024-12-03 14:29:25 DEBUGhttp-nio-0.0.0.0-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 11
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 14:29:25 INFO http-nio-0.0.0.0-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-03 14:29:25 DEBUGhttp-nio-0.0.0.0-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 10
 {executed in 0 msec}
[2024-12-03 14:29:25 INFO http-nio-0.0.0.0-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|53da69e7-7ae4-4e7b-b95b-a4c4ca01bdc8.jpg |
|-----------------------------------------|

[2024-12-03 14:29:25 DEBUGhttp-nio-0.0.0.0-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 10
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 14:29:25 INFO http-nio-0.0.0.0-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|29              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|28              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|27              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|26              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-03 14:29:25 DEBUGhttp-nio-0.0.0.0-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 10
 {executed in 0 msec}
[2024-12-03 14:29:25 INFO http-nio-0.0.0.0-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|53da69e7-7ae4-4e7b-b95b-a4c4ca01bdc8.jpg |
|-----------------------------------------|

[2024-12-03 14:29:25 DEBUGhttp-nio-0.0.0.0-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 10
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 14:29:25 INFO http-nio-0.0.0.0-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|29              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|28              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|27              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|26              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-03 14:29:25 DEBUGhttp-nio-0.0.0.0-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 9
 {executed in 0 msec}
[2024-12-03 14:29:25 INFO http-nio-0.0.0.0-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|7875594b-3649-4059-a29a-5c09feeab0ad.jpg |
|-----------------------------------------|

[2024-12-03 14:29:25 DEBUGhttp-nio-0.0.0.0-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 9
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 16 msec}
[2024-12-03 14:29:25 INFO http-nio-0.0.0.0-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-03 14:29:25 DEBUGhttp-nio-0.0.0.0-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 9
 {executed in 0 msec}
[2024-12-03 14:29:25 INFO http-nio-0.0.0.0-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|7875594b-3649-4059-a29a-5c09feeab0ad.jpg |
|-----------------------------------------|

[2024-12-03 14:29:25 DEBUGhttp-nio-0.0.0.0-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 9
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 14:29:25 INFO http-nio-0.0.0.0-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-03 14:29:25 DEBUGhttp-nio-0.0.0.0-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 5
 {executed in 0 msec}
[2024-12-03 14:29:25 INFO http-nio-0.0.0.0-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|675d9f82-0c18-4f6e-91a3-9858129aeb7e.jpg |
|c95cc439-e1e7-40f4-81fa-013b069631ca.jpg |
|f490d2ad-c64d-4006-a74a-8235888e3e87.jpg |
|-----------------------------------------|

[2024-12-03 14:29:25 DEBUGhttp-nio-0.0.0.0-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 5
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 14:29:25 INFO http-nio-0.0.0.0-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-03 14:29:25 DEBUGhttp-nio-0.0.0.0-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 4
 {executed in 0 msec}
[2024-12-03 14:29:25 INFO http-nio-0.0.0.0-8080-exec-8] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-03 14:29:25 DEBUGhttp-nio-0.0.0.0-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 4
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 14:29:25 INFO http-nio-0.0.0.0-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-03 14:29:25 DEBUGhttp-nio-0.0.0.0-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 4
 {executed in 0 msec}
[2024-12-03 14:29:25 INFO http-nio-0.0.0.0-8080-exec-8] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-03 14:29:25 DEBUGhttp-nio-0.0.0.0-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 4
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 14:29:25 INFO http-nio-0.0.0.0-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-03 14:44:24 INFO File Watcher] [org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener] Restarting due to 32 class path changes (0 additions, 0 deletions, 32 modifications)
[2024-12-03 14:44:24 INFO Thread-7] [org.apache.coyote.http11.Http11NioProtocol] Stopping ProtocolHandler ["http-nio-0.0.0.0-8080"]
[2024-12-03 14:44:24 INFO Thread-7] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown initiated...
[2024-12-03 14:44:24 INFO Thread-7] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown completed.
[2024-12-03 14:44:24 INFO restartedMain] [com.green.greengram.GreenGramApplication] Starting GreenGramVer2Application using Java 17.0.12 with PID 8712 (D:\BHB\GreenGramVer2\build\classes\java\main started by Administrator in D:\BHB\GreenGramVer2)
[2024-12-03 14:44:24 INFO restartedMain] [com.green.greengram.GreenGramApplication] No active profile set, falling back to 1 default profile: "default"
[2024-12-03 14:44:25 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-03 14:44:25 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-0.0.0.0-8080"]
[2024-12-03 14:44:25 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-03 14:44:25 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-03 14:44:25 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-03 14:44:25 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 212 ms
[2024-12-03 14:44:25 INFO restartedMain] [com.green.greengram.common.MyFileUtils] MyFileUtils - 생성자 D:/BHB/download/greengram_ver2
[2024-12-03 14:44:25 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-03 14:44:25 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-03 14:44:25 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-0.0.0.0-8080"]
[2024-12-03 14:44:25 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-03 14:44:25 INFO restartedMain] [com.green.greengram.GreenGramApplication] Started GreenGramVer2Application in 0.367 seconds (process running for 914.524)
[2024-12-03 14:44:25 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener] Condition evaluation unchanged
[2024-12-03 14:51:14 INFO File Watcher] [org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener] Restarting due to 2 class path changes (0 additions, 0 deletions, 2 modifications)
[2024-12-03 14:51:14 INFO Thread-11] [org.apache.coyote.http11.Http11NioProtocol] Stopping ProtocolHandler ["http-nio-0.0.0.0-8080"]
[2024-12-03 14:51:15 INFO restartedMain] [com.green.greengram.GreenGramApplication] Starting GreenGramVer2Application using Java 17.0.12 with PID 8712 (D:\BHB\GreenGramVer2\build\classes\java\main started by Administrator in D:\BHB\GreenGramVer2)
[2024-12-03 14:51:15 INFO restartedMain] [com.green.greengram.GreenGramApplication] No active profile set, falling back to 1 default profile: "default"
[2024-12-03 14:51:15 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-03 14:51:15 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-0.0.0.0-8080"]
[2024-12-03 14:51:15 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-03 14:51:15 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-03 14:51:15 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-03 14:51:15 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 188 ms
[2024-12-03 14:51:15 INFO restartedMain] [com.green.greengram.common.MyFileUtils] MyFileUtils - 생성자 D:/BHB/download/greengram_ver2
[2024-12-03 14:51:15 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-03 14:51:15 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-03 14:51:15 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-0.0.0.0-8080"]
[2024-12-03 14:51:15 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-03 14:51:15 INFO restartedMain] [com.green.greengram.GreenGramApplication] Started GreenGramVer2Application in 0.32 seconds (process running for 1324.736)
[2024-12-03 14:51:15 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener] Condition evaluation unchanged
[2024-12-03 14:59:39 INFO restartedMain] [com.green.greengram.GreenGramApplication] Starting GreenGramVer2Application using Java 17.0.12 with PID 4088 (D:\BHB\GreenGramVer2\build\classes\java\main started by Administrator in D:\BHB\GreenGramVer2)
[2024-12-03 14:59:39 INFO restartedMain] [com.green.greengram.GreenGramApplication] No active profile set, falling back to 1 default profile: "default"
[2024-12-03 14:59:39 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-03 14:59:39 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-03 14:59:39 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-03 14:59:39 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-0.0.0.0-8080"]
[2024-12-03 14:59:39 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-03 14:59:39 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-03 14:59:40 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-03 14:59:40 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 788 ms
[2024-12-03 14:59:40 INFO restartedMain] [com.green.greengram.common.MyFileUtils] MyFileUtils - 생성자 D:/BHB/download/greengram_ver2
[2024-12-03 14:59:40 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-03 14:59:40 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-0.0.0.0-8080"]
[2024-12-03 14:59:40 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-03 14:59:40 INFO restartedMain] [com.green.greengram.GreenGramApplication] Started GreenGramVer2Application in 1.659 seconds (process running for 2.007)
[2024-12-03 14:59:43 INFO http-nio-0.0.0.0-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring DispatcherServlet 'dispatcherServlet'
[2024-12-03 14:59:43 INFO http-nio-0.0.0.0-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[2024-12-03 14:59:43 INFO http-nio-0.0.0.0-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Completed initialization in 1 ms
[2024-12-03 15:00:21 INFO File Watcher] [org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener] Restarting due to 36 class path changes (0 additions, 22 deletions, 14 modifications)
[2024-12-03 15:00:21 INFO Thread-5] [org.apache.coyote.http11.Http11NioProtocol] Stopping ProtocolHandler ["http-nio-0.0.0.0-8080"]
[2024-12-03 15:00:21 INFO restartedMain] [com.green.greengram.GreenGramApplication] Starting GreenGramVer2Application using Java 17.0.12 with PID 4088 (D:\BHB\GreenGramVer2\build\classes\java\main started by Administrator in D:\BHB\GreenGramVer2)
[2024-12-03 15:00:21 INFO restartedMain] [com.green.greengram.GreenGramApplication] No active profile set, falling back to 1 default profile: "default"
[2024-12-03 15:00:21 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-03 15:00:21 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-0.0.0.0-8080"]
[2024-12-03 15:00:21 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-03 15:00:21 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-03 15:00:21 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-03 15:00:21 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 190 ms
[2024-12-03 15:00:21 INFO restartedMain] [com.green.greengram.common.MyFileUtils] MyFileUtils - 생성자 D:/BHB/download/greengram_ver2
[2024-12-03 15:00:22 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-03 15:00:22 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-0.0.0.0-8080"]
[2024-12-03 15:00:22 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-03 15:00:22 INFO restartedMain] [com.green.greengram.GreenGramApplication] Started GreenGramVer2Application in 0.346 seconds (process running for 43.566)
[2024-12-03 15:00:22 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener] Condition evaluation unchanged
[2024-12-03 15:00:27 INFO restartedMain] [com.green.greengram.GreenGramApplication] Starting GreenGramVer2Application using Java 17.0.12 with PID 5496 (D:\BHB\GreenGramVer2\build\classes\java\main started by Administrator in D:\BHB\GreenGramVer2)
[2024-12-03 15:00:27 INFO restartedMain] [com.green.greengram.GreenGramApplication] No active profile set, falling back to 1 default profile: "default"
[2024-12-03 15:00:27 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-03 15:00:27 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-03 15:00:28 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-03 15:00:28 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-0.0.0.0-8080"]
[2024-12-03 15:00:28 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-03 15:00:28 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-03 15:00:28 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-03 15:00:28 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 784 ms
[2024-12-03 15:00:28 INFO restartedMain] [com.green.greengram.common.MyFileUtils] MyFileUtils - 생성자 D:/BHB/download/greengram_ver2
[2024-12-03 15:00:28 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-03 15:00:28 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-03 15:00:28 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-0.0.0.0-8080"]
[2024-12-03 15:00:28 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-03 15:00:28 INFO restartedMain] [com.green.greengram.GreenGramApplication] Started GreenGramVer2Application in 1.643 seconds (process running for 1.993)
[2024-12-03 15:00:30 INFO http-nio-0.0.0.0-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring DispatcherServlet 'dispatcherServlet'
[2024-12-03 15:00:30 INFO http-nio-0.0.0.0-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[2024-12-03 15:00:30 INFO http-nio-0.0.0.0-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Completed initialization in 0 ms
[2024-12-03 15:00:30 INFO http-nio-0.0.0.0-8080-exec-3] [com.green.greengram.feed.model.FeedGetReq] page : 1, size : null, userId : 1
[2024-12-03 15:00:30 INFO http-nio-0.0.0.0-8080-exec-3] [com.green.greengram.feed.FeedController] FeedController > getFeedList > p : FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=1)
[2024-12-03 15:00:30 INFO http-nio-0.0.0.0-8080-exec-3] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Starting...
[2024-12-03 15:00:30 INFO http-nio-0.0.0.0-8080-exec-3] [com.zaxxer.hikari.pool.HikariPool] HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@470193c6
[2024-12-03 15:00:30 INFO http-nio-0.0.0.0-8080-exec-3] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Start completed.
[2024-12-03 15:00:30 DEBUGhttp-nio-0.0.0.0-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId,
        C.user_id AS writerUserId,
        if(C.nick_name IS NULL, C.uid, C.nick_name) AS writerNm,
        C.pic AS writerPic,
        contents, location,
        A.created_at AS createdAt,
        if(D.feed_id IS NULL, 0, 1) AS isLike
        from feed A
        JOIN user C
        ON A.writer_user_id = C.user_id
        LEFT JOIN feed_like D
        ON C.user_id = D.user_id
        AND D.user_id = 1
        order BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 0 msec}
[2024-12-03 15:00:30 INFO http-nio-0.0.0.0-8080-exec-3] [jdbc.resultsettable] 
|--------|--------|---------|-----------------------------------------|---------|---------|--------------------|-------|
|feed_id |user_id |writernm |pic                                      |contents |location |created_at          |islike |
|--------|--------|---------|-----------------------------------------|---------|---------|--------------------|-------|
|14      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |ㅇ        |ㅇ        |2024-12-03 11:49:38 |1      |
|14      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |ㅇ        |ㅇ        |2024-12-03 11:49:38 |1      |
|13      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |d        |d        |2024-12-03 11:15:02 |1      |
|13      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |d        |d        |2024-12-03 11:15:02 |1      |
|12      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |ㅁㄴㅇ      |ㅁㄴㅇ      |2024-11-29 16:17:53 |1      |
|12      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |ㅁㄴㅇ      |ㅁㄴㅇ      |2024-11-29 16:17:53 |1      |
|11      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |         |         |2024-11-29 16:12:11 |1      |
|11      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |         |         |2024-11-29 16:12:11 |1      |
|10      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |asd      |asd      |2024-11-29 16:05:52 |1      |
|10      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |asd      |asd      |2024-11-29 16:05:52 |1      |
|9       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |sda      |asd      |2024-11-29 16:00:32 |1      |
|9       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |sda      |asd      |2024-11-29 16:00:32 |1      |
|5       |2       |홍길동      |6d88f58a-0c38-4010-b703-3ccb187071d8.jpg |123      |중앙로      |2024-11-29 10:36:12 |0      |
|4       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |123      |그린컴      |2024-11-28 17:24:40 |1      |
|4       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |123      |그린컴      |2024-11-28 17:24:40 |1      |
|--------|--------|---------|-----------------------------------------|---------|---------|--------------------|-------|

[2024-12-03 15:00:30 DEBUGhttp-nio-0.0.0.0-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 14
 {executed in 0 msec}
[2024-12-03 15:00:30 INFO http-nio-0.0.0.0-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|d3ab1225-6450-4fc4-9f31-eb10a531825a.gif |
|-----------------------------------------|

[2024-12-03 15:00:30 DEBUGhttp-nio-0.0.0.0-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 14
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 15:00:30 INFO http-nio-0.0.0.0-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|72              |4       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|71              |3       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|70              |2       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|69              |1       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-03 15:00:30 DEBUGhttp-nio-0.0.0.0-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 14
 {executed in 0 msec}
[2024-12-03 15:00:30 INFO http-nio-0.0.0.0-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|d3ab1225-6450-4fc4-9f31-eb10a531825a.gif |
|-----------------------------------------|

[2024-12-03 15:00:30 DEBUGhttp-nio-0.0.0.0-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 14
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 15:00:30 INFO http-nio-0.0.0.0-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|72              |4       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|71              |3       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|70              |2       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|69              |1       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-03 15:00:30 DEBUGhttp-nio-0.0.0.0-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 13
 {executed in 0 msec}
[2024-12-03 15:00:30 INFO http-nio-0.0.0.0-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|7af273d9-3528-498f-b249-e48a4bc99755.jpg |
|-----------------------------------------|

[2024-12-03 15:00:30 DEBUGhttp-nio-0.0.0.0-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 13
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 15:00:30 INFO http-nio-0.0.0.0-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|61              |34      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|60              |33      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|59              |32      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|58              |31      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-03 15:00:30 DEBUGhttp-nio-0.0.0.0-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 13
 {executed in 0 msec}
[2024-12-03 15:00:30 INFO http-nio-0.0.0.0-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|7af273d9-3528-498f-b249-e48a4bc99755.jpg |
|-----------------------------------------|

[2024-12-03 15:00:30 DEBUGhttp-nio-0.0.0.0-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 13
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-03 15:00:30 INFO http-nio-0.0.0.0-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|61              |34      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|60              |33      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|59              |32      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|58              |31      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-03 15:00:30 DEBUGhttp-nio-0.0.0.0-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 12
 {executed in 1 msec}
[2024-12-03 15:00:30 INFO http-nio-0.0.0.0-8080-exec-3] [jdbc.resultsettable] 
|---------|
|pic      |
|---------|
|aaaa.gif |
|---------|

[2024-12-03 15:00:30 DEBUGhttp-nio-0.0.0.0-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 12
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 15:00:30 INFO http-nio-0.0.0.0-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|24              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|23              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|22              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|21              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-03 15:00:30 DEBUGhttp-nio-0.0.0.0-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 12
 {executed in 0 msec}
[2024-12-03 15:00:30 INFO http-nio-0.0.0.0-8080-exec-3] [jdbc.resultsettable] 
|---------|
|pic      |
|---------|
|aaaa.gif |
|---------|

[2024-12-03 15:00:30 DEBUGhttp-nio-0.0.0.0-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 12
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-03 15:00:30 INFO http-nio-0.0.0.0-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|24              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|23              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|22              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|21              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-03 15:00:30 DEBUGhttp-nio-0.0.0.0-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 11
 {executed in 0 msec}
[2024-12-03 15:00:30 INFO http-nio-0.0.0.0-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|f3f416ca-1a7e-4483-b1db-b2164d76d4f4.png |
|-----------------------------------------|

[2024-12-03 15:00:30 DEBUGhttp-nio-0.0.0.0-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 11
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 15:00:30 INFO http-nio-0.0.0.0-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-03 15:00:30 DEBUGhttp-nio-0.0.0.0-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 11
 {executed in 0 msec}
[2024-12-03 15:00:30 INFO http-nio-0.0.0.0-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|f3f416ca-1a7e-4483-b1db-b2164d76d4f4.png |
|-----------------------------------------|

[2024-12-03 15:00:30 DEBUGhttp-nio-0.0.0.0-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 11
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 15:00:30 INFO http-nio-0.0.0.0-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-03 15:00:30 DEBUGhttp-nio-0.0.0.0-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 10
 {executed in 0 msec}
[2024-12-03 15:00:30 INFO http-nio-0.0.0.0-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|53da69e7-7ae4-4e7b-b95b-a4c4ca01bdc8.jpg |
|-----------------------------------------|

[2024-12-03 15:00:30 DEBUGhttp-nio-0.0.0.0-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 10
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 15:00:30 INFO http-nio-0.0.0.0-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|29              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|28              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|27              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|26              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-03 15:00:30 DEBUGhttp-nio-0.0.0.0-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 10
 {executed in 0 msec}
[2024-12-03 15:00:30 INFO http-nio-0.0.0.0-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|53da69e7-7ae4-4e7b-b95b-a4c4ca01bdc8.jpg |
|-----------------------------------------|

[2024-12-03 15:00:30 DEBUGhttp-nio-0.0.0.0-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 10
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 15:00:30 INFO http-nio-0.0.0.0-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|29              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|28              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|27              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|26              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-03 15:00:30 DEBUGhttp-nio-0.0.0.0-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 9
 {executed in 0 msec}
[2024-12-03 15:00:30 INFO http-nio-0.0.0.0-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|7875594b-3649-4059-a29a-5c09feeab0ad.jpg |
|-----------------------------------------|

[2024-12-03 15:00:30 DEBUGhttp-nio-0.0.0.0-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 9
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 15:00:30 INFO http-nio-0.0.0.0-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-03 15:00:30 DEBUGhttp-nio-0.0.0.0-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 9
 {executed in 0 msec}
[2024-12-03 15:00:30 INFO http-nio-0.0.0.0-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|7875594b-3649-4059-a29a-5c09feeab0ad.jpg |
|-----------------------------------------|

[2024-12-03 15:00:30 DEBUGhttp-nio-0.0.0.0-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 9
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 15:00:30 INFO http-nio-0.0.0.0-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-03 15:00:30 DEBUGhttp-nio-0.0.0.0-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 5
 {executed in 0 msec}
[2024-12-03 15:00:30 INFO http-nio-0.0.0.0-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|675d9f82-0c18-4f6e-91a3-9858129aeb7e.jpg |
|c95cc439-e1e7-40f4-81fa-013b069631ca.jpg |
|f490d2ad-c64d-4006-a74a-8235888e3e87.jpg |
|-----------------------------------------|

[2024-12-03 15:00:30 DEBUGhttp-nio-0.0.0.0-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 5
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 15:00:30 INFO http-nio-0.0.0.0-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-03 15:00:30 DEBUGhttp-nio-0.0.0.0-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 4
 {executed in 0 msec}
[2024-12-03 15:00:30 INFO http-nio-0.0.0.0-8080-exec-3] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-03 15:00:30 DEBUGhttp-nio-0.0.0.0-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 4
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 15:00:30 INFO http-nio-0.0.0.0-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-03 15:00:30 DEBUGhttp-nio-0.0.0.0-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 4
 {executed in 0 msec}
[2024-12-03 15:00:30 INFO http-nio-0.0.0.0-8080-exec-3] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-03 15:00:30 DEBUGhttp-nio-0.0.0.0-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 4
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 15:00:30 INFO http-nio-0.0.0.0-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-03 15:00:33 WARN http-nio-0.0.0.0-8080-exec-6] [org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver] Resolved [org.springframework.web.bind.MethodArgumentNotValidException: Validation failed for argument [0] in public com.green.greengram.common.model.ResultResponse<com.green.greengram.feed.comment.model.FeedCommentGetRes> com.green.greengram.feed.comment.FeedCommentController.getFeedCommentList(com.green.greengram.feed.comment.model.FeedCommentGetReq): [Field error in object 'feedCommentGetReq' on field 'page': rejected value [null]; codes [typeMismatch.feedCommentGetReq.page,typeMismatch.page,typeMismatch.int,typeMismatch]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [feedCommentGetReq.page,page]; arguments []; default message [page]]; default message [Failed to convert value of type 'null' to required type 'int'; Failed to convert from type [null] to type [@io.swagger.v3.oas.annotations.media.Schema int] for value [null]]] ]
[2024-12-03 15:00:39 WARN http-nio-0.0.0.0-8080-exec-4] [org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver] Resolved [org.springframework.web.bind.MethodArgumentNotValidException: Validation failed for argument [0] in public com.green.greengram.common.model.ResultResponse<com.green.greengram.feed.comment.model.FeedCommentGetRes> com.green.greengram.feed.comment.FeedCommentController.getFeedCommentList(com.green.greengram.feed.comment.model.FeedCommentGetReq): [Field error in object 'feedCommentGetReq' on field 'page': rejected value [null]; codes [typeMismatch.feedCommentGetReq.page,typeMismatch.page,typeMismatch.int,typeMismatch]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [feedCommentGetReq.page,page]; arguments []; default message [page]]; default message [Failed to convert value of type 'null' to required type 'int'; Failed to convert from type [null] to type [@io.swagger.v3.oas.annotations.media.Schema int] for value [null]]] ]
[2024-12-03 15:00:53 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown initiated...
[2024-12-03 15:00:53 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown completed.
[2024-12-03 15:00:55 INFO restartedMain] [com.green.greengram.GreenGramApplication] Starting GreenGramVer2Application using Java 17.0.12 with PID 1480 (D:\BHB\GreenGramVer2\build\classes\java\main started by Administrator in D:\BHB\GreenGramVer2)
[2024-12-03 15:00:55 INFO restartedMain] [com.green.greengram.GreenGramApplication] No active profile set, falling back to 1 default profile: "default"
[2024-12-03 15:00:55 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-03 15:00:55 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-03 15:00:55 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-03 15:00:55 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-0.0.0.0-8080"]
[2024-12-03 15:00:55 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-03 15:00:55 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-03 15:00:55 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-03 15:00:55 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 858 ms
[2024-12-03 15:00:55 INFO restartedMain] [com.green.greengram.common.MyFileUtils] MyFileUtils - 생성자 D:/BHB/download/greengram_ver2
[2024-12-03 15:00:56 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-03 15:00:56 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-03 15:00:56 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-0.0.0.0-8080"]
[2024-12-03 15:00:56 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-03 15:00:56 INFO restartedMain] [com.green.greengram.GreenGramApplication] Started GreenGramVer2Application in 1.744 seconds (process running for 2.091)
[2024-12-03 15:01:03 INFO restartedMain] [com.green.greengram.GreenGramApplication] Starting GreenGramVer2Application using Java 17.0.12 with PID 6316 (D:\BHB\GreenGramVer2\build\classes\java\main started by Administrator in D:\BHB\GreenGramVer2)
[2024-12-03 15:01:03 INFO restartedMain] [com.green.greengram.GreenGramApplication] No active profile set, falling back to 1 default profile: "default"
[2024-12-03 15:01:03 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-03 15:01:03 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-03 15:01:04 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-03 15:01:04 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-0.0.0.0-8080"]
[2024-12-03 15:01:04 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-03 15:01:04 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-03 15:01:04 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-03 15:01:04 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 815 ms
[2024-12-03 15:01:04 INFO restartedMain] [com.green.greengram.common.MyFileUtils] MyFileUtils - 생성자 D:/BHB/download/greengram_ver2
[2024-12-03 15:01:04 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-03 15:01:04 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-03 15:01:04 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-0.0.0.0-8080"]
[2024-12-03 15:01:04 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-03 15:01:04 INFO restartedMain] [com.green.greengram.GreenGramApplication] Started GreenGramVer2Application in 1.658 seconds (process running for 1.997)
[2024-12-03 15:01:07 INFO http-nio-0.0.0.0-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring DispatcherServlet 'dispatcherServlet'
[2024-12-03 15:01:07 INFO http-nio-0.0.0.0-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[2024-12-03 15:01:07 INFO http-nio-0.0.0.0-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Completed initialization in 1 ms
[2024-12-03 15:01:07 INFO http-nio-0.0.0.0-8080-exec-6] [com.green.greengram.feed.model.FeedGetReq] page : 1, size : null, userId : 1
[2024-12-03 15:01:07 INFO http-nio-0.0.0.0-8080-exec-6] [com.green.greengram.feed.FeedController] FeedController > getFeedList > p : FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=1)
[2024-12-03 15:01:07 INFO http-nio-0.0.0.0-8080-exec-6] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Starting...
[2024-12-03 15:01:07 INFO http-nio-0.0.0.0-8080-exec-6] [com.zaxxer.hikari.pool.HikariPool] HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@4f18cad1
[2024-12-03 15:01:07 INFO http-nio-0.0.0.0-8080-exec-6] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Start completed.
[2024-12-03 15:01:07 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId,
        C.user_id AS writerUserId,
        if(C.nick_name IS NULL, C.uid, C.nick_name) AS writerNm,
        C.pic AS writerPic,
        contents, location,
        A.created_at AS createdAt,
        if(D.feed_id IS NULL, 0, 1) AS isLike
        from feed A
        JOIN user C
        ON A.writer_user_id = C.user_id
        LEFT JOIN feed_like D
        ON C.user_id = D.user_id
        AND D.user_id = 1
        order BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 1 msec}
[2024-12-03 15:01:07 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|--------|--------|---------|-----------------------------------------|---------|---------|--------------------|-------|
|feed_id |user_id |writernm |pic                                      |contents |location |created_at          |islike |
|--------|--------|---------|-----------------------------------------|---------|---------|--------------------|-------|
|14      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |ㅇ        |ㅇ        |2024-12-03 11:49:38 |1      |
|14      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |ㅇ        |ㅇ        |2024-12-03 11:49:38 |1      |
|13      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |d        |d        |2024-12-03 11:15:02 |1      |
|13      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |d        |d        |2024-12-03 11:15:02 |1      |
|12      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |ㅁㄴㅇ      |ㅁㄴㅇ      |2024-11-29 16:17:53 |1      |
|12      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |ㅁㄴㅇ      |ㅁㄴㅇ      |2024-11-29 16:17:53 |1      |
|11      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |         |         |2024-11-29 16:12:11 |1      |
|11      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |         |         |2024-11-29 16:12:11 |1      |
|10      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |asd      |asd      |2024-11-29 16:05:52 |1      |
|10      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |asd      |asd      |2024-11-29 16:05:52 |1      |
|9       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |sda      |asd      |2024-11-29 16:00:32 |1      |
|9       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |sda      |asd      |2024-11-29 16:00:32 |1      |
|5       |2       |홍길동      |6d88f58a-0c38-4010-b703-3ccb187071d8.jpg |123      |중앙로      |2024-11-29 10:36:12 |0      |
|4       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |123      |그린컴      |2024-11-28 17:24:40 |1      |
|4       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |123      |그린컴      |2024-11-28 17:24:40 |1      |
|--------|--------|---------|-----------------------------------------|---------|---------|--------------------|-------|

[2024-12-03 15:01:07 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 14
 {executed in 1 msec}
[2024-12-03 15:01:07 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|d3ab1225-6450-4fc4-9f31-eb10a531825a.gif |
|-----------------------------------------|

[2024-12-03 15:01:07 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 14
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 15:01:07 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|72              |4       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|71              |3       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|70              |2       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|69              |1       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-03 15:01:07 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 14
 {executed in 0 msec}
[2024-12-03 15:01:07 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|d3ab1225-6450-4fc4-9f31-eb10a531825a.gif |
|-----------------------------------------|

[2024-12-03 15:01:07 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 14
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 15:01:07 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|72              |4       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|71              |3       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|70              |2       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|69              |1       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-03 15:01:07 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 13
 {executed in 1 msec}
[2024-12-03 15:01:07 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|7af273d9-3528-498f-b249-e48a4bc99755.jpg |
|-----------------------------------------|

[2024-12-03 15:01:07 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 13
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-03 15:01:07 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|61              |34      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|60              |33      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|59              |32      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|58              |31      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-03 15:01:07 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 13
 {executed in 0 msec}
[2024-12-03 15:01:07 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|7af273d9-3528-498f-b249-e48a4bc99755.jpg |
|-----------------------------------------|

[2024-12-03 15:01:07 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 13
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-03 15:01:07 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|61              |34      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|60              |33      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|59              |32      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|58              |31      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-03 15:01:07 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 12
 {executed in 0 msec}
[2024-12-03 15:01:07 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|---------|
|pic      |
|---------|
|aaaa.gif |
|---------|

[2024-12-03 15:01:07 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 12
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 15:01:07 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|24              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|23              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|22              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|21              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-03 15:01:07 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 12
 {executed in 0 msec}
[2024-12-03 15:01:07 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|---------|
|pic      |
|---------|
|aaaa.gif |
|---------|

[2024-12-03 15:01:07 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 12
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 15:01:07 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|24              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|23              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|22              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|21              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-03 15:01:07 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 11
 {executed in 0 msec}
[2024-12-03 15:01:07 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|f3f416ca-1a7e-4483-b1db-b2164d76d4f4.png |
|-----------------------------------------|

[2024-12-03 15:01:07 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 11
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-03 15:01:07 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-03 15:01:07 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 11
 {executed in 0 msec}
[2024-12-03 15:01:07 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|f3f416ca-1a7e-4483-b1db-b2164d76d4f4.png |
|-----------------------------------------|

[2024-12-03 15:01:07 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 11
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 15:01:07 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-03 15:01:07 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 10
 {executed in 0 msec}
[2024-12-03 15:01:07 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|53da69e7-7ae4-4e7b-b95b-a4c4ca01bdc8.jpg |
|-----------------------------------------|

[2024-12-03 15:01:07 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 10
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-03 15:01:07 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|29              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|28              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|27              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|26              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-03 15:01:07 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 10
 {executed in 1 msec}
[2024-12-03 15:01:07 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|53da69e7-7ae4-4e7b-b95b-a4c4ca01bdc8.jpg |
|-----------------------------------------|

[2024-12-03 15:01:07 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 10
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 15:01:07 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|29              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|28              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|27              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|26              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-03 15:01:07 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 9
 {executed in 0 msec}
[2024-12-03 15:01:07 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|7875594b-3649-4059-a29a-5c09feeab0ad.jpg |
|-----------------------------------------|

[2024-12-03 15:01:07 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 9
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-03 15:01:07 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-03 15:01:07 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 9
 {executed in 0 msec}
[2024-12-03 15:01:07 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|7875594b-3649-4059-a29a-5c09feeab0ad.jpg |
|-----------------------------------------|

[2024-12-03 15:01:07 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 9
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-03 15:01:07 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-03 15:01:07 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 5
 {executed in 0 msec}
[2024-12-03 15:01:07 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|675d9f82-0c18-4f6e-91a3-9858129aeb7e.jpg |
|c95cc439-e1e7-40f4-81fa-013b069631ca.jpg |
|f490d2ad-c64d-4006-a74a-8235888e3e87.jpg |
|-----------------------------------------|

[2024-12-03 15:01:07 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 5
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-03 15:01:07 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-03 15:01:07 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 4
 {executed in 0 msec}
[2024-12-03 15:01:07 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-03 15:01:07 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 4
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-03 15:01:07 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-03 15:01:07 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 4
 {executed in 0 msec}
[2024-12-03 15:01:07 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-03 15:01:07 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 4
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-03 15:01:07 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-03 15:01:09 WARN http-nio-0.0.0.0-8080-exec-9] [org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver] Resolved [org.springframework.web.bind.MethodArgumentNotValidException: Validation failed for argument [0] in public com.green.greengram.common.model.ResultResponse<com.green.greengram.feed.comment.model.FeedCommentGetRes> com.green.greengram.feed.comment.FeedCommentController.getFeedCommentList(com.green.greengram.feed.comment.model.FeedCommentGetReq): [Field error in object 'feedCommentGetReq' on field 'page': rejected value [null]; codes [typeMismatch.feedCommentGetReq.page,typeMismatch.page,typeMismatch.int,typeMismatch]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [feedCommentGetReq.page,page]; arguments []; default message [page]]; default message [Failed to convert value of type 'null' to required type 'int'; Failed to convert from type [null] to type [@io.swagger.v3.oas.annotations.media.Schema int] for value [null]]] ]
[2024-12-03 15:01:12 WARN http-nio-0.0.0.0-8080-exec-10] [org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver] Resolved [org.springframework.web.bind.MethodArgumentNotValidException: Validation failed for argument [0] in public com.green.greengram.common.model.ResultResponse<com.green.greengram.feed.comment.model.FeedCommentGetRes> com.green.greengram.feed.comment.FeedCommentController.getFeedCommentList(com.green.greengram.feed.comment.model.FeedCommentGetReq): [Field error in object 'feedCommentGetReq' on field 'page': rejected value [null]; codes [typeMismatch.feedCommentGetReq.page,typeMismatch.page,typeMismatch.int,typeMismatch]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [feedCommentGetReq.page,page]; arguments []; default message [page]]; default message [Failed to convert value of type 'null' to required type 'int'; Failed to convert from type [null] to type [@io.swagger.v3.oas.annotations.media.Schema int] for value [null]]] ]
[2024-12-03 15:04:10 INFO File Watcher] [org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener] Restarting due to 44 class path changes (18 additions, 14 deletions, 12 modifications)
[2024-12-03 15:04:10 INFO Thread-5] [org.apache.coyote.http11.Http11NioProtocol] Stopping ProtocolHandler ["http-nio-0.0.0.0-8080"]
[2024-12-03 15:04:11 INFO Thread-5] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown initiated...
[2024-12-03 15:04:11 INFO Thread-5] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown completed.
[2024-12-03 15:04:11 INFO restartedMain] [com.green.greengram.GreenGramApplication] Starting GreenGramVer2Application using Java 17.0.12 with PID 6316 (D:\BHB\GreenGramVer2\build\classes\java\main started by Administrator in D:\BHB\GreenGramVer2)
[2024-12-03 15:04:11 INFO restartedMain] [com.green.greengram.GreenGramApplication] No active profile set, falling back to 1 default profile: "default"
[2024-12-03 15:04:11 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-03 15:04:11 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-0.0.0.0-8080"]
[2024-12-03 15:04:11 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-03 15:04:11 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-03 15:04:11 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-03 15:04:11 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 199 ms
[2024-12-03 15:04:11 INFO restartedMain] [com.green.greengram.common.MyFileUtils] MyFileUtils - 생성자 D:/BHB/download/greengram_ver2
[2024-12-03 15:04:11 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-03 15:04:11 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-0.0.0.0-8080"]
[2024-12-03 15:04:11 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-03 15:04:11 INFO restartedMain] [com.green.greengram.GreenGramApplication] Started GreenGramVer2Application in 0.34 seconds (process running for 188.386)
[2024-12-03 15:04:11 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener] Condition evaluation unchanged
[2024-12-03 15:04:34 INFO File Watcher] [org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener] Restarting due to 44 class path changes (14 additions, 18 deletions, 12 modifications)
[2024-12-03 15:04:34 INFO Thread-7] [org.apache.coyote.http11.Http11NioProtocol] Stopping ProtocolHandler ["http-nio-0.0.0.0-8080"]
[2024-12-03 15:04:34 INFO restartedMain] [com.green.greengram.GreenGramApplication] Starting GreenGramVer2Application using Java 17.0.12 with PID 6316 (D:\BHB\GreenGramVer2\build\classes\java\main started by Administrator in D:\BHB\GreenGramVer2)
[2024-12-03 15:04:34 INFO restartedMain] [com.green.greengram.GreenGramApplication] No active profile set, falling back to 1 default profile: "default"
[2024-12-03 15:04:34 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-03 15:04:34 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-0.0.0.0-8080"]
[2024-12-03 15:04:34 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-03 15:04:34 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-03 15:04:34 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-03 15:04:34 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 197 ms
[2024-12-03 15:04:34 INFO restartedMain] [com.green.greengram.common.MyFileUtils] MyFileUtils - 생성자 D:/BHB/download/greengram_ver2
[2024-12-03 15:04:34 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-03 15:04:34 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-03 15:04:34 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-0.0.0.0-8080"]
[2024-12-03 15:04:34 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-03 15:04:34 INFO restartedMain] [com.green.greengram.GreenGramApplication] Started GreenGramVer2Application in 0.322 seconds (process running for 211.54)
[2024-12-03 15:04:34 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener] Condition evaluation unchanged
[2024-12-03 15:04:42 INFO http-nio-0.0.0.0-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring DispatcherServlet 'dispatcherServlet'
[2024-12-03 15:04:42 INFO http-nio-0.0.0.0-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[2024-12-03 15:04:42 INFO http-nio-0.0.0.0-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Completed initialization in 0 ms
[2024-12-03 15:04:43 INFO http-nio-0.0.0.0-8080-exec-6] [com.green.greengram.feed.model.FeedGetReq] page : 1, size : null, userId : 1
[2024-12-03 15:04:43 INFO http-nio-0.0.0.0-8080-exec-6] [com.green.greengram.feed.FeedController] FeedController > getFeedList > p : FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=1)
[2024-12-03 15:04:43 INFO http-nio-0.0.0.0-8080-exec-6] [com.zaxxer.hikari.HikariDataSource] HikariPool-2 - Starting...
[2024-12-03 15:04:43 INFO http-nio-0.0.0.0-8080-exec-6] [com.zaxxer.hikari.pool.HikariPool] HikariPool-2 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@34bedd6f
[2024-12-03 15:04:43 INFO http-nio-0.0.0.0-8080-exec-6] [com.zaxxer.hikari.HikariDataSource] HikariPool-2 - Start completed.
[2024-12-03 15:04:43 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT A.feed_id AS feedId,
        C.user_id AS writerUserId,
        if(C.nick_name IS NULL, C.uid, C.nick_name) AS writerNm,
        C.pic AS writerPic,
        contents, location,
        A.created_at AS createdAt,
        if(D.feed_id IS NULL, 0, 1) AS isLike
        from feed A
        JOIN user C
        ON A.writer_user_id = C.user_id
        LEFT JOIN feed_like D
        ON C.user_id = D.user_id
        AND D.user_id = 1
        order BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 0 msec}
[2024-12-03 15:04:43 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|--------|--------|---------|-----------------------------------------|---------|---------|--------------------|-------|
|feed_id |user_id |writernm |pic                                      |contents |location |created_at          |islike |
|--------|--------|---------|-----------------------------------------|---------|---------|--------------------|-------|
|14      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |ㅇ        |ㅇ        |2024-12-03 11:49:38 |1      |
|14      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |ㅇ        |ㅇ        |2024-12-03 11:49:38 |1      |
|13      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |d        |d        |2024-12-03 11:15:02 |1      |
|13      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |d        |d        |2024-12-03 11:15:02 |1      |
|12      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |ㅁㄴㅇ      |ㅁㄴㅇ      |2024-11-29 16:17:53 |1      |
|12      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |ㅁㄴㅇ      |ㅁㄴㅇ      |2024-11-29 16:17:53 |1      |
|11      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |         |         |2024-11-29 16:12:11 |1      |
|11      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |         |         |2024-11-29 16:12:11 |1      |
|10      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |asd      |asd      |2024-11-29 16:05:52 |1      |
|10      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |asd      |asd      |2024-11-29 16:05:52 |1      |
|9       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |sda      |asd      |2024-11-29 16:00:32 |1      |
|9       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |sda      |asd      |2024-11-29 16:00:32 |1      |
|5       |2       |홍길동      |6d88f58a-0c38-4010-b703-3ccb187071d8.jpg |123      |중앙로      |2024-11-29 10:36:12 |0      |
|4       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |123      |그린컴      |2024-11-28 17:24:40 |1      |
|4       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |123      |그린컴      |2024-11-28 17:24:40 |1      |
|--------|--------|---------|-----------------------------------------|---------|---------|--------------------|-------|

[2024-12-03 15:04:43 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. select pic
        from feed_pics
        where feed_id = 14
 {executed in 0 msec}
[2024-12-03 15:04:43 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|d3ab1225-6450-4fc4-9f31-eb10a531825a.gif |
|-----------------------------------------|

[2024-12-03 15:04:43 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 14
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 15:04:43 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|72              |4       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|71              |3       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|70              |2       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|69              |1       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-03 15:04:43 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. select pic
        from feed_pics
        where feed_id = 14
 {executed in 0 msec}
[2024-12-03 15:04:43 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|d3ab1225-6450-4fc4-9f31-eb10a531825a.gif |
|-----------------------------------------|

[2024-12-03 15:04:43 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 14
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 15:04:43 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|72              |4       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|71              |3       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|70              |2       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|69              |1       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-03 15:04:43 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. select pic
        from feed_pics
        where feed_id = 13
 {executed in 0 msec}
[2024-12-03 15:04:43 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|7af273d9-3528-498f-b249-e48a4bc99755.jpg |
|-----------------------------------------|

[2024-12-03 15:04:43 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 13
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 15:04:43 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|61              |34      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|60              |33      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|59              |32      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|58              |31      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-03 15:04:43 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. select pic
        from feed_pics
        where feed_id = 13
 {executed in 0 msec}
[2024-12-03 15:04:43 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|7af273d9-3528-498f-b249-e48a4bc99755.jpg |
|-----------------------------------------|

[2024-12-03 15:04:43 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 13
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 15:04:43 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|61              |34      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|60              |33      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|59              |32      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|58              |31      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-03 15:04:43 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. select pic
        from feed_pics
        where feed_id = 12
 {executed in 0 msec}
[2024-12-03 15:04:43 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|---------|
|pic      |
|---------|
|aaaa.gif |
|---------|

[2024-12-03 15:04:43 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 12
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 15:04:43 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|24              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|23              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|22              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|21              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-03 15:04:43 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. select pic
        from feed_pics
        where feed_id = 12
 {executed in 0 msec}
[2024-12-03 15:04:43 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|---------|
|pic      |
|---------|
|aaaa.gif |
|---------|

[2024-12-03 15:04:43 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 12
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 15:04:43 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|24              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|23              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|22              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|21              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-03 15:04:43 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. select pic
        from feed_pics
        where feed_id = 11
 {executed in 0 msec}
[2024-12-03 15:04:43 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|f3f416ca-1a7e-4483-b1db-b2164d76d4f4.png |
|-----------------------------------------|

[2024-12-03 15:04:43 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 11
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 15:04:43 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-03 15:04:43 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. select pic
        from feed_pics
        where feed_id = 11
 {executed in 0 msec}
[2024-12-03 15:04:43 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|f3f416ca-1a7e-4483-b1db-b2164d76d4f4.png |
|-----------------------------------------|

[2024-12-03 15:04:43 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 11
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 15:04:43 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-03 15:04:43 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. select pic
        from feed_pics
        where feed_id = 10
 {executed in 0 msec}
[2024-12-03 15:04:43 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|53da69e7-7ae4-4e7b-b95b-a4c4ca01bdc8.jpg |
|-----------------------------------------|

[2024-12-03 15:04:43 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 10
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 15:04:43 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|29              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|28              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|27              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|26              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-03 15:04:43 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. select pic
        from feed_pics
        where feed_id = 10
 {executed in 0 msec}
[2024-12-03 15:04:43 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|53da69e7-7ae4-4e7b-b95b-a4c4ca01bdc8.jpg |
|-----------------------------------------|

[2024-12-03 15:04:43 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 10
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 15:04:43 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|29              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|28              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|27              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|26              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-03 15:04:43 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. select pic
        from feed_pics
        where feed_id = 9
 {executed in 0 msec}
[2024-12-03 15:04:43 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|7875594b-3649-4059-a29a-5c09feeab0ad.jpg |
|-----------------------------------------|

[2024-12-03 15:04:43 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 9
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 15:04:43 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-03 15:04:43 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. select pic
        from feed_pics
        where feed_id = 9
 {executed in 0 msec}
[2024-12-03 15:04:43 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|7875594b-3649-4059-a29a-5c09feeab0ad.jpg |
|-----------------------------------------|

[2024-12-03 15:04:43 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 9
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 15:04:43 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-03 15:04:43 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. select pic
        from feed_pics
        where feed_id = 5
 {executed in 0 msec}
[2024-12-03 15:04:43 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|675d9f82-0c18-4f6e-91a3-9858129aeb7e.jpg |
|c95cc439-e1e7-40f4-81fa-013b069631ca.jpg |
|f490d2ad-c64d-4006-a74a-8235888e3e87.jpg |
|-----------------------------------------|

[2024-12-03 15:04:43 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 5
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 15:04:43 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-03 15:04:43 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. select pic
        from feed_pics
        where feed_id = 4
 {executed in 0 msec}
[2024-12-03 15:04:43 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-03 15:04:43 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 4
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 15:04:43 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-03 15:04:43 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. select pic
        from feed_pics
        where feed_id = 4
 {executed in 0 msec}
[2024-12-03 15:04:43 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-03 15:04:43 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 4
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 15:04:43 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-03 15:04:45 WARN http-nio-0.0.0.0-8080-exec-9] [org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver] Resolved [org.springframework.web.bind.MethodArgumentNotValidException: Validation failed for argument [0] in public com.green.greengram.common.model.ResultResponse<com.green.greengram.feed.comment.model.FeedCommentGetRes> com.green.greengram.feed.comment.FeedCommentController.getFeedCommentList(com.green.greengram.feed.comment.model.FeedCommentGetReq): [Field error in object 'feedCommentGetReq' on field 'page': rejected value [null]; codes [typeMismatch.feedCommentGetReq.page,typeMismatch.page,typeMismatch.int,typeMismatch]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [feedCommentGetReq.page,page]; arguments []; default message [page]]; default message [Failed to convert value of type 'null' to required type 'int'; Failed to convert from type [null] to type [@io.swagger.v3.oas.annotations.media.Schema int] for value [null]]] ]
[2024-12-03 15:04:47 WARN http-nio-0.0.0.0-8080-exec-10] [org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver] Resolved [org.springframework.web.bind.MethodArgumentNotValidException: Validation failed for argument [0] in public com.green.greengram.common.model.ResultResponse<com.green.greengram.feed.comment.model.FeedCommentGetRes> com.green.greengram.feed.comment.FeedCommentController.getFeedCommentList(com.green.greengram.feed.comment.model.FeedCommentGetReq): [Field error in object 'feedCommentGetReq' on field 'page': rejected value [null]; codes [typeMismatch.feedCommentGetReq.page,typeMismatch.page,typeMismatch.int,typeMismatch]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [feedCommentGetReq.page,page]; arguments []; default message [page]]; default message [Failed to convert value of type 'null' to required type 'int'; Failed to convert from type [null] to type [@io.swagger.v3.oas.annotations.media.Schema int] for value [null]]] ]
[2024-12-03 15:04:50 WARN http-nio-0.0.0.0-8080-exec-1] [org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver] Resolved [org.springframework.web.bind.MethodArgumentNotValidException: Validation failed for argument [0] in public com.green.greengram.common.model.ResultResponse<com.green.greengram.feed.comment.model.FeedCommentGetRes> com.green.greengram.feed.comment.FeedCommentController.getFeedCommentList(com.green.greengram.feed.comment.model.FeedCommentGetReq): [Field error in object 'feedCommentGetReq' on field 'page': rejected value [null]; codes [typeMismatch.feedCommentGetReq.page,typeMismatch.page,typeMismatch.int,typeMismatch]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [feedCommentGetReq.page,page]; arguments []; default message [page]]; default message [Failed to convert value of type 'null' to required type 'int'; Failed to convert from type [null] to type [@io.swagger.v3.oas.annotations.media.Schema int] for value [null]]] ]
[2024-12-03 15:04:54 DEBUGhttp-nio-0.0.0.0-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. DELETE FROM feed_comment
        WHERE feed_comment_id = 61
        AND user_id = 1
 {executed in 3 msec}
[2024-12-03 15:04:56 DEBUGhttp-nio-0.0.0.0-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. DELETE FROM feed_comment
        WHERE feed_comment_id = 59
        AND user_id = 1
 {executed in 2 msec}
[2024-12-03 15:04:59 DEBUGhttp-nio-0.0.0.0-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. DELETE FROM feed_comment
        WHERE feed_comment_id = 60
        AND user_id = 1
 {executed in 2 msec}
[2024-12-03 15:05:00 WARN http-nio-0.0.0.0-8080-exec-3] [org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver] Resolved [org.springframework.web.bind.MethodArgumentNotValidException: Validation failed for argument [0] in public com.green.greengram.common.model.ResultResponse<com.green.greengram.feed.comment.model.FeedCommentGetRes> com.green.greengram.feed.comment.FeedCommentController.getFeedCommentList(com.green.greengram.feed.comment.model.FeedCommentGetReq): [Field error in object 'feedCommentGetReq' on field 'page': rejected value [null]; codes [typeMismatch.feedCommentGetReq.page,typeMismatch.page,typeMismatch.int,typeMismatch]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [feedCommentGetReq.page,page]; arguments []; default message [page]]; default message [Failed to convert value of type 'null' to required type 'int'; Failed to convert from type [null] to type [@io.swagger.v3.oas.annotations.media.Schema int] for value [null]]] ]
[2024-12-03 15:05:01 INFO http-nio-0.0.0.0-8080-exec-1] [com.green.greengram.feed.model.FeedGetReq] page : 1, size : null, userId : 1
[2024-12-03 15:05:01 INFO http-nio-0.0.0.0-8080-exec-1] [com.green.greengram.feed.FeedController] FeedController > getFeedList > p : FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=1)
[2024-12-03 15:05:01 DEBUGhttp-nio-0.0.0.0-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT A.feed_id AS feedId,
        C.user_id AS writerUserId,
        if(C.nick_name IS NULL, C.uid, C.nick_name) AS writerNm,
        C.pic AS writerPic,
        contents, location,
        A.created_at AS createdAt,
        if(D.feed_id IS NULL, 0, 1) AS isLike
        from feed A
        JOIN user C
        ON A.writer_user_id = C.user_id
        LEFT JOIN feed_like D
        ON C.user_id = D.user_id
        AND D.user_id = 1
        order BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 0 msec}
[2024-12-03 15:05:01 INFO http-nio-0.0.0.0-8080-exec-1] [jdbc.resultsettable] 
|--------|--------|---------|-----------------------------------------|---------|---------|--------------------|-------|
|feed_id |user_id |writernm |pic                                      |contents |location |created_at          |islike |
|--------|--------|---------|-----------------------------------------|---------|---------|--------------------|-------|
|14      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |ㅇ        |ㅇ        |2024-12-03 11:49:38 |1      |
|14      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |ㅇ        |ㅇ        |2024-12-03 11:49:38 |1      |
|13      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |d        |d        |2024-12-03 11:15:02 |1      |
|13      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |d        |d        |2024-12-03 11:15:02 |1      |
|12      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |ㅁㄴㅇ      |ㅁㄴㅇ      |2024-11-29 16:17:53 |1      |
|12      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |ㅁㄴㅇ      |ㅁㄴㅇ      |2024-11-29 16:17:53 |1      |
|11      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |         |         |2024-11-29 16:12:11 |1      |
|11      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |         |         |2024-11-29 16:12:11 |1      |
|10      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |asd      |asd      |2024-11-29 16:05:52 |1      |
|10      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |asd      |asd      |2024-11-29 16:05:52 |1      |
|9       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |sda      |asd      |2024-11-29 16:00:32 |1      |
|9       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |sda      |asd      |2024-11-29 16:00:32 |1      |
|5       |2       |홍길동      |6d88f58a-0c38-4010-b703-3ccb187071d8.jpg |123      |중앙로      |2024-11-29 10:36:12 |0      |
|4       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |123      |그린컴      |2024-11-28 17:24:40 |1      |
|4       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |123      |그린컴      |2024-11-28 17:24:40 |1      |
|--------|--------|---------|-----------------------------------------|---------|---------|--------------------|-------|

[2024-12-03 15:05:01 DEBUGhttp-nio-0.0.0.0-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. select pic
        from feed_pics
        where feed_id = 14
 {executed in 0 msec}
[2024-12-03 15:05:01 INFO http-nio-0.0.0.0-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|d3ab1225-6450-4fc4-9f31-eb10a531825a.gif |
|-----------------------------------------|

[2024-12-03 15:05:01 DEBUGhttp-nio-0.0.0.0-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 14
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 15:05:01 INFO http-nio-0.0.0.0-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|72              |4       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|71              |3       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|70              |2       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|69              |1       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-03 15:05:01 DEBUGhttp-nio-0.0.0.0-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. select pic
        from feed_pics
        where feed_id = 14
 {executed in 0 msec}
[2024-12-03 15:05:01 INFO http-nio-0.0.0.0-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|d3ab1225-6450-4fc4-9f31-eb10a531825a.gif |
|-----------------------------------------|

[2024-12-03 15:05:01 DEBUGhttp-nio-0.0.0.0-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 14
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 15:05:01 INFO http-nio-0.0.0.0-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|72              |4       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|71              |3       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|70              |2       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|69              |1       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-03 15:05:01 DEBUGhttp-nio-0.0.0.0-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. select pic
        from feed_pics
        where feed_id = 13
 {executed in 0 msec}
[2024-12-03 15:05:01 INFO http-nio-0.0.0.0-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|7af273d9-3528-498f-b249-e48a4bc99755.jpg |
|-----------------------------------------|

[2024-12-03 15:05:01 DEBUGhttp-nio-0.0.0.0-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 13
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 15:05:01 INFO http-nio-0.0.0.0-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|58              |31      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|57              |30      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|56              |29      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|55              |28      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-03 15:05:01 DEBUGhttp-nio-0.0.0.0-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. select pic
        from feed_pics
        where feed_id = 13
 {executed in 0 msec}
[2024-12-03 15:05:01 INFO http-nio-0.0.0.0-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|7af273d9-3528-498f-b249-e48a4bc99755.jpg |
|-----------------------------------------|

[2024-12-03 15:05:01 DEBUGhttp-nio-0.0.0.0-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 13
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 15:05:01 INFO http-nio-0.0.0.0-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|58              |31      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|57              |30      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|56              |29      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|55              |28      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-03 15:05:01 DEBUGhttp-nio-0.0.0.0-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. select pic
        from feed_pics
        where feed_id = 12
 {executed in 0 msec}
[2024-12-03 15:05:01 INFO http-nio-0.0.0.0-8080-exec-1] [jdbc.resultsettable] 
|---------|
|pic      |
|---------|
|aaaa.gif |
|---------|

[2024-12-03 15:05:01 DEBUGhttp-nio-0.0.0.0-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 12
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 15:05:01 INFO http-nio-0.0.0.0-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|24              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|23              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|22              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|21              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-03 15:05:01 DEBUGhttp-nio-0.0.0.0-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. select pic
        from feed_pics
        where feed_id = 12
 {executed in 0 msec}
[2024-12-03 15:05:01 INFO http-nio-0.0.0.0-8080-exec-1] [jdbc.resultsettable] 
|---------|
|pic      |
|---------|
|aaaa.gif |
|---------|

[2024-12-03 15:05:01 DEBUGhttp-nio-0.0.0.0-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 12
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 15:05:01 INFO http-nio-0.0.0.0-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|24              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|23              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|22              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|21              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-03 15:05:01 DEBUGhttp-nio-0.0.0.0-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. select pic
        from feed_pics
        where feed_id = 11
 {executed in 0 msec}
[2024-12-03 15:05:01 INFO http-nio-0.0.0.0-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|f3f416ca-1a7e-4483-b1db-b2164d76d4f4.png |
|-----------------------------------------|

[2024-12-03 15:05:01 DEBUGhttp-nio-0.0.0.0-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 11
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 15:05:01 INFO http-nio-0.0.0.0-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-03 15:05:01 DEBUGhttp-nio-0.0.0.0-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. select pic
        from feed_pics
        where feed_id = 11
 {executed in 0 msec}
[2024-12-03 15:05:01 INFO http-nio-0.0.0.0-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|f3f416ca-1a7e-4483-b1db-b2164d76d4f4.png |
|-----------------------------------------|

[2024-12-03 15:05:01 DEBUGhttp-nio-0.0.0.0-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 11
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 15:05:01 INFO http-nio-0.0.0.0-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-03 15:05:01 DEBUGhttp-nio-0.0.0.0-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. select pic
        from feed_pics
        where feed_id = 10
 {executed in 0 msec}
[2024-12-03 15:05:01 INFO http-nio-0.0.0.0-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|53da69e7-7ae4-4e7b-b95b-a4c4ca01bdc8.jpg |
|-----------------------------------------|

[2024-12-03 15:05:01 DEBUGhttp-nio-0.0.0.0-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 10
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 15:05:01 INFO http-nio-0.0.0.0-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|29              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|28              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|27              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|26              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-03 15:05:01 DEBUGhttp-nio-0.0.0.0-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. select pic
        from feed_pics
        where feed_id = 10
 {executed in 0 msec}
[2024-12-03 15:05:01 INFO http-nio-0.0.0.0-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|53da69e7-7ae4-4e7b-b95b-a4c4ca01bdc8.jpg |
|-----------------------------------------|

[2024-12-03 15:05:01 DEBUGhttp-nio-0.0.0.0-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 10
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 15:05:01 INFO http-nio-0.0.0.0-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|29              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|28              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|27              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|26              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-03 15:05:01 DEBUGhttp-nio-0.0.0.0-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. select pic
        from feed_pics
        where feed_id = 9
 {executed in 0 msec}
[2024-12-03 15:05:01 INFO http-nio-0.0.0.0-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|7875594b-3649-4059-a29a-5c09feeab0ad.jpg |
|-----------------------------------------|

[2024-12-03 15:05:01 DEBUGhttp-nio-0.0.0.0-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 9
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 15:05:01 INFO http-nio-0.0.0.0-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-03 15:05:01 DEBUGhttp-nio-0.0.0.0-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. select pic
        from feed_pics
        where feed_id = 9
 {executed in 0 msec}
[2024-12-03 15:05:01 INFO http-nio-0.0.0.0-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|7875594b-3649-4059-a29a-5c09feeab0ad.jpg |
|-----------------------------------------|

[2024-12-03 15:05:01 DEBUGhttp-nio-0.0.0.0-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 9
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 15:05:01 INFO http-nio-0.0.0.0-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-03 15:05:01 DEBUGhttp-nio-0.0.0.0-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. select pic
        from feed_pics
        where feed_id = 5
 {executed in 0 msec}
[2024-12-03 15:05:01 INFO http-nio-0.0.0.0-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|675d9f82-0c18-4f6e-91a3-9858129aeb7e.jpg |
|c95cc439-e1e7-40f4-81fa-013b069631ca.jpg |
|f490d2ad-c64d-4006-a74a-8235888e3e87.jpg |
|-----------------------------------------|

[2024-12-03 15:05:01 DEBUGhttp-nio-0.0.0.0-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 5
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 15:05:01 INFO http-nio-0.0.0.0-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-03 15:05:01 DEBUGhttp-nio-0.0.0.0-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. select pic
        from feed_pics
        where feed_id = 4
 {executed in 0 msec}
[2024-12-03 15:05:01 INFO http-nio-0.0.0.0-8080-exec-1] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-03 15:05:01 DEBUGhttp-nio-0.0.0.0-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 4
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 15:05:01 INFO http-nio-0.0.0.0-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-03 15:05:01 DEBUGhttp-nio-0.0.0.0-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. select pic
        from feed_pics
        where feed_id = 4
 {executed in 0 msec}
[2024-12-03 15:05:01 INFO http-nio-0.0.0.0-8080-exec-1] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-03 15:05:01 DEBUGhttp-nio-0.0.0.0-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 4
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 15:05:01 INFO http-nio-0.0.0.0-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-03 15:07:21 INFO File Watcher] [org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener] Restarting due to 2 class path changes (0 additions, 0 deletions, 2 modifications)
[2024-12-03 15:07:21 INFO Thread-11] [org.apache.coyote.http11.Http11NioProtocol] Stopping ProtocolHandler ["http-nio-0.0.0.0-8080"]
[2024-12-03 15:07:21 INFO Thread-11] [com.zaxxer.hikari.HikariDataSource] HikariPool-2 - Shutdown initiated...
[2024-12-03 15:07:21 INFO Thread-11] [com.zaxxer.hikari.HikariDataSource] HikariPool-2 - Shutdown completed.
[2024-12-03 15:07:21 INFO restartedMain] [com.green.greengram.GreenGramApplication] Starting GreenGramVer2Application using Java 17.0.12 with PID 6316 (D:\BHB\GreenGramVer2\build\classes\java\main started by Administrator in D:\BHB\GreenGramVer2)
[2024-12-03 15:07:21 INFO restartedMain] [com.green.greengram.GreenGramApplication] No active profile set, falling back to 1 default profile: "default"
[2024-12-03 15:07:22 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-03 15:07:22 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-0.0.0.0-8080"]
[2024-12-03 15:07:22 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-03 15:07:22 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-03 15:07:22 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-03 15:07:22 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 190 ms
[2024-12-03 15:07:22 INFO restartedMain] [com.green.greengram.common.MyFileUtils] MyFileUtils - 생성자 D:/BHB/download/greengram_ver2
[2024-12-03 15:07:22 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-03 15:07:22 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-03 15:07:22 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-0.0.0.0-8080"]
[2024-12-03 15:07:22 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-03 15:07:22 INFO restartedMain] [com.green.greengram.GreenGramApplication] Started GreenGramVer2Application in 0.33 seconds (process running for 379.203)
[2024-12-03 15:07:22 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener] Condition evaluation unchanged
[2024-12-03 15:08:29 INFO File Watcher] [org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener] Restarting due to 2 class path changes (0 additions, 0 deletions, 2 modifications)
[2024-12-03 15:08:29 INFO Thread-15] [org.apache.coyote.http11.Http11NioProtocol] Stopping ProtocolHandler ["http-nio-0.0.0.0-8080"]
[2024-12-03 15:08:29 INFO restartedMain] [com.green.greengram.GreenGramApplication] Starting GreenGramVer2Application using Java 17.0.12 with PID 6316 (D:\BHB\GreenGramVer2\build\classes\java\main started by Administrator in D:\BHB\GreenGramVer2)
[2024-12-03 15:08:29 INFO restartedMain] [com.green.greengram.GreenGramApplication] No active profile set, falling back to 1 default profile: "default"
[2024-12-03 15:08:29 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-03 15:08:29 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-0.0.0.0-8080"]
[2024-12-03 15:08:29 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-03 15:08:29 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-03 15:08:29 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-03 15:08:29 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 166 ms
[2024-12-03 15:08:29 INFO restartedMain] [com.green.greengram.common.MyFileUtils] MyFileUtils - 생성자 D:/BHB/download/greengram_ver2
[2024-12-03 15:08:29 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-03 15:08:29 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-03 15:08:29 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-0.0.0.0-8080"]
[2024-12-03 15:08:29 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-03 15:08:29 INFO restartedMain] [com.green.greengram.GreenGramApplication] Started GreenGramVer2Application in 0.309 seconds (process running for 446.93)
[2024-12-03 15:08:29 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener] Condition evaluation unchanged
[2024-12-03 15:24:32 INFO restartedMain] [com.green.greengram.GreenGramApplication] Starting GreenGramVer2Application using Java 17.0.12 with PID 10948 (D:\BHB\GreenGramVer2\build\classes\java\main started by Administrator in D:\BHB\GreenGramVer2)
[2024-12-03 15:24:32 INFO restartedMain] [com.green.greengram.GreenGramApplication] No active profile set, falling back to 1 default profile: "default"
[2024-12-03 15:24:32 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-03 15:24:32 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-03 15:24:32 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-03 15:24:32 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-0.0.0.0-8080"]
[2024-12-03 15:24:32 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-03 15:24:32 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-03 15:24:32 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-03 15:24:32 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 807 ms
[2024-12-03 15:24:33 INFO restartedMain] [com.green.greengram.common.MyFileUtils] MyFileUtils - 생성자 D:/BHB/download/greengram_ver2
[2024-12-03 15:24:33 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-03 15:24:33 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-03 15:24:33 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-0.0.0.0-8080"]
[2024-12-03 15:24:33 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-03 15:24:33 INFO restartedMain] [com.green.greengram.GreenGramApplication] Started GreenGramVer2Application in 1.692 seconds (process running for 2.049)
[2024-12-03 15:24:36 INFO http-nio-0.0.0.0-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring DispatcherServlet 'dispatcherServlet'
[2024-12-03 15:24:36 INFO http-nio-0.0.0.0-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[2024-12-03 15:24:36 INFO http-nio-0.0.0.0-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Completed initialization in 1 ms
[2024-12-03 15:24:36 INFO http-nio-0.0.0.0-8080-exec-6] [com.green.greengram.feed.model.FeedGetReq] page : 1, size : null, userId : 1
[2024-12-03 15:24:36 INFO http-nio-0.0.0.0-8080-exec-6] [com.green.greengram.feed.FeedController] FeedController > getFeedList > p : FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=1)
[2024-12-03 15:24:36 INFO http-nio-0.0.0.0-8080-exec-6] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Starting...
[2024-12-03 15:24:37 INFO http-nio-0.0.0.0-8080-exec-6] [com.zaxxer.hikari.pool.HikariPool] HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@47228ee9
[2024-12-03 15:24:37 INFO http-nio-0.0.0.0-8080-exec-6] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Start completed.
[2024-12-03 15:24:37 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId,
        C.user_id AS writerUserId,
        if(C.nick_name IS NULL, C.uid, C.nick_name) AS writerNm,
        C.pic AS writerPic,
        contents, location,
        A.created_at AS createdAt,
        if(D.feed_id IS NULL, 0, 1) AS isLike
        from feed A
        JOIN user C
        ON A.writer_user_id = C.user_id
        LEFT JOIN feed_like D
        ON C.user_id = D.user_id
        AND D.user_id = 1
        order BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 1 msec}
[2024-12-03 15:24:37 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|--------|--------|---------|-----------------------------------------|---------|---------|--------------------|-------|
|feed_id |user_id |writernm |pic                                      |contents |location |created_at          |islike |
|--------|--------|---------|-----------------------------------------|---------|---------|--------------------|-------|
|14      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |ㅇ        |ㅇ        |2024-12-03 11:49:38 |1      |
|14      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |ㅇ        |ㅇ        |2024-12-03 11:49:38 |1      |
|13      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |d        |d        |2024-12-03 11:15:02 |1      |
|13      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |d        |d        |2024-12-03 11:15:02 |1      |
|12      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |ㅁㄴㅇ      |ㅁㄴㅇ      |2024-11-29 16:17:53 |1      |
|12      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |ㅁㄴㅇ      |ㅁㄴㅇ      |2024-11-29 16:17:53 |1      |
|11      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |         |         |2024-11-29 16:12:11 |1      |
|11      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |         |         |2024-11-29 16:12:11 |1      |
|10      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |asd      |asd      |2024-11-29 16:05:52 |1      |
|10      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |asd      |asd      |2024-11-29 16:05:52 |1      |
|9       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |sda      |asd      |2024-11-29 16:00:32 |1      |
|9       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |sda      |asd      |2024-11-29 16:00:32 |1      |
|5       |2       |홍길동      |6d88f58a-0c38-4010-b703-3ccb187071d8.jpg |123      |중앙로      |2024-11-29 10:36:12 |0      |
|4       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |123      |그린컴      |2024-11-28 17:24:40 |1      |
|4       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |123      |그린컴      |2024-11-28 17:24:40 |1      |
|--------|--------|---------|-----------------------------------------|---------|---------|--------------------|-------|

[2024-12-03 15:24:37 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 14
 {executed in 0 msec}
[2024-12-03 15:24:37 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|d3ab1225-6450-4fc4-9f31-eb10a531825a.gif |
|-----------------------------------------|

[2024-12-03 15:24:37 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 14
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 3
 {executed in 0 msec}
[2024-12-03 15:24:37 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|72              |4       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|71              |3       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|70              |2       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-03 15:24:37 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 14
 {executed in 0 msec}
[2024-12-03 15:24:37 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|d3ab1225-6450-4fc4-9f31-eb10a531825a.gif |
|-----------------------------------------|

[2024-12-03 15:24:37 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 14
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 3
 {executed in 0 msec}
[2024-12-03 15:24:37 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|72              |4       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|71              |3       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|70              |2       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-03 15:24:37 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 13
 {executed in 0 msec}
[2024-12-03 15:24:37 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|7af273d9-3528-498f-b249-e48a4bc99755.jpg |
|-----------------------------------------|

[2024-12-03 15:24:37 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 13
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 3
 {executed in 1 msec}
[2024-12-03 15:24:37 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|58              |31      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|57              |30      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|56              |29      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-03 15:24:37 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 13
 {executed in 0 msec}
[2024-12-03 15:24:37 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|7af273d9-3528-498f-b249-e48a4bc99755.jpg |
|-----------------------------------------|

[2024-12-03 15:24:37 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 13
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 3
 {executed in 0 msec}
[2024-12-03 15:24:37 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|58              |31      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|57              |30      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|56              |29      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-03 15:24:37 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 12
 {executed in 0 msec}
[2024-12-03 15:24:37 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|---------|
|pic      |
|---------|
|aaaa.gif |
|---------|

[2024-12-03 15:24:37 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 12
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 3
 {executed in 0 msec}
[2024-12-03 15:24:37 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|24              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|23              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|22              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-03 15:24:37 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 12
 {executed in 0 msec}
[2024-12-03 15:24:37 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|---------|
|pic      |
|---------|
|aaaa.gif |
|---------|

[2024-12-03 15:24:37 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 12
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 3
 {executed in 1 msec}
[2024-12-03 15:24:37 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|24              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|23              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|22              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-03 15:24:37 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 11
 {executed in 1 msec}
[2024-12-03 15:24:37 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|f3f416ca-1a7e-4483-b1db-b2164d76d4f4.png |
|-----------------------------------------|

[2024-12-03 15:24:37 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 11
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 3
 {executed in 0 msec}
[2024-12-03 15:24:37 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-03 15:24:37 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 11
 {executed in 0 msec}
[2024-12-03 15:24:37 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|f3f416ca-1a7e-4483-b1db-b2164d76d4f4.png |
|-----------------------------------------|

[2024-12-03 15:24:37 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 11
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 3
 {executed in 0 msec}
[2024-12-03 15:24:37 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-03 15:24:37 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 10
 {executed in 0 msec}
[2024-12-03 15:24:37 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|53da69e7-7ae4-4e7b-b95b-a4c4ca01bdc8.jpg |
|-----------------------------------------|

[2024-12-03 15:24:37 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 10
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 3
 {executed in 0 msec}
[2024-12-03 15:24:37 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|29              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|28              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|27              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-03 15:24:37 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 10
 {executed in 0 msec}
[2024-12-03 15:24:37 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|53da69e7-7ae4-4e7b-b95b-a4c4ca01bdc8.jpg |
|-----------------------------------------|

[2024-12-03 15:24:37 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 10
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 3
 {executed in 0 msec}
[2024-12-03 15:24:37 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|29              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|28              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|27              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-03 15:24:37 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 9
 {executed in 0 msec}
[2024-12-03 15:24:37 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|7875594b-3649-4059-a29a-5c09feeab0ad.jpg |
|-----------------------------------------|

[2024-12-03 15:24:37 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 9
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 3
 {executed in 0 msec}
[2024-12-03 15:24:37 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-03 15:24:37 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 9
 {executed in 0 msec}
[2024-12-03 15:24:37 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|7875594b-3649-4059-a29a-5c09feeab0ad.jpg |
|-----------------------------------------|

[2024-12-03 15:24:37 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 9
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 3
 {executed in 0 msec}
[2024-12-03 15:24:37 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-03 15:24:37 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 5
 {executed in 0 msec}
[2024-12-03 15:24:37 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|675d9f82-0c18-4f6e-91a3-9858129aeb7e.jpg |
|c95cc439-e1e7-40f4-81fa-013b069631ca.jpg |
|f490d2ad-c64d-4006-a74a-8235888e3e87.jpg |
|-----------------------------------------|

[2024-12-03 15:24:37 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 5
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 3
 {executed in 0 msec}
[2024-12-03 15:24:37 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-03 15:24:37 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 4
 {executed in 0 msec}
[2024-12-03 15:24:37 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-03 15:24:37 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 4
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 3
 {executed in 0 msec}
[2024-12-03 15:24:37 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-03 15:24:37 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 4
 {executed in 0 msec}
[2024-12-03 15:24:37 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-03 15:24:37 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 4
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 3
 {executed in 0 msec}
[2024-12-03 15:24:37 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-03 15:24:46 ERRORhttp-nio-0.0.0.0-8080-exec-2] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.beans.BeanInstantiationException: Failed to instantiate [com.green.greengram.feed.comment.model.FeedCommentGetReq]: Constructor threw exception] with root cause
java.lang.NullPointerException: Cannot invoke "java.lang.Integer.intValue()" because "size" is null
	at com.green.greengram.feed.comment.model.FeedCommentGetReq.<init>(FeedCommentGetReq.java:29)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:481)
	at org.springframework.beans.BeanUtils.instantiateClass(BeanUtils.java:208)
	at org.springframework.validation.DataBinder.createObject(DataBinder.java:996)
	at org.springframework.validation.DataBinder.construct(DataBinder.java:905)
	at org.springframework.web.bind.ServletRequestDataBinder.construct(ServletRequestDataBinder.java:116)
	at org.springframework.web.servlet.mvc.method.annotation.ServletModelAttributeMethodProcessor.constructAttribute(ServletModelAttributeMethodProcessor.java:157)
	at org.springframework.web.method.annotation.ModelAttributeMethodProcessor.resolveArgument(ModelAttributeMethodProcessor.java:148)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:122)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:224)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:178)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-03 15:24:48 ERRORhttp-nio-0.0.0.0-8080-exec-3] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.beans.BeanInstantiationException: Failed to instantiate [com.green.greengram.feed.comment.model.FeedCommentGetReq]: Constructor threw exception] with root cause
java.lang.NullPointerException: Cannot invoke "java.lang.Integer.intValue()" because "size" is null
	at com.green.greengram.feed.comment.model.FeedCommentGetReq.<init>(FeedCommentGetReq.java:29)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:481)
	at org.springframework.beans.BeanUtils.instantiateClass(BeanUtils.java:208)
	at org.springframework.validation.DataBinder.createObject(DataBinder.java:996)
	at org.springframework.validation.DataBinder.construct(DataBinder.java:905)
	at org.springframework.web.bind.ServletRequestDataBinder.construct(ServletRequestDataBinder.java:116)
	at org.springframework.web.servlet.mvc.method.annotation.ServletModelAttributeMethodProcessor.constructAttribute(ServletModelAttributeMethodProcessor.java:157)
	at org.springframework.web.method.annotation.ModelAttributeMethodProcessor.resolveArgument(ModelAttributeMethodProcessor.java:148)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:122)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:224)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:178)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-03 15:24:48 ERRORhttp-nio-0.0.0.0-8080-exec-9] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.beans.BeanInstantiationException: Failed to instantiate [com.green.greengram.feed.comment.model.FeedCommentGetReq]: Constructor threw exception] with root cause
java.lang.NullPointerException: Cannot invoke "java.lang.Integer.intValue()" because "size" is null
	at com.green.greengram.feed.comment.model.FeedCommentGetReq.<init>(FeedCommentGetReq.java:29)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:481)
	at org.springframework.beans.BeanUtils.instantiateClass(BeanUtils.java:208)
	at org.springframework.validation.DataBinder.createObject(DataBinder.java:996)
	at org.springframework.validation.DataBinder.construct(DataBinder.java:905)
	at org.springframework.web.bind.ServletRequestDataBinder.construct(ServletRequestDataBinder.java:116)
	at org.springframework.web.servlet.mvc.method.annotation.ServletModelAttributeMethodProcessor.constructAttribute(ServletModelAttributeMethodProcessor.java:157)
	at org.springframework.web.method.annotation.ModelAttributeMethodProcessor.resolveArgument(ModelAttributeMethodProcessor.java:148)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:122)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:224)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:178)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-03 15:24:48 ERRORhttp-nio-0.0.0.0-8080-exec-5] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.beans.BeanInstantiationException: Failed to instantiate [com.green.greengram.feed.comment.model.FeedCommentGetReq]: Constructor threw exception] with root cause
java.lang.NullPointerException: Cannot invoke "java.lang.Integer.intValue()" because "size" is null
	at com.green.greengram.feed.comment.model.FeedCommentGetReq.<init>(FeedCommentGetReq.java:29)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:481)
	at org.springframework.beans.BeanUtils.instantiateClass(BeanUtils.java:208)
	at org.springframework.validation.DataBinder.createObject(DataBinder.java:996)
	at org.springframework.validation.DataBinder.construct(DataBinder.java:905)
	at org.springframework.web.bind.ServletRequestDataBinder.construct(ServletRequestDataBinder.java:116)
	at org.springframework.web.servlet.mvc.method.annotation.ServletModelAttributeMethodProcessor.constructAttribute(ServletModelAttributeMethodProcessor.java:157)
	at org.springframework.web.method.annotation.ModelAttributeMethodProcessor.resolveArgument(ModelAttributeMethodProcessor.java:148)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:122)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:224)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:178)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-03 15:24:49 ERRORhttp-nio-0.0.0.0-8080-exec-7] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.beans.BeanInstantiationException: Failed to instantiate [com.green.greengram.feed.comment.model.FeedCommentGetReq]: Constructor threw exception] with root cause
java.lang.NullPointerException: Cannot invoke "java.lang.Integer.intValue()" because "size" is null
	at com.green.greengram.feed.comment.model.FeedCommentGetReq.<init>(FeedCommentGetReq.java:29)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:481)
	at org.springframework.beans.BeanUtils.instantiateClass(BeanUtils.java:208)
	at org.springframework.validation.DataBinder.createObject(DataBinder.java:996)
	at org.springframework.validation.DataBinder.construct(DataBinder.java:905)
	at org.springframework.web.bind.ServletRequestDataBinder.construct(ServletRequestDataBinder.java:116)
	at org.springframework.web.servlet.mvc.method.annotation.ServletModelAttributeMethodProcessor.constructAttribute(ServletModelAttributeMethodProcessor.java:157)
	at org.springframework.web.method.annotation.ModelAttributeMethodProcessor.resolveArgument(ModelAttributeMethodProcessor.java:148)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:122)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:224)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:178)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-03 15:24:49 ERRORhttp-nio-0.0.0.0-8080-exec-8] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.beans.BeanInstantiationException: Failed to instantiate [com.green.greengram.feed.comment.model.FeedCommentGetReq]: Constructor threw exception] with root cause
java.lang.NullPointerException: Cannot invoke "java.lang.Integer.intValue()" because "size" is null
	at com.green.greengram.feed.comment.model.FeedCommentGetReq.<init>(FeedCommentGetReq.java:29)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:481)
	at org.springframework.beans.BeanUtils.instantiateClass(BeanUtils.java:208)
	at org.springframework.validation.DataBinder.createObject(DataBinder.java:996)
	at org.springframework.validation.DataBinder.construct(DataBinder.java:905)
	at org.springframework.web.bind.ServletRequestDataBinder.construct(ServletRequestDataBinder.java:116)
	at org.springframework.web.servlet.mvc.method.annotation.ServletModelAttributeMethodProcessor.constructAttribute(ServletModelAttributeMethodProcessor.java:157)
	at org.springframework.web.method.annotation.ModelAttributeMethodProcessor.resolveArgument(ModelAttributeMethodProcessor.java:148)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:122)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:224)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:178)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-03 15:24:49 ERRORhttp-nio-0.0.0.0-8080-exec-6] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.beans.BeanInstantiationException: Failed to instantiate [com.green.greengram.feed.comment.model.FeedCommentGetReq]: Constructor threw exception] with root cause
java.lang.NullPointerException: Cannot invoke "java.lang.Integer.intValue()" because "size" is null
	at com.green.greengram.feed.comment.model.FeedCommentGetReq.<init>(FeedCommentGetReq.java:29)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:481)
	at org.springframework.beans.BeanUtils.instantiateClass(BeanUtils.java:208)
	at org.springframework.validation.DataBinder.createObject(DataBinder.java:996)
	at org.springframework.validation.DataBinder.construct(DataBinder.java:905)
	at org.springframework.web.bind.ServletRequestDataBinder.construct(ServletRequestDataBinder.java:116)
	at org.springframework.web.servlet.mvc.method.annotation.ServletModelAttributeMethodProcessor.constructAttribute(ServletModelAttributeMethodProcessor.java:157)
	at org.springframework.web.method.annotation.ModelAttributeMethodProcessor.resolveArgument(ModelAttributeMethodProcessor.java:148)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:122)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:224)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:178)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-03 15:24:49 ERRORhttp-nio-0.0.0.0-8080-exec-4] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.beans.BeanInstantiationException: Failed to instantiate [com.green.greengram.feed.comment.model.FeedCommentGetReq]: Constructor threw exception] with root cause
java.lang.NullPointerException: Cannot invoke "java.lang.Integer.intValue()" because "size" is null
	at com.green.greengram.feed.comment.model.FeedCommentGetReq.<init>(FeedCommentGetReq.java:29)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:481)
	at org.springframework.beans.BeanUtils.instantiateClass(BeanUtils.java:208)
	at org.springframework.validation.DataBinder.createObject(DataBinder.java:996)
	at org.springframework.validation.DataBinder.construct(DataBinder.java:905)
	at org.springframework.web.bind.ServletRequestDataBinder.construct(ServletRequestDataBinder.java:116)
	at org.springframework.web.servlet.mvc.method.annotation.ServletModelAttributeMethodProcessor.constructAttribute(ServletModelAttributeMethodProcessor.java:157)
	at org.springframework.web.method.annotation.ModelAttributeMethodProcessor.resolveArgument(ModelAttributeMethodProcessor.java:148)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:122)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:224)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:178)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-03 15:24:49 ERRORhttp-nio-0.0.0.0-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.beans.BeanInstantiationException: Failed to instantiate [com.green.greengram.feed.comment.model.FeedCommentGetReq]: Constructor threw exception] with root cause
java.lang.NullPointerException: Cannot invoke "java.lang.Integer.intValue()" because "size" is null
	at com.green.greengram.feed.comment.model.FeedCommentGetReq.<init>(FeedCommentGetReq.java:29)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:481)
	at org.springframework.beans.BeanUtils.instantiateClass(BeanUtils.java:208)
	at org.springframework.validation.DataBinder.createObject(DataBinder.java:996)
	at org.springframework.validation.DataBinder.construct(DataBinder.java:905)
	at org.springframework.web.bind.ServletRequestDataBinder.construct(ServletRequestDataBinder.java:116)
	at org.springframework.web.servlet.mvc.method.annotation.ServletModelAttributeMethodProcessor.constructAttribute(ServletModelAttributeMethodProcessor.java:157)
	at org.springframework.web.method.annotation.ModelAttributeMethodProcessor.resolveArgument(ModelAttributeMethodProcessor.java:148)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:122)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:224)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:178)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-03 15:24:49 ERRORhttp-nio-0.0.0.0-8080-exec-10] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.beans.BeanInstantiationException: Failed to instantiate [com.green.greengram.feed.comment.model.FeedCommentGetReq]: Constructor threw exception] with root cause
java.lang.NullPointerException: Cannot invoke "java.lang.Integer.intValue()" because "size" is null
	at com.green.greengram.feed.comment.model.FeedCommentGetReq.<init>(FeedCommentGetReq.java:29)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:481)
	at org.springframework.beans.BeanUtils.instantiateClass(BeanUtils.java:208)
	at org.springframework.validation.DataBinder.createObject(DataBinder.java:996)
	at org.springframework.validation.DataBinder.construct(DataBinder.java:905)
	at org.springframework.web.bind.ServletRequestDataBinder.construct(ServletRequestDataBinder.java:116)
	at org.springframework.web.servlet.mvc.method.annotation.ServletModelAttributeMethodProcessor.constructAttribute(ServletModelAttributeMethodProcessor.java:157)
	at org.springframework.web.method.annotation.ModelAttributeMethodProcessor.resolveArgument(ModelAttributeMethodProcessor.java:148)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:122)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:224)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:178)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-03 15:26:38 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown initiated...
[2024-12-03 15:26:38 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown completed.
[2024-12-03 15:26:41 INFO restartedMain] [com.green.greengram.GreenGramApplication] Starting GreenGramVer2Application using Java 17.0.12 with PID 1848 (D:\BHB\GreenGramVer2\build\classes\java\main started by Administrator in D:\BHB\GreenGramVer2)
[2024-12-03 15:26:41 INFO restartedMain] [com.green.greengram.GreenGramApplication] No active profile set, falling back to 1 default profile: "default"
[2024-12-03 15:26:41 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-03 15:26:41 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-03 15:26:41 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-03 15:26:41 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-0.0.0.0-8080"]
[2024-12-03 15:26:41 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-03 15:26:41 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-03 15:26:41 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-03 15:26:41 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 819 ms
[2024-12-03 15:26:41 INFO restartedMain] [com.green.greengram.common.MyFileUtils] MyFileUtils - 생성자 D:/BHB/download/greengram_ver2
[2024-12-03 15:26:42 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-03 15:26:42 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-03 15:26:42 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-0.0.0.0-8080"]
[2024-12-03 15:26:42 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-03 15:26:42 INFO restartedMain] [com.green.greengram.GreenGramApplication] Started GreenGramVer2Application in 1.715 seconds (process running for 2.067)
[2024-12-03 15:26:47 INFO http-nio-0.0.0.0-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring DispatcherServlet 'dispatcherServlet'
[2024-12-03 15:26:47 INFO http-nio-0.0.0.0-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[2024-12-03 15:26:47 INFO http-nio-0.0.0.0-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Completed initialization in 1 ms
[2024-12-03 15:26:47 INFO http-nio-0.0.0.0-8080-exec-10] [com.green.greengram.feed.model.FeedGetReq] page : 1, size : null, userId : 1
[2024-12-03 15:26:47 INFO http-nio-0.0.0.0-8080-exec-10] [com.green.greengram.feed.FeedController] FeedController > getFeedList > p : FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=1)
[2024-12-03 15:26:47 INFO http-nio-0.0.0.0-8080-exec-10] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Starting...
[2024-12-03 15:26:47 INFO http-nio-0.0.0.0-8080-exec-10] [com.zaxxer.hikari.pool.HikariPool] HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@483e6c1a
[2024-12-03 15:26:47 INFO http-nio-0.0.0.0-8080-exec-10] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Start completed.
[2024-12-03 15:26:47 DEBUGhttp-nio-0.0.0.0-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId,
        C.user_id AS writerUserId,
        if(C.nick_name IS NULL, C.uid, C.nick_name) AS writerNm,
        C.pic AS writerPic,
        contents, location,
        A.created_at AS createdAt,
        if(D.feed_id IS NULL, 0, 1) AS isLike
        from feed A
        JOIN user C
        ON A.writer_user_id = C.user_id
        LEFT JOIN feed_like D
        ON C.user_id = D.user_id
        AND D.user_id = 1
        order BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 1 msec}
[2024-12-03 15:26:47 INFO http-nio-0.0.0.0-8080-exec-10] [jdbc.resultsettable] 
|--------|--------|---------|-----------------------------------------|---------|---------|--------------------|-------|
|feed_id |user_id |writernm |pic                                      |contents |location |created_at          |islike |
|--------|--------|---------|-----------------------------------------|---------|---------|--------------------|-------|
|14      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |ㅇ        |ㅇ        |2024-12-03 11:49:38 |1      |
|14      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |ㅇ        |ㅇ        |2024-12-03 11:49:38 |1      |
|13      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |d        |d        |2024-12-03 11:15:02 |1      |
|13      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |d        |d        |2024-12-03 11:15:02 |1      |
|12      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |ㅁㄴㅇ      |ㅁㄴㅇ      |2024-11-29 16:17:53 |1      |
|12      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |ㅁㄴㅇ      |ㅁㄴㅇ      |2024-11-29 16:17:53 |1      |
|11      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |         |         |2024-11-29 16:12:11 |1      |
|11      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |         |         |2024-11-29 16:12:11 |1      |
|10      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |asd      |asd      |2024-11-29 16:05:52 |1      |
|10      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |asd      |asd      |2024-11-29 16:05:52 |1      |
|9       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |sda      |asd      |2024-11-29 16:00:32 |1      |
|9       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |sda      |asd      |2024-11-29 16:00:32 |1      |
|5       |2       |홍길동      |6d88f58a-0c38-4010-b703-3ccb187071d8.jpg |123      |중앙로      |2024-11-29 10:36:12 |0      |
|4       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |123      |그린컴      |2024-11-28 17:24:40 |1      |
|4       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |123      |그린컴      |2024-11-28 17:24:40 |1      |
|--------|--------|---------|-----------------------------------------|---------|---------|--------------------|-------|

[2024-12-03 15:26:47 DEBUGhttp-nio-0.0.0.0-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 14
 {executed in 0 msec}
[2024-12-03 15:26:47 INFO http-nio-0.0.0.0-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|d3ab1225-6450-4fc4-9f31-eb10a531825a.gif |
|-----------------------------------------|

[2024-12-03 15:26:47 DEBUGhttp-nio-0.0.0.0-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 14
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 15:26:47 INFO http-nio-0.0.0.0-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|72              |4       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|71              |3       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|70              |2       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|69              |1       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-03 15:26:47 DEBUGhttp-nio-0.0.0.0-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 14
 {executed in 0 msec}
[2024-12-03 15:26:47 INFO http-nio-0.0.0.0-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|d3ab1225-6450-4fc4-9f31-eb10a531825a.gif |
|-----------------------------------------|

[2024-12-03 15:26:47 DEBUGhttp-nio-0.0.0.0-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 14
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 15:26:47 INFO http-nio-0.0.0.0-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|72              |4       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|71              |3       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|70              |2       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|69              |1       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-03 15:26:47 DEBUGhttp-nio-0.0.0.0-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 13
 {executed in 0 msec}
[2024-12-03 15:26:47 INFO http-nio-0.0.0.0-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|7af273d9-3528-498f-b249-e48a4bc99755.jpg |
|-----------------------------------------|

[2024-12-03 15:26:47 DEBUGhttp-nio-0.0.0.0-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 13
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 15:26:47 INFO http-nio-0.0.0.0-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|58              |31      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|57              |30      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|56              |29      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|55              |28      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-03 15:26:47 DEBUGhttp-nio-0.0.0.0-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 13
 {executed in 0 msec}
[2024-12-03 15:26:47 INFO http-nio-0.0.0.0-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|7af273d9-3528-498f-b249-e48a4bc99755.jpg |
|-----------------------------------------|

[2024-12-03 15:26:47 DEBUGhttp-nio-0.0.0.0-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 13
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 15:26:47 INFO http-nio-0.0.0.0-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|58              |31      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|57              |30      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|56              |29      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|55              |28      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-03 15:26:47 DEBUGhttp-nio-0.0.0.0-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 12
 {executed in 0 msec}
[2024-12-03 15:26:47 INFO http-nio-0.0.0.0-8080-exec-10] [jdbc.resultsettable] 
|---------|
|pic      |
|---------|
|aaaa.gif |
|---------|

[2024-12-03 15:26:47 DEBUGhttp-nio-0.0.0.0-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 12
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 15:26:47 INFO http-nio-0.0.0.0-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|24              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|23              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|22              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|21              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-03 15:26:47 DEBUGhttp-nio-0.0.0.0-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 12
 {executed in 0 msec}
[2024-12-03 15:26:47 INFO http-nio-0.0.0.0-8080-exec-10] [jdbc.resultsettable] 
|---------|
|pic      |
|---------|
|aaaa.gif |
|---------|

[2024-12-03 15:26:47 DEBUGhttp-nio-0.0.0.0-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 12
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-03 15:26:47 INFO http-nio-0.0.0.0-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|24              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|23              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|22              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|21              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-03 15:26:47 DEBUGhttp-nio-0.0.0.0-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 11
 {executed in 0 msec}
[2024-12-03 15:26:47 INFO http-nio-0.0.0.0-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|f3f416ca-1a7e-4483-b1db-b2164d76d4f4.png |
|-----------------------------------------|

[2024-12-03 15:26:47 DEBUGhttp-nio-0.0.0.0-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 11
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 15:26:47 INFO http-nio-0.0.0.0-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-03 15:26:47 DEBUGhttp-nio-0.0.0.0-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 11
 {executed in 0 msec}
[2024-12-03 15:26:47 INFO http-nio-0.0.0.0-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|f3f416ca-1a7e-4483-b1db-b2164d76d4f4.png |
|-----------------------------------------|

[2024-12-03 15:26:47 DEBUGhttp-nio-0.0.0.0-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 11
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 15:26:47 INFO http-nio-0.0.0.0-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-03 15:26:47 DEBUGhttp-nio-0.0.0.0-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 10
 {executed in 0 msec}
[2024-12-03 15:26:47 INFO http-nio-0.0.0.0-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|53da69e7-7ae4-4e7b-b95b-a4c4ca01bdc8.jpg |
|-----------------------------------------|

[2024-12-03 15:26:47 DEBUGhttp-nio-0.0.0.0-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 10
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 15:26:47 INFO http-nio-0.0.0.0-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|29              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|28              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|27              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|26              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-03 15:26:47 DEBUGhttp-nio-0.0.0.0-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 10
 {executed in 0 msec}
[2024-12-03 15:26:47 INFO http-nio-0.0.0.0-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|53da69e7-7ae4-4e7b-b95b-a4c4ca01bdc8.jpg |
|-----------------------------------------|

[2024-12-03 15:26:47 DEBUGhttp-nio-0.0.0.0-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 10
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 15:26:47 INFO http-nio-0.0.0.0-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|29              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|28              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|27              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|26              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-03 15:26:47 DEBUGhttp-nio-0.0.0.0-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 9
 {executed in 0 msec}
[2024-12-03 15:26:47 INFO http-nio-0.0.0.0-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|7875594b-3649-4059-a29a-5c09feeab0ad.jpg |
|-----------------------------------------|

[2024-12-03 15:26:47 DEBUGhttp-nio-0.0.0.0-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 9
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 15:26:47 INFO http-nio-0.0.0.0-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-03 15:26:47 DEBUGhttp-nio-0.0.0.0-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 9
 {executed in 0 msec}
[2024-12-03 15:26:47 INFO http-nio-0.0.0.0-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|7875594b-3649-4059-a29a-5c09feeab0ad.jpg |
|-----------------------------------------|

[2024-12-03 15:26:47 DEBUGhttp-nio-0.0.0.0-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 9
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 15:26:47 INFO http-nio-0.0.0.0-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-03 15:26:47 DEBUGhttp-nio-0.0.0.0-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 5
 {executed in 0 msec}
[2024-12-03 15:26:47 INFO http-nio-0.0.0.0-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|675d9f82-0c18-4f6e-91a3-9858129aeb7e.jpg |
|c95cc439-e1e7-40f4-81fa-013b069631ca.jpg |
|f490d2ad-c64d-4006-a74a-8235888e3e87.jpg |
|-----------------------------------------|

[2024-12-03 15:26:47 DEBUGhttp-nio-0.0.0.0-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 5
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 15:26:47 INFO http-nio-0.0.0.0-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-03 15:26:47 DEBUGhttp-nio-0.0.0.0-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 4
 {executed in 0 msec}
[2024-12-03 15:26:47 INFO http-nio-0.0.0.0-8080-exec-10] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-03 15:26:47 DEBUGhttp-nio-0.0.0.0-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 4
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 15:26:47 INFO http-nio-0.0.0.0-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-03 15:26:47 DEBUGhttp-nio-0.0.0.0-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 4
 {executed in 0 msec}
[2024-12-03 15:26:47 INFO http-nio-0.0.0.0-8080-exec-10] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-03 15:26:47 DEBUGhttp-nio-0.0.0.0-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 4
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 15:26:47 INFO http-nio-0.0.0.0-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-03 15:30:18 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown initiated...
[2024-12-03 15:30:18 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown completed.
[2024-12-03 15:30:20 INFO restartedMain] [com.green.greengram.GreenGramApplication] Starting GreenGramVer2Application using Java 17.0.12 with PID 1924 (D:\BHB\GreenGramVer2\build\classes\java\main started by Administrator in D:\BHB\GreenGramVer2)
[2024-12-03 15:30:20 INFO restartedMain] [com.green.greengram.GreenGramApplication] No active profile set, falling back to 1 default profile: "default"
[2024-12-03 15:30:20 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-03 15:30:20 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-03 15:30:20 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-03 15:30:20 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-0.0.0.0-8080"]
[2024-12-03 15:30:21 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-03 15:30:21 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-03 15:30:21 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-03 15:30:21 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 803 ms
[2024-12-03 15:30:21 INFO restartedMain] [com.green.greengram.common.MyFileUtils] MyFileUtils - 생성자 D:/BHB/download/greengram_ver2
[2024-12-03 15:30:21 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-03 15:30:21 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-03 15:30:21 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-0.0.0.0-8080"]
[2024-12-03 15:30:21 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-03 15:30:21 INFO restartedMain] [com.green.greengram.GreenGramApplication] Started GreenGramVer2Application in 1.676 seconds (process running for 2.03)
[2024-12-03 15:30:24 INFO http-nio-0.0.0.0-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring DispatcherServlet 'dispatcherServlet'
[2024-12-03 15:30:24 INFO http-nio-0.0.0.0-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[2024-12-03 15:30:24 INFO http-nio-0.0.0.0-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Completed initialization in 0 ms
[2024-12-03 15:30:24 INFO http-nio-0.0.0.0-8080-exec-6] [com.green.greengram.feed.model.FeedGetReq] page : 1, size : null, userId : 1
[2024-12-03 15:30:24 INFO http-nio-0.0.0.0-8080-exec-6] [com.green.greengram.feed.FeedController] FeedController > getFeedList > p : FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=1)
[2024-12-03 15:30:24 INFO http-nio-0.0.0.0-8080-exec-6] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Starting...
[2024-12-03 15:30:24 INFO http-nio-0.0.0.0-8080-exec-6] [com.zaxxer.hikari.pool.HikariPool] HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@49a49bc
[2024-12-03 15:30:24 INFO http-nio-0.0.0.0-8080-exec-6] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Start completed.
[2024-12-03 15:30:24 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId,
        C.user_id AS writerUserId,
        if(C.nick_name IS NULL, C.uid, C.nick_name) AS writerNm,
        C.pic AS writerPic,
        contents, location,
        A.created_at AS createdAt,
        if(D.feed_id IS NULL, 0, 1) AS isLike
        from feed A
        JOIN user C
        ON A.writer_user_id = C.user_id
        LEFT JOIN feed_like D
        ON C.user_id = D.user_id
        AND D.user_id = 1
        order BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 1 msec}
[2024-12-03 15:30:24 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|--------|--------|---------|-----------------------------------------|---------|---------|--------------------|-------|
|feed_id |user_id |writernm |pic                                      |contents |location |created_at          |islike |
|--------|--------|---------|-----------------------------------------|---------|---------|--------------------|-------|
|14      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |ㅇ        |ㅇ        |2024-12-03 11:49:38 |1      |
|14      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |ㅇ        |ㅇ        |2024-12-03 11:49:38 |1      |
|13      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |d        |d        |2024-12-03 11:15:02 |1      |
|13      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |d        |d        |2024-12-03 11:15:02 |1      |
|12      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |ㅁㄴㅇ      |ㅁㄴㅇ      |2024-11-29 16:17:53 |1      |
|12      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |ㅁㄴㅇ      |ㅁㄴㅇ      |2024-11-29 16:17:53 |1      |
|11      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |         |         |2024-11-29 16:12:11 |1      |
|11      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |         |         |2024-11-29 16:12:11 |1      |
|10      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |asd      |asd      |2024-11-29 16:05:52 |1      |
|10      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |asd      |asd      |2024-11-29 16:05:52 |1      |
|9       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |sda      |asd      |2024-11-29 16:00:32 |1      |
|9       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |sda      |asd      |2024-11-29 16:00:32 |1      |
|5       |2       |홍길동      |6d88f58a-0c38-4010-b703-3ccb187071d8.jpg |123      |중앙로      |2024-11-29 10:36:12 |0      |
|4       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |123      |그린컴      |2024-11-28 17:24:40 |1      |
|4       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |123      |그린컴      |2024-11-28 17:24:40 |1      |
|--------|--------|---------|-----------------------------------------|---------|---------|--------------------|-------|

[2024-12-03 15:30:24 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 14
 {executed in 1 msec}
[2024-12-03 15:30:24 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|d3ab1225-6450-4fc4-9f31-eb10a531825a.gif |
|-----------------------------------------|

[2024-12-03 15:30:24 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 14
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 15:30:24 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|72              |4       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|71              |3       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|70              |2       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|69              |1       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-03 15:30:24 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 14
 {executed in 0 msec}
[2024-12-03 15:30:24 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|d3ab1225-6450-4fc4-9f31-eb10a531825a.gif |
|-----------------------------------------|

[2024-12-03 15:30:24 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 14
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-03 15:30:24 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|72              |4       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|71              |3       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|70              |2       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|69              |1       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-03 15:30:24 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 13
 {executed in 0 msec}
[2024-12-03 15:30:24 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|7af273d9-3528-498f-b249-e48a4bc99755.jpg |
|-----------------------------------------|

[2024-12-03 15:30:24 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 13
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-03 15:30:24 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|58              |31      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|57              |30      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|56              |29      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|55              |28      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-03 15:30:24 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 13
 {executed in 0 msec}
[2024-12-03 15:30:24 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|7af273d9-3528-498f-b249-e48a4bc99755.jpg |
|-----------------------------------------|

[2024-12-03 15:30:24 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 13
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 15:30:24 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|58              |31      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|57              |30      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|56              |29      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|55              |28      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-03 15:30:24 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 12
 {executed in 0 msec}
[2024-12-03 15:30:24 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|---------|
|pic      |
|---------|
|aaaa.gif |
|---------|

[2024-12-03 15:30:24 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 12
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 15:30:24 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|24              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|23              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|22              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|21              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-03 15:30:24 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 12
 {executed in 1 msec}
[2024-12-03 15:30:24 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|---------|
|pic      |
|---------|
|aaaa.gif |
|---------|

[2024-12-03 15:30:24 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 12
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 15:30:24 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|24              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|23              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|22              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|21              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-03 15:30:24 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 11
 {executed in 0 msec}
[2024-12-03 15:30:24 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|f3f416ca-1a7e-4483-b1db-b2164d76d4f4.png |
|-----------------------------------------|

[2024-12-03 15:30:24 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 11
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 15:30:24 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-03 15:30:24 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 11
 {executed in 1 msec}
[2024-12-03 15:30:24 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|f3f416ca-1a7e-4483-b1db-b2164d76d4f4.png |
|-----------------------------------------|

[2024-12-03 15:30:24 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 11
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-03 15:30:24 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-03 15:30:24 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 10
 {executed in 0 msec}
[2024-12-03 15:30:24 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|53da69e7-7ae4-4e7b-b95b-a4c4ca01bdc8.jpg |
|-----------------------------------------|

[2024-12-03 15:30:24 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 10
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 15:30:24 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|29              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|28              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|27              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|26              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-03 15:30:24 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 10
 {executed in 0 msec}
[2024-12-03 15:30:24 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|53da69e7-7ae4-4e7b-b95b-a4c4ca01bdc8.jpg |
|-----------------------------------------|

[2024-12-03 15:30:24 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 10
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-03 15:30:24 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|29              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|28              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|27              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|26              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-03 15:30:24 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 9
 {executed in 1 msec}
[2024-12-03 15:30:24 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|7875594b-3649-4059-a29a-5c09feeab0ad.jpg |
|-----------------------------------------|

[2024-12-03 15:30:24 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 9
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 15:30:24 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-03 15:30:24 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 9
 {executed in 0 msec}
[2024-12-03 15:30:24 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|7875594b-3649-4059-a29a-5c09feeab0ad.jpg |
|-----------------------------------------|

[2024-12-03 15:30:24 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 9
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-03 15:30:24 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-03 15:30:24 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 5
 {executed in 0 msec}
[2024-12-03 15:30:24 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|675d9f82-0c18-4f6e-91a3-9858129aeb7e.jpg |
|c95cc439-e1e7-40f4-81fa-013b069631ca.jpg |
|f490d2ad-c64d-4006-a74a-8235888e3e87.jpg |
|-----------------------------------------|

[2024-12-03 15:30:24 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 5
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 15:30:24 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-03 15:30:24 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 4
 {executed in 0 msec}
[2024-12-03 15:30:24 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-03 15:30:24 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 4
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 15:30:24 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-03 15:30:24 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 4
 {executed in 0 msec}
[2024-12-03 15:30:24 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-03 15:30:24 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 4
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-03 15:30:24 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-03 15:32:49 INFO File Watcher] [org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener] Restarting due to 5 class path changes (0 additions, 0 deletions, 5 modifications)
[2024-12-03 15:32:49 INFO Thread-5] [org.apache.coyote.http11.Http11NioProtocol] Stopping ProtocolHandler ["http-nio-0.0.0.0-8080"]
[2024-12-03 15:32:49 INFO Thread-5] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown initiated...
[2024-12-03 15:32:49 INFO Thread-5] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown completed.
[2024-12-03 15:32:49 INFO restartedMain] [com.green.greengram.GreenGramApplication] Starting GreenGramVer2Application using Java 17.0.12 with PID 1924 (D:\BHB\GreenGramVer2\build\classes\java\main started by Administrator in D:\BHB\GreenGramVer2)
[2024-12-03 15:32:49 INFO restartedMain] [com.green.greengram.GreenGramApplication] No active profile set, falling back to 1 default profile: "default"
[2024-12-03 15:32:49 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-03 15:32:49 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-0.0.0.0-8080"]
[2024-12-03 15:32:49 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-03 15:32:49 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-03 15:32:49 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-03 15:32:49 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 194 ms
[2024-12-03 15:32:49 INFO restartedMain] [com.green.greengram.common.MyFileUtils] MyFileUtils - 생성자 D:/BHB/download/greengram_ver2
[2024-12-03 15:32:49 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-03 15:32:49 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-03 15:32:49 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-0.0.0.0-8080"]
[2024-12-03 15:32:49 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-03 15:32:49 INFO restartedMain] [com.green.greengram.GreenGramApplication] Started GreenGramVer2Application in 0.341 seconds (process running for 150.445)
[2024-12-03 15:32:49 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener] Condition evaluation unchanged
[2024-12-03 15:34:56 INFO restartedMain] [com.green.greengram.GreenGramApplication] Starting GreenGramVer2Application using Java 17.0.12 with PID 1916 (D:\BHB\GreenGramVer2\build\classes\java\main started by Administrator in D:\BHB\GreenGramVer2)
[2024-12-03 15:34:56 INFO restartedMain] [com.green.greengram.GreenGramApplication] No active profile set, falling back to 1 default profile: "default"
[2024-12-03 15:34:56 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-03 15:34:56 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-03 15:34:57 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-03 15:34:57 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-0.0.0.0-8080"]
[2024-12-03 15:34:57 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-03 15:34:57 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-03 15:34:57 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-03 15:34:57 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 790 ms
[2024-12-03 15:34:57 INFO restartedMain] [com.green.greengram.common.MyFileUtils] MyFileUtils - 생성자 D:/BHB/download/greengram_ver2
[2024-12-03 15:34:57 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-03 15:34:58 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-03 15:34:58 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-0.0.0.0-8080"]
[2024-12-03 15:34:58 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-03 15:34:58 INFO restartedMain] [com.green.greengram.GreenGramApplication] Started GreenGramVer2Application in 1.656 seconds (process running for 1.999)
[2024-12-03 15:35:01 INFO http-nio-0.0.0.0-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring DispatcherServlet 'dispatcherServlet'
[2024-12-03 15:35:01 INFO http-nio-0.0.0.0-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[2024-12-03 15:35:01 INFO http-nio-0.0.0.0-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Completed initialization in 1 ms
[2024-12-03 15:35:01 INFO http-nio-0.0.0.0-8080-exec-6] [com.green.greengram.feed.model.FeedGetReq] page : 1, size : null, userId : 1
[2024-12-03 15:35:01 INFO http-nio-0.0.0.0-8080-exec-6] [com.green.greengram.feed.FeedController] FeedController > getFeedList > p : FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=1)
[2024-12-03 15:35:01 INFO http-nio-0.0.0.0-8080-exec-6] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Starting...
[2024-12-03 15:35:01 INFO http-nio-0.0.0.0-8080-exec-6] [com.zaxxer.hikari.pool.HikariPool] HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@483e6c1a
[2024-12-03 15:35:01 INFO http-nio-0.0.0.0-8080-exec-6] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Start completed.
[2024-12-03 15:35:01 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId,
        C.user_id AS writerUserId,
        if(C.nick_name IS NULL, C.uid, C.nick_name) AS writerNm,
        C.pic AS writerPic,
        contents, location,
        A.created_at AS createdAt,
        if(D.feed_id IS NULL, 0, 1) AS isLike
        from feed A
        JOIN user C
        ON A.writer_user_id = C.user_id
        LEFT JOIN feed_like D
        ON C.user_id = D.user_id
        AND D.user_id = 1
        order BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 1 msec}
[2024-12-03 15:35:01 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|--------|--------|---------|-----------------------------------------|---------|---------|--------------------|-------|
|feed_id |user_id |writernm |pic                                      |contents |location |created_at          |islike |
|--------|--------|---------|-----------------------------------------|---------|---------|--------------------|-------|
|14      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |ㅇ        |ㅇ        |2024-12-03 11:49:38 |1      |
|14      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |ㅇ        |ㅇ        |2024-12-03 11:49:38 |1      |
|13      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |d        |d        |2024-12-03 11:15:02 |1      |
|13      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |d        |d        |2024-12-03 11:15:02 |1      |
|12      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |ㅁㄴㅇ      |ㅁㄴㅇ      |2024-11-29 16:17:53 |1      |
|12      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |ㅁㄴㅇ      |ㅁㄴㅇ      |2024-11-29 16:17:53 |1      |
|11      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |         |         |2024-11-29 16:12:11 |1      |
|11      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |         |         |2024-11-29 16:12:11 |1      |
|10      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |asd      |asd      |2024-11-29 16:05:52 |1      |
|10      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |asd      |asd      |2024-11-29 16:05:52 |1      |
|9       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |sda      |asd      |2024-11-29 16:00:32 |1      |
|9       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |sda      |asd      |2024-11-29 16:00:32 |1      |
|5       |2       |홍길동      |6d88f58a-0c38-4010-b703-3ccb187071d8.jpg |123      |중앙로      |2024-11-29 10:36:12 |0      |
|4       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |123      |그린컴      |2024-11-28 17:24:40 |1      |
|4       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |123      |그린컴      |2024-11-28 17:24:40 |1      |
|--------|--------|---------|-----------------------------------------|---------|---------|--------------------|-------|

[2024-12-03 15:35:01 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 14
 {executed in 0 msec}
[2024-12-03 15:35:01 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|d3ab1225-6450-4fc4-9f31-eb10a531825a.gif |
|-----------------------------------------|

[2024-12-03 15:35:01 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 14
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 15:35:01 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|72              |4       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|71              |3       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|70              |2       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|69              |1       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-03 15:35:01 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 14
 {executed in 0 msec}
[2024-12-03 15:35:01 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|d3ab1225-6450-4fc4-9f31-eb10a531825a.gif |
|-----------------------------------------|

[2024-12-03 15:35:01 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 14
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 15:35:01 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|72              |4       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|71              |3       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|70              |2       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|69              |1       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-03 15:35:01 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 13
 {executed in 0 msec}
[2024-12-03 15:35:01 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|7af273d9-3528-498f-b249-e48a4bc99755.jpg |
|-----------------------------------------|

[2024-12-03 15:35:01 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 13
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 15:35:01 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|58              |31      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|57              |30      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|56              |29      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|55              |28      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-03 15:35:01 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 13
 {executed in 0 msec}
[2024-12-03 15:35:01 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|7af273d9-3528-498f-b249-e48a4bc99755.jpg |
|-----------------------------------------|

[2024-12-03 15:35:01 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 13
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 15:35:01 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|58              |31      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|57              |30      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|56              |29      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|55              |28      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-03 15:35:01 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 12
 {executed in 0 msec}
[2024-12-03 15:35:01 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|---------|
|pic      |
|---------|
|aaaa.gif |
|---------|

[2024-12-03 15:35:01 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 12
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 15:35:01 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|24              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|23              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|22              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|21              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-03 15:35:01 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 12
 {executed in 0 msec}
[2024-12-03 15:35:01 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|---------|
|pic      |
|---------|
|aaaa.gif |
|---------|

[2024-12-03 15:35:01 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 12
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 15:35:01 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|24              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|23              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|22              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|21              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-03 15:35:01 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 11
 {executed in 0 msec}
[2024-12-03 15:35:01 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|f3f416ca-1a7e-4483-b1db-b2164d76d4f4.png |
|-----------------------------------------|

[2024-12-03 15:35:01 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 11
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 15:35:01 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-03 15:35:01 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 11
 {executed in 0 msec}
[2024-12-03 15:35:01 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|f3f416ca-1a7e-4483-b1db-b2164d76d4f4.png |
|-----------------------------------------|

[2024-12-03 15:35:01 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 11
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 15:35:01 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-03 15:35:01 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 10
 {executed in 0 msec}
[2024-12-03 15:35:01 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|53da69e7-7ae4-4e7b-b95b-a4c4ca01bdc8.jpg |
|-----------------------------------------|

[2024-12-03 15:35:01 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 10
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 15:35:01 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|29              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|28              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|27              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|26              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-03 15:35:01 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 10
 {executed in 0 msec}
[2024-12-03 15:35:01 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|53da69e7-7ae4-4e7b-b95b-a4c4ca01bdc8.jpg |
|-----------------------------------------|

[2024-12-03 15:35:01 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 10
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 15:35:01 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|29              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|28              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|27              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|26              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-03 15:35:01 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 9
 {executed in 0 msec}
[2024-12-03 15:35:01 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|7875594b-3649-4059-a29a-5c09feeab0ad.jpg |
|-----------------------------------------|

[2024-12-03 15:35:01 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 9
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 15:35:01 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-03 15:35:01 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 9
 {executed in 0 msec}
[2024-12-03 15:35:01 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|7875594b-3649-4059-a29a-5c09feeab0ad.jpg |
|-----------------------------------------|

[2024-12-03 15:35:01 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 9
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 15:35:01 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-03 15:35:01 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 5
 {executed in 0 msec}
[2024-12-03 15:35:01 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|675d9f82-0c18-4f6e-91a3-9858129aeb7e.jpg |
|c95cc439-e1e7-40f4-81fa-013b069631ca.jpg |
|f490d2ad-c64d-4006-a74a-8235888e3e87.jpg |
|-----------------------------------------|

[2024-12-03 15:35:01 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 5
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 15:35:01 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-03 15:35:01 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 4
 {executed in 0 msec}
[2024-12-03 15:35:01 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-03 15:35:01 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 4
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 15:35:01 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-03 15:35:01 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 4
 {executed in 0 msec}
[2024-12-03 15:35:01 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-03 15:35:01 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 4
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 15:35:01 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-03 15:36:17 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown initiated...
[2024-12-03 15:36:17 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown completed.
[2024-12-03 15:36:19 INFO restartedMain] [com.green.greengram.GreenGramApplication] Starting GreenGramVer2Application using Java 17.0.12 with PID 6280 (D:\BHB\GreenGramVer2\build\classes\java\main started by Administrator in D:\BHB\GreenGramVer2)
[2024-12-03 15:36:19 INFO restartedMain] [com.green.greengram.GreenGramApplication] No active profile set, falling back to 1 default profile: "default"
[2024-12-03 15:36:19 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-03 15:36:19 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-03 15:36:19 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-03 15:36:19 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-0.0.0.0-8080"]
[2024-12-03 15:36:19 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-03 15:36:19 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-03 15:36:20 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-03 15:36:20 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 811 ms
[2024-12-03 15:36:20 INFO restartedMain] [com.green.greengram.common.MyFileUtils] MyFileUtils - 생성자 D:/BHB/download/greengram_ver2
[2024-12-03 15:36:20 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-03 15:36:20 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-03 15:36:20 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-0.0.0.0-8080"]
[2024-12-03 15:36:20 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-03 15:36:20 INFO restartedMain] [com.green.greengram.GreenGramApplication] Started GreenGramVer2Application in 1.684 seconds (process running for 2.044)
[2024-12-03 15:36:23 INFO http-nio-0.0.0.0-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring DispatcherServlet 'dispatcherServlet'
[2024-12-03 15:36:23 INFO http-nio-0.0.0.0-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[2024-12-03 15:36:23 INFO http-nio-0.0.0.0-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Completed initialization in 0 ms
[2024-12-03 15:36:23 INFO http-nio-0.0.0.0-8080-exec-3] [com.green.greengram.feed.model.FeedGetReq] page : 1, size : null, userId : 1
[2024-12-03 15:36:23 INFO http-nio-0.0.0.0-8080-exec-3] [com.green.greengram.feed.FeedController] FeedController > getFeedList > p : FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=1)
[2024-12-03 15:36:23 INFO http-nio-0.0.0.0-8080-exec-3] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Starting...
[2024-12-03 15:36:23 INFO http-nio-0.0.0.0-8080-exec-3] [com.zaxxer.hikari.pool.HikariPool] HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@7d827d43
[2024-12-03 15:36:23 INFO http-nio-0.0.0.0-8080-exec-3] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Start completed.
[2024-12-03 15:36:23 DEBUGhttp-nio-0.0.0.0-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId,
        C.user_id AS writerUserId,
        if(C.nick_name IS NULL, C.uid, C.nick_name) AS writerNm,
        C.pic AS writerPic,
        contents, location,
        A.created_at AS createdAt,
        if(D.feed_id IS NULL, 0, 1) AS isLike
        from feed A
        JOIN user C
        ON A.writer_user_id = C.user_id
        LEFT JOIN feed_like D
        ON C.user_id = D.user_id
        AND D.user_id = 1
        order BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 0 msec}
[2024-12-03 15:36:23 INFO http-nio-0.0.0.0-8080-exec-3] [jdbc.resultsettable] 
|--------|--------|---------|-----------------------------------------|---------|---------|--------------------|-------|
|feed_id |user_id |writernm |pic                                      |contents |location |created_at          |islike |
|--------|--------|---------|-----------------------------------------|---------|---------|--------------------|-------|
|14      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |ㅇ        |ㅇ        |2024-12-03 11:49:38 |1      |
|14      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |ㅇ        |ㅇ        |2024-12-03 11:49:38 |1      |
|13      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |d        |d        |2024-12-03 11:15:02 |1      |
|13      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |d        |d        |2024-12-03 11:15:02 |1      |
|12      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |ㅁㄴㅇ      |ㅁㄴㅇ      |2024-11-29 16:17:53 |1      |
|12      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |ㅁㄴㅇ      |ㅁㄴㅇ      |2024-11-29 16:17:53 |1      |
|11      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |         |         |2024-11-29 16:12:11 |1      |
|11      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |         |         |2024-11-29 16:12:11 |1      |
|10      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |asd      |asd      |2024-11-29 16:05:52 |1      |
|10      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |asd      |asd      |2024-11-29 16:05:52 |1      |
|9       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |sda      |asd      |2024-11-29 16:00:32 |1      |
|9       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |sda      |asd      |2024-11-29 16:00:32 |1      |
|5       |2       |홍길동      |6d88f58a-0c38-4010-b703-3ccb187071d8.jpg |123      |중앙로      |2024-11-29 10:36:12 |0      |
|4       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |123      |그린컴      |2024-11-28 17:24:40 |1      |
|4       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |123      |그린컴      |2024-11-28 17:24:40 |1      |
|--------|--------|---------|-----------------------------------------|---------|---------|--------------------|-------|

[2024-12-03 15:36:23 DEBUGhttp-nio-0.0.0.0-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 14
 {executed in 0 msec}
[2024-12-03 15:36:23 INFO http-nio-0.0.0.0-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|d3ab1225-6450-4fc4-9f31-eb10a531825a.gif |
|-----------------------------------------|

[2024-12-03 15:36:23 DEBUGhttp-nio-0.0.0.0-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 14
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-03 15:36:23 INFO http-nio-0.0.0.0-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|72              |4       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|71              |3       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|70              |2       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|69              |1       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-03 15:36:23 DEBUGhttp-nio-0.0.0.0-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 14
 {executed in 0 msec}
[2024-12-03 15:36:23 INFO http-nio-0.0.0.0-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|d3ab1225-6450-4fc4-9f31-eb10a531825a.gif |
|-----------------------------------------|

[2024-12-03 15:36:23 DEBUGhttp-nio-0.0.0.0-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 14
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-03 15:36:23 INFO http-nio-0.0.0.0-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|72              |4       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|71              |3       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|70              |2       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|69              |1       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-03 15:36:23 DEBUGhttp-nio-0.0.0.0-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 13
 {executed in 0 msec}
[2024-12-03 15:36:23 INFO http-nio-0.0.0.0-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|7af273d9-3528-498f-b249-e48a4bc99755.jpg |
|-----------------------------------------|

[2024-12-03 15:36:23 DEBUGhttp-nio-0.0.0.0-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 13
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-03 15:36:23 INFO http-nio-0.0.0.0-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|58              |31      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|57              |30      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|56              |29      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|55              |28      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-03 15:36:23 DEBUGhttp-nio-0.0.0.0-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 13
 {executed in 0 msec}
[2024-12-03 15:36:23 INFO http-nio-0.0.0.0-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|7af273d9-3528-498f-b249-e48a4bc99755.jpg |
|-----------------------------------------|

[2024-12-03 15:36:23 DEBUGhttp-nio-0.0.0.0-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 13
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-03 15:36:23 INFO http-nio-0.0.0.0-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|58              |31      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|57              |30      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|56              |29      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|55              |28      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-03 15:36:23 DEBUGhttp-nio-0.0.0.0-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 12
 {executed in 0 msec}
[2024-12-03 15:36:23 INFO http-nio-0.0.0.0-8080-exec-3] [jdbc.resultsettable] 
|---------|
|pic      |
|---------|
|aaaa.gif |
|---------|

[2024-12-03 15:36:23 DEBUGhttp-nio-0.0.0.0-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 12
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-03 15:36:23 INFO http-nio-0.0.0.0-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|24              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|23              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|22              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|21              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-03 15:36:23 DEBUGhttp-nio-0.0.0.0-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 12
 {executed in 0 msec}
[2024-12-03 15:36:23 INFO http-nio-0.0.0.0-8080-exec-3] [jdbc.resultsettable] 
|---------|
|pic      |
|---------|
|aaaa.gif |
|---------|

[2024-12-03 15:36:23 DEBUGhttp-nio-0.0.0.0-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 12
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 15:36:23 INFO http-nio-0.0.0.0-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|24              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|23              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|22              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|21              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-03 15:36:23 DEBUGhttp-nio-0.0.0.0-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 11
 {executed in 0 msec}
[2024-12-03 15:36:23 INFO http-nio-0.0.0.0-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|f3f416ca-1a7e-4483-b1db-b2164d76d4f4.png |
|-----------------------------------------|

[2024-12-03 15:36:23 DEBUGhttp-nio-0.0.0.0-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 11
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-03 15:36:23 INFO http-nio-0.0.0.0-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-03 15:36:23 DEBUGhttp-nio-0.0.0.0-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 11
 {executed in 0 msec}
[2024-12-03 15:36:23 INFO http-nio-0.0.0.0-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|f3f416ca-1a7e-4483-b1db-b2164d76d4f4.png |
|-----------------------------------------|

[2024-12-03 15:36:23 DEBUGhttp-nio-0.0.0.0-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 11
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-03 15:36:23 INFO http-nio-0.0.0.0-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-03 15:36:23 DEBUGhttp-nio-0.0.0.0-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 10
 {executed in 0 msec}
[2024-12-03 15:36:23 INFO http-nio-0.0.0.0-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|53da69e7-7ae4-4e7b-b95b-a4c4ca01bdc8.jpg |
|-----------------------------------------|

[2024-12-03 15:36:23 DEBUGhttp-nio-0.0.0.0-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 10
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 15:36:23 INFO http-nio-0.0.0.0-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|29              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|28              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|27              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|26              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-03 15:36:23 DEBUGhttp-nio-0.0.0.0-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 10
 {executed in 1 msec}
[2024-12-03 15:36:23 INFO http-nio-0.0.0.0-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|53da69e7-7ae4-4e7b-b95b-a4c4ca01bdc8.jpg |
|-----------------------------------------|

[2024-12-03 15:36:23 DEBUGhttp-nio-0.0.0.0-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 10
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 15:36:23 INFO http-nio-0.0.0.0-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|29              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|28              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|27              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|26              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-03 15:36:23 DEBUGhttp-nio-0.0.0.0-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 9
 {executed in 0 msec}
[2024-12-03 15:36:23 INFO http-nio-0.0.0.0-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|7875594b-3649-4059-a29a-5c09feeab0ad.jpg |
|-----------------------------------------|

[2024-12-03 15:36:23 DEBUGhttp-nio-0.0.0.0-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 9
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 15:36:23 INFO http-nio-0.0.0.0-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-03 15:36:23 DEBUGhttp-nio-0.0.0.0-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 9
 {executed in 0 msec}
[2024-12-03 15:36:23 INFO http-nio-0.0.0.0-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|7875594b-3649-4059-a29a-5c09feeab0ad.jpg |
|-----------------------------------------|

[2024-12-03 15:36:23 DEBUGhttp-nio-0.0.0.0-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 9
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 15:36:23 INFO http-nio-0.0.0.0-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-03 15:36:23 DEBUGhttp-nio-0.0.0.0-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 5
 {executed in 0 msec}
[2024-12-03 15:36:23 INFO http-nio-0.0.0.0-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|675d9f82-0c18-4f6e-91a3-9858129aeb7e.jpg |
|c95cc439-e1e7-40f4-81fa-013b069631ca.jpg |
|f490d2ad-c64d-4006-a74a-8235888e3e87.jpg |
|-----------------------------------------|

[2024-12-03 15:36:23 DEBUGhttp-nio-0.0.0.0-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 5
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 15:36:23 INFO http-nio-0.0.0.0-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-03 15:36:23 DEBUGhttp-nio-0.0.0.0-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 4
 {executed in 0 msec}
[2024-12-03 15:36:23 INFO http-nio-0.0.0.0-8080-exec-3] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-03 15:36:23 DEBUGhttp-nio-0.0.0.0-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 4
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 15:36:23 INFO http-nio-0.0.0.0-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-03 15:36:23 DEBUGhttp-nio-0.0.0.0-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 4
 {executed in 0 msec}
[2024-12-03 15:36:23 INFO http-nio-0.0.0.0-8080-exec-3] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-03 15:36:23 DEBUGhttp-nio-0.0.0.0-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 4
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 15:36:23 INFO http-nio-0.0.0.0-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-03 15:36:25 INFO http-nio-0.0.0.0-8080-exec-9] [com.green.greengram.feed.comment.FeedCommentController] FeedCommentController > getFeedComment > p: com.green.greengram.feed.comment.model.FeedCommentGetReq@1a88db
[2024-12-03 15:38:47 INFO File Watcher] [org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener] Restarting due to 2 class path changes (0 additions, 0 deletions, 2 modifications)
[2024-12-03 15:38:47 INFO Thread-5] [org.apache.coyote.http11.Http11NioProtocol] Stopping ProtocolHandler ["http-nio-0.0.0.0-8080"]
[2024-12-03 15:38:47 INFO Thread-5] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown initiated...
[2024-12-03 15:38:47 INFO Thread-5] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown completed.
[2024-12-03 15:38:47 INFO restartedMain] [com.green.greengram.GreenGramApplication] Starting GreenGramVer2Application using Java 17.0.12 with PID 6280 (D:\BHB\GreenGramVer2\build\classes\java\main started by Administrator in D:\BHB\GreenGramVer2)
[2024-12-03 15:38:47 INFO restartedMain] [com.green.greengram.GreenGramApplication] No active profile set, falling back to 1 default profile: "default"
[2024-12-03 15:38:47 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-03 15:38:47 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-0.0.0.0-8080"]
[2024-12-03 15:38:47 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-03 15:38:47 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-03 15:38:47 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-03 15:38:47 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 191 ms
[2024-12-03 15:38:47 INFO restartedMain] [com.green.greengram.common.MyFileUtils] MyFileUtils - 생성자 D:/BHB/download/greengram_ver2
[2024-12-03 15:38:47 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-03 15:38:47 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-03 15:38:47 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-0.0.0.0-8080"]
[2024-12-03 15:38:47 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-03 15:38:47 INFO restartedMain] [com.green.greengram.GreenGramApplication] Started GreenGramVer2Application in 0.347 seconds (process running for 149.363)
[2024-12-03 15:38:47 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener] Condition evaluation unchanged
[2024-12-03 15:45:36 INFO restartedMain] [com.green.greengram.GreenGramApplication] Starting GreenGramVer2Application using Java 17.0.12 with PID 10648 (D:\BHB\GreenGramVer2\build\classes\java\main started by Administrator in D:\BHB\GreenGramVer2)
[2024-12-03 15:45:36 INFO restartedMain] [com.green.greengram.GreenGramApplication] No active profile set, falling back to 1 default profile: "default"
[2024-12-03 15:45:36 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-03 15:45:36 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-03 15:45:37 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-03 15:45:37 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-0.0.0.0-8080"]
[2024-12-03 15:45:37 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-03 15:45:37 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-03 15:45:37 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-03 15:45:37 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 888 ms
[2024-12-03 15:45:37 INFO restartedMain] [com.green.greengram.common.MyFileUtils] MyFileUtils - 생성자 D:/BHB/download/greengram_ver2
[2024-12-03 15:45:38 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-03 15:45:38 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-03 15:45:38 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-0.0.0.0-8080"]
[2024-12-03 15:45:38 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-03 15:45:38 INFO restartedMain] [com.green.greengram.GreenGramApplication] Started GreenGramVer2Application in 1.86 seconds (process running for 2.219)
[2024-12-03 15:45:38 INFO http-nio-0.0.0.0-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring DispatcherServlet 'dispatcherServlet'
[2024-12-03 15:45:38 INFO http-nio-0.0.0.0-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[2024-12-03 15:45:38 INFO http-nio-0.0.0.0-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Completed initialization in 0 ms
[2024-12-03 15:45:38 INFO http-nio-0.0.0.0-8080-exec-6] [com.green.greengram.feed.model.FeedGetReq] page : 1, size : null, userId : 1
[2024-12-03 15:45:38 INFO http-nio-0.0.0.0-8080-exec-6] [com.green.greengram.feed.FeedController] FeedController > getFeedList > p : FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=1)
[2024-12-03 15:45:38 INFO http-nio-0.0.0.0-8080-exec-6] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Starting...
[2024-12-03 15:45:38 INFO http-nio-0.0.0.0-8080-exec-6] [com.zaxxer.hikari.pool.HikariPool] HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@47ed0344
[2024-12-03 15:45:38 INFO http-nio-0.0.0.0-8080-exec-6] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Start completed.
[2024-12-03 15:45:38 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId,
        C.user_id AS writerUserId,
        if(C.nick_name IS NULL, C.uid, C.nick_name) AS writerNm,
        C.pic AS writerPic,
        contents, location,
        A.created_at AS createdAt,
        if(D.feed_id IS NULL, 0, 1) AS isLike
        from feed A
        JOIN user C
        ON A.writer_user_id = C.user_id
        LEFT JOIN feed_like D
        ON C.user_id = D.user_id
        AND D.user_id = 1
        order BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 1 msec}
[2024-12-03 15:45:38 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|--------|--------|---------|-----------------------------------------|---------|---------|--------------------|-------|
|feed_id |user_id |writernm |pic                                      |contents |location |created_at          |islike |
|--------|--------|---------|-----------------------------------------|---------|---------|--------------------|-------|
|14      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |ㅇ        |ㅇ        |2024-12-03 11:49:38 |1      |
|14      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |ㅇ        |ㅇ        |2024-12-03 11:49:38 |1      |
|13      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |d        |d        |2024-12-03 11:15:02 |1      |
|13      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |d        |d        |2024-12-03 11:15:02 |1      |
|12      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |ㅁㄴㅇ      |ㅁㄴㅇ      |2024-11-29 16:17:53 |1      |
|12      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |ㅁㄴㅇ      |ㅁㄴㅇ      |2024-11-29 16:17:53 |1      |
|11      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |         |         |2024-11-29 16:12:11 |1      |
|11      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |         |         |2024-11-29 16:12:11 |1      |
|10      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |asd      |asd      |2024-11-29 16:05:52 |1      |
|10      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |asd      |asd      |2024-11-29 16:05:52 |1      |
|9       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |sda      |asd      |2024-11-29 16:00:32 |1      |
|9       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |sda      |asd      |2024-11-29 16:00:32 |1      |
|5       |2       |홍길동      |6d88f58a-0c38-4010-b703-3ccb187071d8.jpg |123      |중앙로      |2024-11-29 10:36:12 |0      |
|4       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |123      |그린컴      |2024-11-28 17:24:40 |1      |
|4       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |123      |그린컴      |2024-11-28 17:24:40 |1      |
|--------|--------|---------|-----------------------------------------|---------|---------|--------------------|-------|

[2024-12-03 15:45:38 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 14
 {executed in 0 msec}
[2024-12-03 15:45:38 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|d3ab1225-6450-4fc4-9f31-eb10a531825a.gif |
|-----------------------------------------|

[2024-12-03 15:45:38 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 14
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 15:45:38 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|72              |4       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|71              |3       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|70              |2       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|69              |1       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-03 15:45:38 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 14
 {executed in 0 msec}
[2024-12-03 15:45:38 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|d3ab1225-6450-4fc4-9f31-eb10a531825a.gif |
|-----------------------------------------|

[2024-12-03 15:45:38 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 14
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 15:45:38 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|72              |4       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|71              |3       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|70              |2       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|69              |1       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-03 15:45:38 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 13
 {executed in 0 msec}
[2024-12-03 15:45:38 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|7af273d9-3528-498f-b249-e48a4bc99755.jpg |
|-----------------------------------------|

[2024-12-03 15:45:38 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 13
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 15:45:38 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|58              |31      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|57              |30      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|56              |29      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|55              |28      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-03 15:45:38 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 13
 {executed in 0 msec}
[2024-12-03 15:45:38 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|7af273d9-3528-498f-b249-e48a4bc99755.jpg |
|-----------------------------------------|

[2024-12-03 15:45:38 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 13
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 15:45:38 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|58              |31      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|57              |30      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|56              |29      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|55              |28      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-03 15:45:38 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 12
 {executed in 0 msec}
[2024-12-03 15:45:38 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|---------|
|pic      |
|---------|
|aaaa.gif |
|---------|

[2024-12-03 15:45:38 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 12
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 15:45:38 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|24              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|23              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|22              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|21              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-03 15:45:38 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 12
 {executed in 0 msec}
[2024-12-03 15:45:38 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|---------|
|pic      |
|---------|
|aaaa.gif |
|---------|

[2024-12-03 15:45:38 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 12
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 15:45:38 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|24              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|23              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|22              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|21              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-03 15:45:38 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 11
 {executed in 0 msec}
[2024-12-03 15:45:38 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|f3f416ca-1a7e-4483-b1db-b2164d76d4f4.png |
|-----------------------------------------|

[2024-12-03 15:45:38 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 11
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 15:45:38 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-03 15:45:38 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 11
 {executed in 1 msec}
[2024-12-03 15:45:38 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|f3f416ca-1a7e-4483-b1db-b2164d76d4f4.png |
|-----------------------------------------|

[2024-12-03 15:45:38 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 11
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 15:45:38 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-03 15:45:38 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 10
 {executed in 0 msec}
[2024-12-03 15:45:38 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|53da69e7-7ae4-4e7b-b95b-a4c4ca01bdc8.jpg |
|-----------------------------------------|

[2024-12-03 15:45:38 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 10
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 2 msec}
[2024-12-03 15:45:38 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|29              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|28              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|27              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|26              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-03 15:45:38 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 10
 {executed in 0 msec}
[2024-12-03 15:45:38 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|53da69e7-7ae4-4e7b-b95b-a4c4ca01bdc8.jpg |
|-----------------------------------------|

[2024-12-03 15:45:38 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 10
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 15:45:38 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|29              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|28              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|27              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|26              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-03 15:45:38 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 9
 {executed in 0 msec}
[2024-12-03 15:45:38 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|7875594b-3649-4059-a29a-5c09feeab0ad.jpg |
|-----------------------------------------|

[2024-12-03 15:45:38 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 9
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 15:45:38 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-03 15:45:38 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 9
 {executed in 0 msec}
[2024-12-03 15:45:38 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|7875594b-3649-4059-a29a-5c09feeab0ad.jpg |
|-----------------------------------------|

[2024-12-03 15:45:38 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 9
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 15:45:38 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-03 15:45:38 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 5
 {executed in 0 msec}
[2024-12-03 15:45:38 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|675d9f82-0c18-4f6e-91a3-9858129aeb7e.jpg |
|c95cc439-e1e7-40f4-81fa-013b069631ca.jpg |
|f490d2ad-c64d-4006-a74a-8235888e3e87.jpg |
|-----------------------------------------|

[2024-12-03 15:45:38 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 5
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 15:45:38 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-03 15:45:38 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 4
 {executed in 0 msec}
[2024-12-03 15:45:38 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-03 15:45:38 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 4
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 15:45:38 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-03 15:45:38 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 4
 {executed in 0 msec}
[2024-12-03 15:45:38 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-03 15:45:38 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 4
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 15:45:38 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-03 15:45:40 INFO http-nio-0.0.0.0-8080-exec-9] [com.green.greengram.feed.comment.FeedCommentController] FeedCommentController > getFeedComment > p: com.green.greengram.feed.comment.model.FeedCommentGetReq@7e09639c
[2024-12-03 15:45:56 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown initiated...
[2024-12-03 15:45:56 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown completed.
[2024-12-03 15:46:55 INFO restartedMain] [com.green.greengram.GreenGramApplication] Starting GreenGramVer2Application using Java 17.0.12 with PID 5344 (D:\BHB\GreenGramVer2\build\classes\java\main started by Administrator in D:\BHB\GreenGramVer2)
[2024-12-03 15:46:55 INFO restartedMain] [com.green.greengram.GreenGramApplication] No active profile set, falling back to 1 default profile: "default"
[2024-12-03 15:46:55 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-03 15:46:55 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-03 15:46:55 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-03 15:46:55 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-0.0.0.0-8080"]
[2024-12-03 15:46:55 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-03 15:46:55 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-03 15:46:55 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-03 15:46:55 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 799 ms
[2024-12-03 15:46:56 INFO restartedMain] [com.green.greengram.common.MyFileUtils] MyFileUtils - 생성자 D:/BHB/download/greengram_ver2
[2024-12-03 15:46:56 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-03 15:46:56 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-03 15:46:56 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-0.0.0.0-8080"]
[2024-12-03 15:46:56 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-03 15:46:56 INFO restartedMain] [com.green.greengram.GreenGramApplication] Started GreenGramVer2Application in 1.669 seconds (process running for 2.021)
[2024-12-03 15:46:58 INFO http-nio-0.0.0.0-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring DispatcherServlet 'dispatcherServlet'
[2024-12-03 15:46:58 INFO http-nio-0.0.0.0-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[2024-12-03 15:46:58 INFO http-nio-0.0.0.0-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Completed initialization in 0 ms
[2024-12-03 15:46:58 INFO http-nio-0.0.0.0-8080-exec-6] [com.green.greengram.feed.model.FeedGetReq] page : 1, size : null, userId : 1
[2024-12-03 15:46:58 INFO http-nio-0.0.0.0-8080-exec-6] [com.green.greengram.feed.FeedController] FeedController > getFeedList > p : FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=1)
[2024-12-03 15:46:58 INFO http-nio-0.0.0.0-8080-exec-6] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Starting...
[2024-12-03 15:46:58 INFO http-nio-0.0.0.0-8080-exec-6] [com.zaxxer.hikari.pool.HikariPool] HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@24fcd60e
[2024-12-03 15:46:58 INFO http-nio-0.0.0.0-8080-exec-6] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Start completed.
[2024-12-03 15:46:58 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId,
        C.user_id AS writerUserId,
        if(C.nick_name IS NULL, C.uid, C.nick_name) AS writerNm,
        C.pic AS writerPic,
        contents, location,
        A.created_at AS createdAt,
        if(D.feed_id IS NULL, 0, 1) AS isLike
        from feed A
        JOIN user C
        ON A.writer_user_id = C.user_id
        LEFT JOIN feed_like D
        ON C.user_id = D.user_id
        AND D.user_id = 1
        order BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 0 msec}
[2024-12-03 15:46:58 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|--------|--------|---------|-----------------------------------------|---------|---------|--------------------|-------|
|feed_id |user_id |writernm |pic                                      |contents |location |created_at          |islike |
|--------|--------|---------|-----------------------------------------|---------|---------|--------------------|-------|
|14      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |ㅇ        |ㅇ        |2024-12-03 11:49:38 |1      |
|14      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |ㅇ        |ㅇ        |2024-12-03 11:49:38 |1      |
|13      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |d        |d        |2024-12-03 11:15:02 |1      |
|13      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |d        |d        |2024-12-03 11:15:02 |1      |
|12      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |ㅁㄴㅇ      |ㅁㄴㅇ      |2024-11-29 16:17:53 |1      |
|12      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |ㅁㄴㅇ      |ㅁㄴㅇ      |2024-11-29 16:17:53 |1      |
|11      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |         |         |2024-11-29 16:12:11 |1      |
|11      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |         |         |2024-11-29 16:12:11 |1      |
|10      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |asd      |asd      |2024-11-29 16:05:52 |1      |
|10      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |asd      |asd      |2024-11-29 16:05:52 |1      |
|9       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |sda      |asd      |2024-11-29 16:00:32 |1      |
|9       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |sda      |asd      |2024-11-29 16:00:32 |1      |
|5       |2       |홍길동      |6d88f58a-0c38-4010-b703-3ccb187071d8.jpg |123      |중앙로      |2024-11-29 10:36:12 |0      |
|4       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |123      |그린컴      |2024-11-28 17:24:40 |1      |
|4       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |123      |그린컴      |2024-11-28 17:24:40 |1      |
|--------|--------|---------|-----------------------------------------|---------|---------|--------------------|-------|

[2024-12-03 15:46:58 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 14
 {executed in 1 msec}
[2024-12-03 15:46:58 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|d3ab1225-6450-4fc4-9f31-eb10a531825a.gif |
|-----------------------------------------|

[2024-12-03 15:46:58 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 14
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 15:46:58 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|72              |4       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|71              |3       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|70              |2       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|69              |1       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-03 15:46:58 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 14
 {executed in 0 msec}
[2024-12-03 15:46:58 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|d3ab1225-6450-4fc4-9f31-eb10a531825a.gif |
|-----------------------------------------|

[2024-12-03 15:46:58 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 14
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 15:46:58 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|72              |4       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|71              |3       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|70              |2       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|69              |1       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-03 15:46:58 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 13
 {executed in 0 msec}
[2024-12-03 15:46:58 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|7af273d9-3528-498f-b249-e48a4bc99755.jpg |
|-----------------------------------------|

[2024-12-03 15:46:58 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 13
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 15:46:58 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|58              |31      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|57              |30      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|56              |29      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|55              |28      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-03 15:46:58 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 13
 {executed in 0 msec}
[2024-12-03 15:46:58 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|7af273d9-3528-498f-b249-e48a4bc99755.jpg |
|-----------------------------------------|

[2024-12-03 15:46:58 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 13
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 15:46:58 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|58              |31      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|57              |30      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|56              |29      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|55              |28      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-03 15:46:58 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 12
 {executed in 0 msec}
[2024-12-03 15:46:58 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|---------|
|pic      |
|---------|
|aaaa.gif |
|---------|

[2024-12-03 15:46:58 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 12
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 15:46:58 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|24              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|23              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|22              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|21              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-03 15:46:58 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 12
 {executed in 0 msec}
[2024-12-03 15:46:58 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|---------|
|pic      |
|---------|
|aaaa.gif |
|---------|

[2024-12-03 15:46:58 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 12
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 15:46:58 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|24              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|23              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|22              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|21              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-03 15:46:58 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 11
 {executed in 0 msec}
[2024-12-03 15:46:58 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|f3f416ca-1a7e-4483-b1db-b2164d76d4f4.png |
|-----------------------------------------|

[2024-12-03 15:46:58 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 11
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 15:46:58 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-03 15:46:58 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 11
 {executed in 0 msec}
[2024-12-03 15:46:58 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|f3f416ca-1a7e-4483-b1db-b2164d76d4f4.png |
|-----------------------------------------|

[2024-12-03 15:46:58 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 11
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 15:46:58 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-03 15:46:58 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 10
 {executed in 0 msec}
[2024-12-03 15:46:58 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|53da69e7-7ae4-4e7b-b95b-a4c4ca01bdc8.jpg |
|-----------------------------------------|

[2024-12-03 15:46:58 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 10
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-03 15:46:58 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|29              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|28              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|27              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|26              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-03 15:46:58 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 10
 {executed in 0 msec}
[2024-12-03 15:46:58 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|53da69e7-7ae4-4e7b-b95b-a4c4ca01bdc8.jpg |
|-----------------------------------------|

[2024-12-03 15:46:58 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 10
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-03 15:46:58 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|29              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|28              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|27              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|26              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-03 15:46:58 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 9
 {executed in 0 msec}
[2024-12-03 15:46:58 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|7875594b-3649-4059-a29a-5c09feeab0ad.jpg |
|-----------------------------------------|

[2024-12-03 15:46:58 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 9
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 15:46:58 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-03 15:46:58 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 9
 {executed in 0 msec}
[2024-12-03 15:46:58 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|7875594b-3649-4059-a29a-5c09feeab0ad.jpg |
|-----------------------------------------|

[2024-12-03 15:46:58 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 9
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 15:46:58 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-03 15:46:58 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 5
 {executed in 0 msec}
[2024-12-03 15:46:58 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|675d9f82-0c18-4f6e-91a3-9858129aeb7e.jpg |
|c95cc439-e1e7-40f4-81fa-013b069631ca.jpg |
|f490d2ad-c64d-4006-a74a-8235888e3e87.jpg |
|-----------------------------------------|

[2024-12-03 15:46:58 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 5
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 15:46:58 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-03 15:46:58 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 4
 {executed in 0 msec}
[2024-12-03 15:46:58 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-03 15:46:58 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 4
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 15:46:58 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-03 15:46:58 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
        from feed_pics
        where feed_id = 4
 {executed in 0 msec}
[2024-12-03 15:46:58 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-03 15:46:58 DEBUGhttp-nio-0.0.0.0-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, uid, nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 4
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 15:46:58 INFO http-nio-0.0.0.0-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-03 15:47:03 INFO http-nio-0.0.0.0-8080-exec-1] [com.green.greengram.feed.comment.FeedCommentController] FeedCommentController > getFeedComment > p: com.green.greengram.feed.comment.model.FeedCommentGetReq@290aad03
[2024-12-03 15:47:21 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown initiated...
[2024-12-03 15:47:21 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown completed.
[2024-12-03 15:47:23 INFO restartedMain] [com.green.greengram.GreenGramApplication] Starting GreenGramVer2Application using Java 17.0.12 with PID 6956 (D:\BHB\GreenGramVer2\build\classes\java\main started by Administrator in D:\BHB\GreenGramVer2)
[2024-12-03 15:47:23 INFO restartedMain] [com.green.greengram.GreenGramApplication] No active profile set, falling back to 1 default profile: "default"
[2024-12-03 15:47:23 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-03 15:47:23 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-03 15:47:24 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-03 15:47:24 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-03 15:47:24 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-03 15:47:24 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-03 15:47:24 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-03 15:47:24 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 794 ms
[2024-12-03 15:47:24 INFO restartedMain] [com.green.greengram.common.MyFileUtils] MyFileUtils - 생성자: D:/2024-02/download/greengram_ver2
[2024-12-03 15:47:24 INFO restartedMain] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Starting...
[2024-12-03 15:47:24 INFO restartedMain] [com.zaxxer.hikari.pool.HikariPool] HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@7fe63c4e
[2024-12-03 15:47:24 INFO restartedMain] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Start completed.
[2024-12-03 15:47:24 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-03 15:47:24 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-03 15:47:24 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-03 15:47:24 INFO restartedMain] [com.green.greengram.GreenGramApplication] Started GreenGramVer2Application in 1.778 seconds (process running for 2.139)
[2024-12-03 15:47:26 INFO http-nio-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring DispatcherServlet 'dispatcherServlet'
[2024-12-03 15:47:26 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[2024-12-03 15:47:26 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Completed initialization in 0 ms
[2024-12-03 15:47:37 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown initiated...
[2024-12-03 15:47:37 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown completed.
[2024-12-03 15:47:38 INFO restartedMain] [com.green.greengram.GreenGramApplication] Starting GreenGramVer2Application using Java 17.0.12 with PID 5132 (D:\BHB\GreenGramVer2\build\classes\java\main started by Administrator in D:\BHB\GreenGramVer2)
[2024-12-03 15:47:38 INFO restartedMain] [com.green.greengram.GreenGramApplication] No active profile set, falling back to 1 default profile: "default"
[2024-12-03 15:47:38 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-03 15:47:38 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-03 15:47:39 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-03 15:47:39 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-03 15:47:39 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-03 15:47:39 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-03 15:47:39 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-03 15:47:39 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 787 ms
[2024-12-03 15:47:39 INFO restartedMain] [com.green.greengram.common.MyFileUtils] MyFileUtils - 생성자: D:/2024-02/download/greengram_ver2
[2024-12-03 15:47:39 INFO restartedMain] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Starting...
[2024-12-03 15:47:39 INFO restartedMain] [com.zaxxer.hikari.pool.HikariPool] HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@f60b0ab
[2024-12-03 15:47:39 INFO restartedMain] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Start completed.
[2024-12-03 15:47:39 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-03 15:47:39 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-03 15:47:40 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-03 15:47:40 INFO restartedMain] [com.green.greengram.GreenGramApplication] Started GreenGramVer2Application in 1.723 seconds (process running for 2.064)
[2024-12-03 15:47:53 INFO http-nio-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring DispatcherServlet 'dispatcherServlet'
[2024-12-03 15:47:53 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[2024-12-03 15:47:53 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Completed initialization in 0 ms
[2024-12-03 15:48:23 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown initiated...
[2024-12-03 15:48:23 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown completed.
[2024-12-03 15:48:25 INFO restartedMain] [com.green.greengram.GreenGramApplication] Starting GreenGramVer2Application using Java 17.0.12 with PID 9884 (D:\BHB\GreenGramVer2\build\classes\java\main started by Administrator in D:\BHB\GreenGramVer2)
[2024-12-03 15:48:25 INFO restartedMain] [com.green.greengram.GreenGramApplication] No active profile set, falling back to 1 default profile: "default"
[2024-12-03 15:48:25 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-03 15:48:25 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-03 15:48:26 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-03 15:48:26 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-03 15:48:26 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-03 15:48:26 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-03 15:48:26 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-03 15:48:26 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 792 ms
[2024-12-03 15:48:26 INFO restartedMain] [com.green.greengram.common.MyFileUtils] MyFileUtils - 생성자: D:/2024-02/download/greengram_ver2
[2024-12-03 15:48:26 INFO restartedMain] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Starting...
[2024-12-03 15:48:26 INFO restartedMain] [com.zaxxer.hikari.pool.HikariPool] HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@2edc54c0
[2024-12-03 15:48:26 INFO restartedMain] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Start completed.
[2024-12-03 15:48:26 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-03 15:48:26 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-03 15:48:26 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-03 15:48:26 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-03 15:48:26 INFO restartedMain] [com.green.greengram.GreenGramApplication] Started GreenGramVer2Application in 1.74 seconds (process running for 2.078)
[2024-12-03 15:48:28 INFO http-nio-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring DispatcherServlet 'dispatcherServlet'
[2024-12-03 15:48:28 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[2024-12-03 15:48:28 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Completed initialization in 1 ms
[2024-12-03 15:48:29 INFO http-nio-8080-exec-6] [com.green.greengram.feed.FeedController] FeedController > getFeedList > p: FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=1)
[2024-12-03 15:48:29 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId, A.contents, A.location
             , A.created_at AS createdAt
             , B.user_id AS writerUserId
             , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
             , B.pic AS writerPic
             , IF(C.feed_id IS NULL, 0, 1) AS isLike
          FROM feed A
         INNER JOIN user B
            ON A.writer_user_id = B.user_id
          LEFT JOIN feed_like C
            ON A.feed_id = C.feed_id
           AND C.user_id = 1
         ORDER BY A.feed_id DESC
         LIMIT 0, 20
 {executed in 1 msec}
[2024-12-03 15:48:29 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|--------|---------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|feed_id |contents |location |created_at          |user_id |writernm |pic                                      |islike |
|--------|---------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|14      |ㅇ        |ㅇ        |2024-12-03 11:49:38 |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |0      |
|13      |d        |d        |2024-12-03 11:15:02 |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |0      |
|12      |ㅁㄴㅇ      |ㅁㄴㅇ      |2024-11-29 16:17:53 |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |0      |
|11      |         |         |2024-11-29 16:12:11 |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |0      |
|10      |asd      |asd      |2024-11-29 16:05:52 |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |0      |
|9       |sda      |asd      |2024-11-29 16:00:32 |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |1      |
|5       |123      |중앙로      |2024-11-29 10:36:12 |2       |홍길동      |6d88f58a-0c38-4010-b703-3ccb187071d8.jpg |0      |
|4       |123      |그린컴      |2024-11-28 17:24:40 |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |1      |
|--------|---------|---------|--------------------|--------|---------|-----------------------------------------|-------|

[2024-12-03 15:48:29 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
          FROM feed_pics
         WHERE feed_id = 14
 {executed in 1 msec}
[2024-12-03 15:48:29 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|d3ab1225-6450-4fc4-9f31-eb10a531825a.gif |
|-----------------------------------------|

[2024-12-03 15:48:29 WARN http-nio-8080-exec-6] [org.mariadb.jdbc.message.server.ErrorPacket] Error: 1146-42S02: Table 'greengram_ver2.feed_comments' doesn't exist
[2024-12-03 15:48:29 ERRORhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , B.user_id AS writerUserId
             , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
             , B.pic AS writerPic
          FROM feed_comments A
         INNER JOIN user B
            ON A.user_id = B.user_id
         WHERE A.feed_id = 14
         ORDER BY A.feed_comment_id DESC
         LIMIT 0, 4
 {FAILED after 1 msec}
java.sql.SQLSyntaxErrorException: (conn=354) Table 'greengram_ver2.feed_comments' doesn't exist
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:289)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:93)
	at org.mariadb.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:276)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:65)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:80)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:65)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:336)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:158)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:110)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:90)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:154)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:142)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy84.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:224)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:147)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:80)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy4/jdk.proxy4.$Proxy85.selFeedCommentList(Unknown Source)
	at com.green.greengram.feed.FeedService.getFeedList(FeedService.java:72)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:355)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:716)
	at com.green.greengram.feed.FeedService$$SpringCGLIB$$0.getFeedList(<generated>)
	at com.green.greengram.feed.FeedController.getFeedList(FeedController.java:43)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-03 15:48:29 ERRORhttp-nio-8080-exec-6] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: (conn=354) Table 'greengram_ver2.feed_comments' doesn't exist
### The error may exist in file [D:\BHB\GreenGramVer2\build\resources\main\mappers\FeedCommentMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: SELECT A.feed_comment_id AS feedCommentId              , A.comment              , B.user_id AS writerUserId              , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm              , B.pic AS writerPic           FROM feed_comments A          INNER JOIN user B             ON A.user_id = B.user_id          WHERE A.feed_id = ?          ORDER BY A.feed_comment_id DESC          LIMIT ?, ?
### Cause: java.sql.SQLSyntaxErrorException: (conn=354) Table 'greengram_ver2.feed_comments' doesn't exist
; bad SQL grammar []] with root cause
java.sql.SQLSyntaxErrorException: (conn=354) Table 'greengram_ver2.feed_comments' doesn't exist
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:289)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:93)
	at org.mariadb.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:276)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:65)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:80)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:65)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:336)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:158)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:110)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:90)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:154)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:142)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy84.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:224)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:147)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:80)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy4/jdk.proxy4.$Proxy85.selFeedCommentList(Unknown Source)
	at com.green.greengram.feed.FeedService.getFeedList(FeedService.java:72)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:355)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:716)
	at com.green.greengram.feed.FeedService$$SpringCGLIB$$0.getFeedList(<generated>)
	at com.green.greengram.feed.FeedController.getFeedList(FeedController.java:43)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-03 15:48:41 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO feed
           SET writer_user_id = 1
             , contents = 'ㅁㄴㅇ'
             , location = 'ㅁㄴㅇ'
 {executed in 1 msec}
[2024-12-03 15:48:41 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
1. getGeneratedKeys on query: INSERT INTO feed
           SET writer_user_id = 1
             , contents = 'ㅁㄴㅇ'
             , location = 'ㅁㄴㅇ'
 {executed in 0 msec}
[2024-12-03 15:48:41 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------|
|insert_id |
|----------|
|15        |
|----------|

[2024-12-03 15:48:41 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO feed_pics
        ( feed_id, pic )
        VALUES
         (  
            15, '12526740-807d-47f8-a45b-1c05ac9f99ce.gif'
         )
 {executed in 0 msec}
[2024-12-03 15:48:43 INFO http-nio-8080-exec-1] [com.green.greengram.feed.comment.FeedCommentController] FeedCommentController > postFeedComment > p: FeedCommentPostReq(feedCommentId=0, feedId=15, userId=1, comment=ㅁㄴㅇ)
[2024-12-03 15:48:43 WARN http-nio-8080-exec-1] [org.mariadb.jdbc.message.server.ErrorPacket] Error: 1146-42S02: Table 'greengram_ver2.feed_comments' doesn't exist
[2024-12-03 15:48:43 ERRORhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO feed_comments
           SET `feed_id` = 15
             , `user_id` = 1
             , `comment` = 'ㅁㄴㅇ'
 {FAILED after 1 msec}
java.sql.SQLSyntaxErrorException: (conn=354) Table 'greengram_ver2.feed_comments' doesn't exist
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:289)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:93)
	at org.mariadb.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:276)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:48)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:75)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:184)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy84.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:272)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:62)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy4/jdk.proxy4.$Proxy85.insFeedComment(Unknown Source)
	at com.green.greengram.feed.comment.FeedCommentService.postFeedComment(FeedCommentService.java:20)
	at com.green.greengram.feed.comment.FeedCommentController.postFeedComment(FeedCommentController.java:25)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-03 15:48:43 ERRORhttp-nio-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.jdbc.BadSqlGrammarException: 
### Error updating database.  Cause: java.sql.SQLSyntaxErrorException: (conn=354) Table 'greengram_ver2.feed_comments' doesn't exist
### The error may exist in file [D:\BHB\GreenGramVer2\build\resources\main\mappers\FeedCommentMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: INSERT INTO feed_comments            SET `feed_id` = ?              , `user_id` = ?              , `comment` = ?
### Cause: java.sql.SQLSyntaxErrorException: (conn=354) Table 'greengram_ver2.feed_comments' doesn't exist
; bad SQL grammar []] with root cause
java.sql.SQLSyntaxErrorException: (conn=354) Table 'greengram_ver2.feed_comments' doesn't exist
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:289)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:93)
	at org.mariadb.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:276)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:48)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:75)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:184)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy84.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:272)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:62)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy4/jdk.proxy4.$Proxy85.insFeedComment(Unknown Source)
	at com.green.greengram.feed.comment.FeedCommentService.postFeedComment(FeedCommentService.java:20)
	at com.green.greengram.feed.comment.FeedCommentController.postFeedComment(FeedCommentController.java:25)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-03 15:48:43 INFO http-nio-8080-exec-9] [com.green.greengram.feed.comment.FeedCommentController] FeedCommentController > postFeedComment > p: FeedCommentPostReq(feedCommentId=0, feedId=15, userId=1, comment=ㅁㄴㅇㄴㅇㅁ)
[2024-12-03 15:48:43 WARN http-nio-8080-exec-9] [org.mariadb.jdbc.message.server.ErrorPacket] Error: 1146-42S02: Table 'greengram_ver2.feed_comments' doesn't exist
[2024-12-03 15:48:43 ERRORhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO feed_comments
           SET `feed_id` = 15
             , `user_id` = 1
             , `comment` = 'ㅁㄴㅇㄴㅇㅁ'
 {FAILED after 1 msec}
java.sql.SQLSyntaxErrorException: (conn=354) Table 'greengram_ver2.feed_comments' doesn't exist
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:289)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:93)
	at org.mariadb.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:276)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:48)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:75)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:184)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy84.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:272)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:62)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy4/jdk.proxy4.$Proxy85.insFeedComment(Unknown Source)
	at com.green.greengram.feed.comment.FeedCommentService.postFeedComment(FeedCommentService.java:20)
	at com.green.greengram.feed.comment.FeedCommentController.postFeedComment(FeedCommentController.java:25)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-03 15:48:43 ERRORhttp-nio-8080-exec-9] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.jdbc.BadSqlGrammarException: 
### Error updating database.  Cause: java.sql.SQLSyntaxErrorException: (conn=354) Table 'greengram_ver2.feed_comments' doesn't exist
### The error may exist in file [D:\BHB\GreenGramVer2\build\resources\main\mappers\FeedCommentMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: INSERT INTO feed_comments            SET `feed_id` = ?              , `user_id` = ?              , `comment` = ?
### Cause: java.sql.SQLSyntaxErrorException: (conn=354) Table 'greengram_ver2.feed_comments' doesn't exist
; bad SQL grammar []] with root cause
java.sql.SQLSyntaxErrorException: (conn=354) Table 'greengram_ver2.feed_comments' doesn't exist
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:289)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:93)
	at org.mariadb.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:276)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:48)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:75)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:184)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy84.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:272)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:62)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy4/jdk.proxy4.$Proxy85.insFeedComment(Unknown Source)
	at com.green.greengram.feed.comment.FeedCommentService.postFeedComment(FeedCommentService.java:20)
	at com.green.greengram.feed.comment.FeedCommentController.postFeedComment(FeedCommentController.java:25)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-03 15:48:43 INFO http-nio-8080-exec-4] [com.green.greengram.feed.comment.FeedCommentController] FeedCommentController > postFeedComment > p: FeedCommentPostReq(feedCommentId=0, feedId=15, userId=1, comment=ㅁㄴㅇㄴㅇㅁㄴㅇㅁ)
[2024-12-03 15:48:43 WARN http-nio-8080-exec-4] [org.mariadb.jdbc.message.server.ErrorPacket] Error: 1146-42S02: Table 'greengram_ver2.feed_comments' doesn't exist
[2024-12-03 15:48:43 ERRORhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO feed_comments
           SET `feed_id` = 15
             , `user_id` = 1
             , `comment` = 'ㅁㄴㅇㄴㅇㅁㄴㅇㅁ'
 {FAILED after 0 msec}
java.sql.SQLSyntaxErrorException: (conn=354) Table 'greengram_ver2.feed_comments' doesn't exist
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:289)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:93)
	at org.mariadb.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:276)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:48)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:75)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:184)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy84.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:272)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:62)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy4/jdk.proxy4.$Proxy85.insFeedComment(Unknown Source)
	at com.green.greengram.feed.comment.FeedCommentService.postFeedComment(FeedCommentService.java:20)
	at com.green.greengram.feed.comment.FeedCommentController.postFeedComment(FeedCommentController.java:25)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-03 15:48:43 ERRORhttp-nio-8080-exec-4] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.jdbc.BadSqlGrammarException: 
### Error updating database.  Cause: java.sql.SQLSyntaxErrorException: (conn=354) Table 'greengram_ver2.feed_comments' doesn't exist
### The error may exist in file [D:\BHB\GreenGramVer2\build\resources\main\mappers\FeedCommentMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: INSERT INTO feed_comments            SET `feed_id` = ?              , `user_id` = ?              , `comment` = ?
### Cause: java.sql.SQLSyntaxErrorException: (conn=354) Table 'greengram_ver2.feed_comments' doesn't exist
; bad SQL grammar []] with root cause
java.sql.SQLSyntaxErrorException: (conn=354) Table 'greengram_ver2.feed_comments' doesn't exist
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:289)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:93)
	at org.mariadb.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:276)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:48)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:75)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:184)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy84.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:272)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:62)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy4/jdk.proxy4.$Proxy85.insFeedComment(Unknown Source)
	at com.green.greengram.feed.comment.FeedCommentService.postFeedComment(FeedCommentService.java:20)
	at com.green.greengram.feed.comment.FeedCommentController.postFeedComment(FeedCommentController.java:25)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-03 15:48:46 INFO http-nio-8080-exec-7] [com.green.greengram.feed.comment.FeedCommentController] FeedCommentController > postFeedComment > p: FeedCommentPostReq(feedCommentId=0, feedId=15, userId=1, comment=ㅁㄴ)
[2024-12-03 15:48:46 WARN http-nio-8080-exec-7] [org.mariadb.jdbc.message.server.ErrorPacket] Error: 1146-42S02: Table 'greengram_ver2.feed_comments' doesn't exist
[2024-12-03 15:48:46 ERRORhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO feed_comments
           SET `feed_id` = 15
             , `user_id` = 1
             , `comment` = 'ㅁㄴ'
 {FAILED after 1 msec}
java.sql.SQLSyntaxErrorException: (conn=354) Table 'greengram_ver2.feed_comments' doesn't exist
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:289)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:93)
	at org.mariadb.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:276)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:48)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:75)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:184)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy84.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:272)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:62)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy4/jdk.proxy4.$Proxy85.insFeedComment(Unknown Source)
	at com.green.greengram.feed.comment.FeedCommentService.postFeedComment(FeedCommentService.java:20)
	at com.green.greengram.feed.comment.FeedCommentController.postFeedComment(FeedCommentController.java:25)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-03 15:48:46 ERRORhttp-nio-8080-exec-7] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.jdbc.BadSqlGrammarException: 
### Error updating database.  Cause: java.sql.SQLSyntaxErrorException: (conn=354) Table 'greengram_ver2.feed_comments' doesn't exist
### The error may exist in file [D:\BHB\GreenGramVer2\build\resources\main\mappers\FeedCommentMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: INSERT INTO feed_comments            SET `feed_id` = ?              , `user_id` = ?              , `comment` = ?
### Cause: java.sql.SQLSyntaxErrorException: (conn=354) Table 'greengram_ver2.feed_comments' doesn't exist
; bad SQL grammar []] with root cause
java.sql.SQLSyntaxErrorException: (conn=354) Table 'greengram_ver2.feed_comments' doesn't exist
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:289)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:93)
	at org.mariadb.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:276)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:48)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:75)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:184)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy84.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:272)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:62)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy4/jdk.proxy4.$Proxy85.insFeedComment(Unknown Source)
	at com.green.greengram.feed.comment.FeedCommentService.postFeedComment(FeedCommentService.java:20)
	at com.green.greengram.feed.comment.FeedCommentController.postFeedComment(FeedCommentController.java:25)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-03 15:48:48 INFO http-nio-8080-exec-5] [com.green.greengram.feed.comment.FeedCommentController] FeedCommentController > postFeedComment > p: FeedCommentPostReq(feedCommentId=0, feedId=15, userId=1, comment=ㅁㄴ)
[2024-12-03 15:48:48 WARN http-nio-8080-exec-5] [org.mariadb.jdbc.message.server.ErrorPacket] Error: 1146-42S02: Table 'greengram_ver2.feed_comments' doesn't exist
[2024-12-03 15:48:48 ERRORhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO feed_comments
           SET `feed_id` = 15
             , `user_id` = 1
             , `comment` = 'ㅁㄴ'
 {FAILED after 0 msec}
java.sql.SQLSyntaxErrorException: (conn=354) Table 'greengram_ver2.feed_comments' doesn't exist
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:289)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:93)
	at org.mariadb.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:276)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:48)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:75)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:184)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy84.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:272)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:62)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy4/jdk.proxy4.$Proxy85.insFeedComment(Unknown Source)
	at com.green.greengram.feed.comment.FeedCommentService.postFeedComment(FeedCommentService.java:20)
	at com.green.greengram.feed.comment.FeedCommentController.postFeedComment(FeedCommentController.java:25)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-03 15:48:48 ERRORhttp-nio-8080-exec-5] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.jdbc.BadSqlGrammarException: 
### Error updating database.  Cause: java.sql.SQLSyntaxErrorException: (conn=354) Table 'greengram_ver2.feed_comments' doesn't exist
### The error may exist in file [D:\BHB\GreenGramVer2\build\resources\main\mappers\FeedCommentMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: INSERT INTO feed_comments            SET `feed_id` = ?              , `user_id` = ?              , `comment` = ?
### Cause: java.sql.SQLSyntaxErrorException: (conn=354) Table 'greengram_ver2.feed_comments' doesn't exist
; bad SQL grammar []] with root cause
java.sql.SQLSyntaxErrorException: (conn=354) Table 'greengram_ver2.feed_comments' doesn't exist
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:289)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:93)
	at org.mariadb.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:276)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:48)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:75)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:184)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy84.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:272)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:62)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy4/jdk.proxy4.$Proxy85.insFeedComment(Unknown Source)
	at com.green.greengram.feed.comment.FeedCommentService.postFeedComment(FeedCommentService.java:20)
	at com.green.greengram.feed.comment.FeedCommentController.postFeedComment(FeedCommentController.java:25)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-03 15:48:48 INFO http-nio-8080-exec-8] [com.green.greengram.feed.comment.FeedCommentController] FeedCommentController > postFeedComment > p: FeedCommentPostReq(feedCommentId=0, feedId=15, userId=1, comment=ㅁㄴ)
[2024-12-03 15:48:48 WARN http-nio-8080-exec-8] [org.mariadb.jdbc.message.server.ErrorPacket] Error: 1146-42S02: Table 'greengram_ver2.feed_comments' doesn't exist
[2024-12-03 15:48:48 ERRORhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO feed_comments
           SET `feed_id` = 15
             , `user_id` = 1
             , `comment` = 'ㅁㄴ'
 {FAILED after 0 msec}
java.sql.SQLSyntaxErrorException: (conn=354) Table 'greengram_ver2.feed_comments' doesn't exist
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:289)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:93)
	at org.mariadb.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:276)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:48)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:75)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:184)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy84.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:272)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:62)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy4/jdk.proxy4.$Proxy85.insFeedComment(Unknown Source)
	at com.green.greengram.feed.comment.FeedCommentService.postFeedComment(FeedCommentService.java:20)
	at com.green.greengram.feed.comment.FeedCommentController.postFeedComment(FeedCommentController.java:25)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-03 15:48:48 ERRORhttp-nio-8080-exec-8] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.jdbc.BadSqlGrammarException: 
### Error updating database.  Cause: java.sql.SQLSyntaxErrorException: (conn=354) Table 'greengram_ver2.feed_comments' doesn't exist
### The error may exist in file [D:\BHB\GreenGramVer2\build\resources\main\mappers\FeedCommentMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: INSERT INTO feed_comments            SET `feed_id` = ?              , `user_id` = ?              , `comment` = ?
### Cause: java.sql.SQLSyntaxErrorException: (conn=354) Table 'greengram_ver2.feed_comments' doesn't exist
; bad SQL grammar []] with root cause
java.sql.SQLSyntaxErrorException: (conn=354) Table 'greengram_ver2.feed_comments' doesn't exist
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:289)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:93)
	at org.mariadb.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:276)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:48)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:75)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:184)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy84.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:272)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:62)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy4/jdk.proxy4.$Proxy85.insFeedComment(Unknown Source)
	at com.green.greengram.feed.comment.FeedCommentService.postFeedComment(FeedCommentService.java:20)
	at com.green.greengram.feed.comment.FeedCommentController.postFeedComment(FeedCommentController.java:25)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-03 15:48:48 INFO http-nio-8080-exec-3] [com.green.greengram.feed.comment.FeedCommentController] FeedCommentController > postFeedComment > p: FeedCommentPostReq(feedCommentId=0, feedId=15, userId=1, comment=ㅁㄴ)
[2024-12-03 15:48:48 WARN http-nio-8080-exec-3] [org.mariadb.jdbc.message.server.ErrorPacket] Error: 1146-42S02: Table 'greengram_ver2.feed_comments' doesn't exist
[2024-12-03 15:48:48 ERRORhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO feed_comments
           SET `feed_id` = 15
             , `user_id` = 1
             , `comment` = 'ㅁㄴ'
 {FAILED after 1 msec}
java.sql.SQLSyntaxErrorException: (conn=354) Table 'greengram_ver2.feed_comments' doesn't exist
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:289)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:93)
	at org.mariadb.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:276)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:48)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:75)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:184)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy84.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:272)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:62)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy4/jdk.proxy4.$Proxy85.insFeedComment(Unknown Source)
	at com.green.greengram.feed.comment.FeedCommentService.postFeedComment(FeedCommentService.java:20)
	at com.green.greengram.feed.comment.FeedCommentController.postFeedComment(FeedCommentController.java:25)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-03 15:48:48 ERRORhttp-nio-8080-exec-3] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.jdbc.BadSqlGrammarException: 
### Error updating database.  Cause: java.sql.SQLSyntaxErrorException: (conn=354) Table 'greengram_ver2.feed_comments' doesn't exist
### The error may exist in file [D:\BHB\GreenGramVer2\build\resources\main\mappers\FeedCommentMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: INSERT INTO feed_comments            SET `feed_id` = ?              , `user_id` = ?              , `comment` = ?
### Cause: java.sql.SQLSyntaxErrorException: (conn=354) Table 'greengram_ver2.feed_comments' doesn't exist
; bad SQL grammar []] with root cause
java.sql.SQLSyntaxErrorException: (conn=354) Table 'greengram_ver2.feed_comments' doesn't exist
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:289)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:93)
	at org.mariadb.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:276)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:48)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:75)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:184)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy84.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:272)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:62)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy4/jdk.proxy4.$Proxy85.insFeedComment(Unknown Source)
	at com.green.greengram.feed.comment.FeedCommentService.postFeedComment(FeedCommentService.java:20)
	at com.green.greengram.feed.comment.FeedCommentController.postFeedComment(FeedCommentController.java:25)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-03 15:48:48 INFO http-nio-8080-exec-6] [com.green.greengram.feed.comment.FeedCommentController] FeedCommentController > postFeedComment > p: FeedCommentPostReq(feedCommentId=0, feedId=15, userId=1, comment=ㅁㄴ)
[2024-12-03 15:48:48 WARN http-nio-8080-exec-6] [org.mariadb.jdbc.message.server.ErrorPacket] Error: 1146-42S02: Table 'greengram_ver2.feed_comments' doesn't exist
[2024-12-03 15:48:48 ERRORhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO feed_comments
           SET `feed_id` = 15
             , `user_id` = 1
             , `comment` = 'ㅁㄴ'
 {FAILED after 0 msec}
java.sql.SQLSyntaxErrorException: (conn=354) Table 'greengram_ver2.feed_comments' doesn't exist
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:289)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:93)
	at org.mariadb.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:276)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:48)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:75)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:184)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy84.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:272)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:62)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy4/jdk.proxy4.$Proxy85.insFeedComment(Unknown Source)
	at com.green.greengram.feed.comment.FeedCommentService.postFeedComment(FeedCommentService.java:20)
	at com.green.greengram.feed.comment.FeedCommentController.postFeedComment(FeedCommentController.java:25)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-03 15:48:48 ERRORhttp-nio-8080-exec-6] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.jdbc.BadSqlGrammarException: 
### Error updating database.  Cause: java.sql.SQLSyntaxErrorException: (conn=354) Table 'greengram_ver2.feed_comments' doesn't exist
### The error may exist in file [D:\BHB\GreenGramVer2\build\resources\main\mappers\FeedCommentMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: INSERT INTO feed_comments            SET `feed_id` = ?              , `user_id` = ?              , `comment` = ?
### Cause: java.sql.SQLSyntaxErrorException: (conn=354) Table 'greengram_ver2.feed_comments' doesn't exist
; bad SQL grammar []] with root cause
java.sql.SQLSyntaxErrorException: (conn=354) Table 'greengram_ver2.feed_comments' doesn't exist
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:289)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:93)
	at org.mariadb.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:276)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:48)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:75)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:184)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy84.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:272)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:62)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy4/jdk.proxy4.$Proxy85.insFeedComment(Unknown Source)
	at com.green.greengram.feed.comment.FeedCommentService.postFeedComment(FeedCommentService.java:20)
	at com.green.greengram.feed.comment.FeedCommentController.postFeedComment(FeedCommentController.java:25)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-03 15:48:48 INFO http-nio-8080-exec-2] [com.green.greengram.feed.comment.FeedCommentController] FeedCommentController > postFeedComment > p: FeedCommentPostReq(feedCommentId=0, feedId=15, userId=1, comment=ㅁㄴ)
[2024-12-03 15:48:48 WARN http-nio-8080-exec-2] [org.mariadb.jdbc.message.server.ErrorPacket] Error: 1146-42S02: Table 'greengram_ver2.feed_comments' doesn't exist
[2024-12-03 15:48:48 ERRORhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO feed_comments
           SET `feed_id` = 15
             , `user_id` = 1
             , `comment` = 'ㅁㄴ'
 {FAILED after 0 msec}
java.sql.SQLSyntaxErrorException: (conn=354) Table 'greengram_ver2.feed_comments' doesn't exist
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:289)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:93)
	at org.mariadb.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:276)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:48)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:75)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:184)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy84.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:272)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:62)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy4/jdk.proxy4.$Proxy85.insFeedComment(Unknown Source)
	at com.green.greengram.feed.comment.FeedCommentService.postFeedComment(FeedCommentService.java:20)
	at com.green.greengram.feed.comment.FeedCommentController.postFeedComment(FeedCommentController.java:25)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-03 15:48:48 ERRORhttp-nio-8080-exec-2] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.jdbc.BadSqlGrammarException: 
### Error updating database.  Cause: java.sql.SQLSyntaxErrorException: (conn=354) Table 'greengram_ver2.feed_comments' doesn't exist
### The error may exist in file [D:\BHB\GreenGramVer2\build\resources\main\mappers\FeedCommentMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: INSERT INTO feed_comments            SET `feed_id` = ?              , `user_id` = ?              , `comment` = ?
### Cause: java.sql.SQLSyntaxErrorException: (conn=354) Table 'greengram_ver2.feed_comments' doesn't exist
; bad SQL grammar []] with root cause
java.sql.SQLSyntaxErrorException: (conn=354) Table 'greengram_ver2.feed_comments' doesn't exist
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:289)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:93)
	at org.mariadb.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:276)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:48)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:75)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:184)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy84.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:272)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:62)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy4/jdk.proxy4.$Proxy85.insFeedComment(Unknown Source)
	at com.green.greengram.feed.comment.FeedCommentService.postFeedComment(FeedCommentService.java:20)
	at com.green.greengram.feed.comment.FeedCommentController.postFeedComment(FeedCommentController.java:25)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-03 15:48:48 INFO http-nio-8080-exec-10] [com.green.greengram.feed.comment.FeedCommentController] FeedCommentController > postFeedComment > p: FeedCommentPostReq(feedCommentId=0, feedId=15, userId=1, comment=ㅁㄴ)
[2024-12-03 15:48:48 WARN http-nio-8080-exec-10] [org.mariadb.jdbc.message.server.ErrorPacket] Error: 1146-42S02: Table 'greengram_ver2.feed_comments' doesn't exist
[2024-12-03 15:48:48 ERRORhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO feed_comments
           SET `feed_id` = 15
             , `user_id` = 1
             , `comment` = 'ㅁㄴ'
 {FAILED after 0 msec}
java.sql.SQLSyntaxErrorException: (conn=354) Table 'greengram_ver2.feed_comments' doesn't exist
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:289)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:93)
	at org.mariadb.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:276)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:48)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:75)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:184)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy84.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:272)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:62)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy4/jdk.proxy4.$Proxy85.insFeedComment(Unknown Source)
	at com.green.greengram.feed.comment.FeedCommentService.postFeedComment(FeedCommentService.java:20)
	at com.green.greengram.feed.comment.FeedCommentController.postFeedComment(FeedCommentController.java:25)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-03 15:48:48 ERRORhttp-nio-8080-exec-10] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.jdbc.BadSqlGrammarException: 
### Error updating database.  Cause: java.sql.SQLSyntaxErrorException: (conn=354) Table 'greengram_ver2.feed_comments' doesn't exist
### The error may exist in file [D:\BHB\GreenGramVer2\build\resources\main\mappers\FeedCommentMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: INSERT INTO feed_comments            SET `feed_id` = ?              , `user_id` = ?              , `comment` = ?
### Cause: java.sql.SQLSyntaxErrorException: (conn=354) Table 'greengram_ver2.feed_comments' doesn't exist
; bad SQL grammar []] with root cause
java.sql.SQLSyntaxErrorException: (conn=354) Table 'greengram_ver2.feed_comments' doesn't exist
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:289)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:93)
	at org.mariadb.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:276)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:48)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:75)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:184)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy84.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:272)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:62)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy4/jdk.proxy4.$Proxy85.insFeedComment(Unknown Source)
	at com.green.greengram.feed.comment.FeedCommentService.postFeedComment(FeedCommentService.java:20)
	at com.green.greengram.feed.comment.FeedCommentController.postFeedComment(FeedCommentController.java:25)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-03 15:48:48 INFO http-nio-8080-exec-1] [com.green.greengram.feed.comment.FeedCommentController] FeedCommentController > postFeedComment > p: FeedCommentPostReq(feedCommentId=0, feedId=15, userId=1, comment=ㅁㄴ)
[2024-12-03 15:48:48 WARN http-nio-8080-exec-1] [org.mariadb.jdbc.message.server.ErrorPacket] Error: 1146-42S02: Table 'greengram_ver2.feed_comments' doesn't exist
[2024-12-03 15:48:48 ERRORhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO feed_comments
           SET `feed_id` = 15
             , `user_id` = 1
             , `comment` = 'ㅁㄴ'
 {FAILED after 1 msec}
java.sql.SQLSyntaxErrorException: (conn=354) Table 'greengram_ver2.feed_comments' doesn't exist
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:289)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:93)
	at org.mariadb.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:276)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:48)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:75)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:184)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy84.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:272)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:62)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy4/jdk.proxy4.$Proxy85.insFeedComment(Unknown Source)
	at com.green.greengram.feed.comment.FeedCommentService.postFeedComment(FeedCommentService.java:20)
	at com.green.greengram.feed.comment.FeedCommentController.postFeedComment(FeedCommentController.java:25)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-03 15:48:48 ERRORhttp-nio-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.jdbc.BadSqlGrammarException: 
### Error updating database.  Cause: java.sql.SQLSyntaxErrorException: (conn=354) Table 'greengram_ver2.feed_comments' doesn't exist
### The error may exist in file [D:\BHB\GreenGramVer2\build\resources\main\mappers\FeedCommentMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: INSERT INTO feed_comments            SET `feed_id` = ?              , `user_id` = ?              , `comment` = ?
### Cause: java.sql.SQLSyntaxErrorException: (conn=354) Table 'greengram_ver2.feed_comments' doesn't exist
; bad SQL grammar []] with root cause
java.sql.SQLSyntaxErrorException: (conn=354) Table 'greengram_ver2.feed_comments' doesn't exist
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:289)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:93)
	at org.mariadb.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:276)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:48)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:75)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:184)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy84.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:272)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:62)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy4/jdk.proxy4.$Proxy85.insFeedComment(Unknown Source)
	at com.green.greengram.feed.comment.FeedCommentService.postFeedComment(FeedCommentService.java:20)
	at com.green.greengram.feed.comment.FeedCommentController.postFeedComment(FeedCommentController.java:25)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-03 15:48:49 INFO http-nio-8080-exec-9] [com.green.greengram.feed.comment.FeedCommentController] FeedCommentController > postFeedComment > p: FeedCommentPostReq(feedCommentId=0, feedId=15, userId=1, comment=ㅁㄴ)
[2024-12-03 15:48:49 WARN http-nio-8080-exec-9] [org.mariadb.jdbc.message.server.ErrorPacket] Error: 1146-42S02: Table 'greengram_ver2.feed_comments' doesn't exist
[2024-12-03 15:48:49 ERRORhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO feed_comments
           SET `feed_id` = 15
             , `user_id` = 1
             , `comment` = 'ㅁㄴ'
 {FAILED after 0 msec}
java.sql.SQLSyntaxErrorException: (conn=354) Table 'greengram_ver2.feed_comments' doesn't exist
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:289)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:93)
	at org.mariadb.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:276)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:48)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:75)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:184)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy84.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:272)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:62)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy4/jdk.proxy4.$Proxy85.insFeedComment(Unknown Source)
	at com.green.greengram.feed.comment.FeedCommentService.postFeedComment(FeedCommentService.java:20)
	at com.green.greengram.feed.comment.FeedCommentController.postFeedComment(FeedCommentController.java:25)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-03 15:48:49 ERRORhttp-nio-8080-exec-9] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.jdbc.BadSqlGrammarException: 
### Error updating database.  Cause: java.sql.SQLSyntaxErrorException: (conn=354) Table 'greengram_ver2.feed_comments' doesn't exist
### The error may exist in file [D:\BHB\GreenGramVer2\build\resources\main\mappers\FeedCommentMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: INSERT INTO feed_comments            SET `feed_id` = ?              , `user_id` = ?              , `comment` = ?
### Cause: java.sql.SQLSyntaxErrorException: (conn=354) Table 'greengram_ver2.feed_comments' doesn't exist
; bad SQL grammar []] with root cause
java.sql.SQLSyntaxErrorException: (conn=354) Table 'greengram_ver2.feed_comments' doesn't exist
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:289)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:93)
	at org.mariadb.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:276)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:48)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:75)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:184)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy84.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:272)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:62)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy4/jdk.proxy4.$Proxy85.insFeedComment(Unknown Source)
	at com.green.greengram.feed.comment.FeedCommentService.postFeedComment(FeedCommentService.java:20)
	at com.green.greengram.feed.comment.FeedCommentController.postFeedComment(FeedCommentController.java:25)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-03 15:48:49 INFO http-nio-8080-exec-4] [com.green.greengram.feed.comment.FeedCommentController] FeedCommentController > postFeedComment > p: FeedCommentPostReq(feedCommentId=0, feedId=15, userId=1, comment=ㅁㄴ)
[2024-12-03 15:48:49 WARN http-nio-8080-exec-4] [org.mariadb.jdbc.message.server.ErrorPacket] Error: 1146-42S02: Table 'greengram_ver2.feed_comments' doesn't exist
[2024-12-03 15:48:49 ERRORhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO feed_comments
           SET `feed_id` = 15
             , `user_id` = 1
             , `comment` = 'ㅁㄴ'
 {FAILED after 0 msec}
java.sql.SQLSyntaxErrorException: (conn=354) Table 'greengram_ver2.feed_comments' doesn't exist
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:289)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:93)
	at org.mariadb.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:276)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:48)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:75)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:184)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy84.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:272)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:62)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy4/jdk.proxy4.$Proxy85.insFeedComment(Unknown Source)
	at com.green.greengram.feed.comment.FeedCommentService.postFeedComment(FeedCommentService.java:20)
	at com.green.greengram.feed.comment.FeedCommentController.postFeedComment(FeedCommentController.java:25)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-03 15:48:49 ERRORhttp-nio-8080-exec-4] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.jdbc.BadSqlGrammarException: 
### Error updating database.  Cause: java.sql.SQLSyntaxErrorException: (conn=354) Table 'greengram_ver2.feed_comments' doesn't exist
### The error may exist in file [D:\BHB\GreenGramVer2\build\resources\main\mappers\FeedCommentMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: INSERT INTO feed_comments            SET `feed_id` = ?              , `user_id` = ?              , `comment` = ?
### Cause: java.sql.SQLSyntaxErrorException: (conn=354) Table 'greengram_ver2.feed_comments' doesn't exist
; bad SQL grammar []] with root cause
java.sql.SQLSyntaxErrorException: (conn=354) Table 'greengram_ver2.feed_comments' doesn't exist
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:289)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:93)
	at org.mariadb.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:276)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:48)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:75)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:184)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy84.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:272)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:62)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy4/jdk.proxy4.$Proxy85.insFeedComment(Unknown Source)
	at com.green.greengram.feed.comment.FeedCommentService.postFeedComment(FeedCommentService.java:20)
	at com.green.greengram.feed.comment.FeedCommentController.postFeedComment(FeedCommentController.java:25)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-03 15:48:50 INFO http-nio-8080-exec-7] [com.green.greengram.feed.like.FeedLikeController] FeedLikeController > feedLikeToggle > p: com.green.greengram.feed.like.model.FeedLikeReq@4d1efa30
[2024-12-03 15:48:50 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. DELETE FROM feed_like
         WHERE feed_id = 15
           AND user_id = 1
 {executed in 0 msec}
[2024-12-03 15:48:50 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO feed_like
           SET feed_id = 15
             , user_id = 1
 {executed in 2 msec}
[2024-12-03 15:49:18 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown initiated...
[2024-12-03 15:49:18 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown completed.
[2024-12-03 15:49:19 INFO restartedMain] [com.green.greengram.GreenGramApplication] Starting GreenGramVer2Application using Java 17.0.12 with PID 4728 (D:\BHB\GreenGramVer2\build\classes\java\main started by Administrator in D:\BHB\GreenGramVer2)
[2024-12-03 15:49:19 INFO restartedMain] [com.green.greengram.GreenGramApplication] No active profile set, falling back to 1 default profile: "default"
[2024-12-03 15:49:19 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-03 15:49:19 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-03 15:49:20 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-03 15:49:20 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-03 15:49:20 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-03 15:49:20 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-03 15:49:20 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-03 15:49:20 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 813 ms
[2024-12-03 15:49:20 INFO restartedMain] [com.green.greengram.common.MyFileUtils] MyFileUtils - 생성자: D:/2024-02/download/greengram_ver2
[2024-12-03 15:49:20 INFO restartedMain] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Starting...
[2024-12-03 15:49:20 INFO restartedMain] [com.zaxxer.hikari.pool.HikariPool] HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@1c700510
[2024-12-03 15:49:20 INFO restartedMain] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Start completed.
[2024-12-03 15:49:20 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-03 15:49:21 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-03 15:49:21 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-03 15:49:21 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-03 15:49:21 INFO restartedMain] [com.green.greengram.GreenGramApplication] Started GreenGramVer2Application in 1.81 seconds (process running for 2.173)
[2024-12-03 15:49:23 INFO http-nio-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring DispatcherServlet 'dispatcherServlet'
[2024-12-03 15:49:23 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[2024-12-03 15:49:23 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Completed initialization in 1 ms
[2024-12-03 15:49:23 INFO http-nio-8080-exec-3] [com.green.greengram.feed.FeedController] FeedController > getFeedList > p: FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=1)
[2024-12-03 15:49:23 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId, A.contents, A.location
             , A.created_at AS createdAt
             , B.user_id AS writerUserId
             , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
             , B.pic AS writerPic
             , IF(C.feed_id IS NULL, 0, 1) AS isLike
          FROM feed A
         INNER JOIN user B
            ON A.writer_user_id = B.user_id
          LEFT JOIN feed_like C
            ON A.feed_id = C.feed_id
           AND C.user_id = 1
         ORDER BY A.feed_id DESC
         LIMIT 0, 20
 {executed in 0 msec}
[2024-12-03 15:49:23 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|--------|---------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|feed_id |contents |location |created_at          |user_id |writernm |pic                                      |islike |
|--------|---------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|15      |ㅁㄴㅇ      |ㅁㄴㅇ      |2024-12-03 15:48:41 |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |1      |
|14      |ㅇ        |ㅇ        |2024-12-03 11:49:38 |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |0      |
|13      |d        |d        |2024-12-03 11:15:02 |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |0      |
|12      |ㅁㄴㅇ      |ㅁㄴㅇ      |2024-11-29 16:17:53 |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |0      |
|11      |         |         |2024-11-29 16:12:11 |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |0      |
|10      |asd      |asd      |2024-11-29 16:05:52 |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |0      |
|9       |sda      |asd      |2024-11-29 16:00:32 |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |1      |
|5       |123      |중앙로      |2024-11-29 10:36:12 |2       |홍길동      |6d88f58a-0c38-4010-b703-3ccb187071d8.jpg |0      |
|4       |123      |그린컴      |2024-11-28 17:24:40 |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |1      |
|--------|---------|---------|--------------------|--------|---------|-----------------------------------------|-------|

[2024-12-03 15:49:23 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
          FROM feed_pics
         WHERE feed_id = 15
 {executed in 0 msec}
[2024-12-03 15:49:23 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|12526740-807d-47f8-a45b-1c05ac9f99ce.gif |
|-----------------------------------------|

[2024-12-03 15:49:23 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , B.user_id AS writerUserId
             , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
             , B.pic AS writerPic
          FROM feed_comments A
         INNER JOIN user B
            ON A.user_id = B.user_id
         WHERE A.feed_id = 15
         ORDER BY A.feed_comment_id DESC
         LIMIT 0, 4
 {executed in 1 msec}
[2024-12-03 15:49:23 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-03 15:49:23 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
          FROM feed_pics
         WHERE feed_id = 14
 {executed in 0 msec}
[2024-12-03 15:49:23 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|d3ab1225-6450-4fc4-9f31-eb10a531825a.gif |
|-----------------------------------------|

[2024-12-03 15:49:23 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , B.user_id AS writerUserId
             , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
             , B.pic AS writerPic
          FROM feed_comments A
         INNER JOIN user B
            ON A.user_id = B.user_id
         WHERE A.feed_id = 14
         ORDER BY A.feed_comment_id DESC
         LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 15:49:23 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|72              |4       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|71              |3       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|70              |2       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|69              |1       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-03 15:49:23 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
          FROM feed_pics
         WHERE feed_id = 13
 {executed in 0 msec}
[2024-12-03 15:49:23 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|7af273d9-3528-498f-b249-e48a4bc99755.jpg |
|-----------------------------------------|

[2024-12-03 15:49:23 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , B.user_id AS writerUserId
             , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
             , B.pic AS writerPic
          FROM feed_comments A
         INNER JOIN user B
            ON A.user_id = B.user_id
         WHERE A.feed_id = 13
         ORDER BY A.feed_comment_id DESC
         LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 15:49:23 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|58              |31      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|57              |30      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|56              |29      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|55              |28      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-03 15:49:23 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
          FROM feed_pics
         WHERE feed_id = 12
 {executed in 0 msec}
[2024-12-03 15:49:23 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|---------|
|pic      |
|---------|
|aaaa.gif |
|---------|

[2024-12-03 15:49:23 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , B.user_id AS writerUserId
             , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
             , B.pic AS writerPic
          FROM feed_comments A
         INNER JOIN user B
            ON A.user_id = B.user_id
         WHERE A.feed_id = 12
         ORDER BY A.feed_comment_id DESC
         LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 15:49:23 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|24              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|23              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|22              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|21              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-03 15:49:23 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
          FROM feed_pics
         WHERE feed_id = 11
 {executed in 1 msec}
[2024-12-03 15:49:23 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|f3f416ca-1a7e-4483-b1db-b2164d76d4f4.png |
|-----------------------------------------|

[2024-12-03 15:49:23 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , B.user_id AS writerUserId
             , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
             , B.pic AS writerPic
          FROM feed_comments A
         INNER JOIN user B
            ON A.user_id = B.user_id
         WHERE A.feed_id = 11
         ORDER BY A.feed_comment_id DESC
         LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 15:49:23 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-03 15:49:23 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
          FROM feed_pics
         WHERE feed_id = 10
 {executed in 0 msec}
[2024-12-03 15:49:23 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|53da69e7-7ae4-4e7b-b95b-a4c4ca01bdc8.jpg |
|-----------------------------------------|

[2024-12-03 15:49:23 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , B.user_id AS writerUserId
             , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
             , B.pic AS writerPic
          FROM feed_comments A
         INNER JOIN user B
            ON A.user_id = B.user_id
         WHERE A.feed_id = 10
         ORDER BY A.feed_comment_id DESC
         LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 15:49:23 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|29              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|28              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|27              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|26              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-03 15:49:23 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
          FROM feed_pics
         WHERE feed_id = 9
 {executed in 1 msec}
[2024-12-03 15:49:23 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|7875594b-3649-4059-a29a-5c09feeab0ad.jpg |
|-----------------------------------------|

[2024-12-03 15:49:23 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , B.user_id AS writerUserId
             , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
             , B.pic AS writerPic
          FROM feed_comments A
         INNER JOIN user B
            ON A.user_id = B.user_id
         WHERE A.feed_id = 9
         ORDER BY A.feed_comment_id DESC
         LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 15:49:23 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-03 15:49:23 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
          FROM feed_pics
         WHERE feed_id = 5
 {executed in 0 msec}
[2024-12-03 15:49:23 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|675d9f82-0c18-4f6e-91a3-9858129aeb7e.jpg |
|c95cc439-e1e7-40f4-81fa-013b069631ca.jpg |
|f490d2ad-c64d-4006-a74a-8235888e3e87.jpg |
|-----------------------------------------|

[2024-12-03 15:49:23 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , B.user_id AS writerUserId
             , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
             , B.pic AS writerPic
          FROM feed_comments A
         INNER JOIN user B
            ON A.user_id = B.user_id
         WHERE A.feed_id = 5
         ORDER BY A.feed_comment_id DESC
         LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 15:49:23 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-03 15:49:23 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
          FROM feed_pics
         WHERE feed_id = 4
 {executed in 1 msec}
[2024-12-03 15:49:23 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-03 15:49:23 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , B.user_id AS writerUserId
             , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
             , B.pic AS writerPic
          FROM feed_comments A
         INNER JOIN user B
            ON A.user_id = B.user_id
         WHERE A.feed_id = 4
         ORDER BY A.feed_comment_id DESC
         LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 15:49:23 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-03 15:49:31 INFO http-nio-8080-exec-10] [com.green.greengram.feed.comment.FeedCommentController] FeedCommentController > getFeedComment > p: FeedCommentGetReq(feedId=13, startIdx=3, size=21)
[2024-12-03 15:49:31 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , B.user_id AS writerUserId
             , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
             , B.pic AS writerPic
          FROM feed_comments A
         INNER JOIN user B
            ON A.user_id = B.user_id
         WHERE A.feed_id = 13
         ORDER BY A.feed_comment_id DESC
         LIMIT 3, 21
 {executed in 0 msec}
[2024-12-03 15:49:31 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|55              |28      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|54              |27      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|53              |26      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|52              |25      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|51              |24      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|50              |23      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|49              |22      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|48              |21      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|47              |20      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|46              |19      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|45              |18      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|44              |17      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|43              |16      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|42              |15      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|41              |14      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|40              |13      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|39              |12      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|38              |11      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|37              |10      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|36              |9       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|35              |8       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-03 15:49:34 INFO http-nio-8080-exec-1] [com.green.greengram.feed.comment.FeedCommentController] FeedCommentController > delFeedComment > p: FeedCommentDelReq(feedCommentId=58, userId=1)
[2024-12-03 15:49:34 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. DELETE FROM feed_comments
         WHERE feed_comment_id = 58
           AND user_id = 1
 {executed in 2 msec}
[2024-12-03 15:49:35 INFO http-nio-8080-exec-2] [com.green.greengram.feed.comment.FeedCommentController] FeedCommentController > delFeedComment > p: FeedCommentDelReq(feedCommentId=57, userId=1)
[2024-12-03 15:49:35 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. DELETE FROM feed_comments
         WHERE feed_comment_id = 57
           AND user_id = 1
 {executed in 3 msec}
[2024-12-03 15:49:39 INFO http-nio-8080-exec-6] [com.green.greengram.feed.comment.FeedCommentController] FeedCommentController > delFeedComment > p: FeedCommentDelReq(feedCommentId=24, userId=1)
[2024-12-03 15:49:39 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. DELETE FROM feed_comments
         WHERE feed_comment_id = 24
           AND user_id = 1
 {executed in 3 msec}
[2024-12-03 15:49:40 INFO http-nio-8080-exec-4] [com.green.greengram.feed.comment.FeedCommentController] FeedCommentController > getFeedComment > p: FeedCommentGetReq(feedId=12, startIdx=2, size=21)
[2024-12-03 15:49:40 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , B.user_id AS writerUserId
             , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
             , B.pic AS writerPic
          FROM feed_comments A
         INNER JOIN user B
            ON A.user_id = B.user_id
         WHERE A.feed_id = 12
         ORDER BY A.feed_comment_id DESC
         LIMIT 2, 21
 {executed in 1 msec}
[2024-12-03 15:49:40 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|21              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|20              |ㄴㅇㅁ     |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|19              |ㄴㅇㅁ     |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|18              |ㄴㅇㅁ     |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|17              |ㄴㅇㅁ     |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|16              |ㅁㅇ      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|15              |asd     |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|14              |sad     |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|13              |asd     |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|12              |asd     |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|11              |asd     |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|10              |asd     |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|9               |asd     |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-03 16:50:26 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown initiated...
[2024-12-03 16:50:26 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown completed.
[2024-12-03 17:37:32 INFO restartedMain] [com.green.greengram.GreenGramApplication] Starting GreenGramVer2Application using Java 17.0.12 with PID 4584 (D:\BHB\GreenGramVer2\build\classes\java\main started by Administrator in D:\BHB\GreenGramVer2)
[2024-12-03 17:37:32 INFO restartedMain] [com.green.greengram.GreenGramApplication] No active profile set, falling back to 1 default profile: "default"
[2024-12-03 17:37:32 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-03 17:37:32 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-03 17:37:33 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-03 17:37:33 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-03 17:37:33 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-03 17:37:33 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-03 17:37:33 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-03 17:37:33 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 901 ms
[2024-12-03 17:37:33 INFO restartedMain] [com.green.greengram.common.MyFileUtils] MyFileUtils - 생성자: D:/2024-02/download/greengram_ver2
[2024-12-03 17:37:33 INFO restartedMain] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Starting...
[2024-12-03 17:37:33 INFO restartedMain] [com.zaxxer.hikari.pool.HikariPool] HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@73f13132
[2024-12-03 17:37:33 INFO restartedMain] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Start completed.
[2024-12-03 17:37:33 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-03 17:37:33 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-03 17:37:33 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-03 17:37:33 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-03 17:37:33 INFO restartedMain] [com.green.greengram.GreenGramApplication] Started GreenGramVer2Application in 1.91 seconds (process running for 2.256)
[2024-12-03 17:37:40 INFO http-nio-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring DispatcherServlet 'dispatcherServlet'
[2024-12-03 17:37:40 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[2024-12-03 17:37:40 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Completed initialization in 1 ms
[2024-12-03 17:37:40 INFO http-nio-8080-exec-4] [com.green.greengram.feed.FeedController] FeedController > getFeedList > p: FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=6)
[2024-12-03 17:37:40 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId, A.contents, A.location
             , A.created_at AS createdAt
             , B.user_id AS writerUserId
             , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
             , B.pic AS writerPic
             , IF(C.feed_id IS NULL, 0, 1) AS isLike
          FROM feed A
         INNER JOIN user B
            ON A.writer_user_id = B.user_id
          LEFT JOIN feed_like C
            ON A.feed_id = C.feed_id
           AND C.user_id = 6
         ORDER BY A.feed_id DESC
         LIMIT 0, 20
 {executed in 1 msec}
[2024-12-03 17:37:40 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|--------|---------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|feed_id |contents |location |created_at          |user_id |writernm |pic                                      |islike |
|--------|---------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|15      |ㅁㄴㅇ      |ㅁㄴㅇ      |2024-12-03 15:48:41 |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |0      |
|14      |ㅇ        |ㅇ        |2024-12-03 11:49:38 |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |0      |
|13      |d        |d        |2024-12-03 11:15:02 |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |0      |
|12      |ㅁㄴㅇ      |ㅁㄴㅇ      |2024-11-29 16:17:53 |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |0      |
|11      |         |         |2024-11-29 16:12:11 |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |0      |
|10      |asd      |asd      |2024-11-29 16:05:52 |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |0      |
|9       |sda      |asd      |2024-11-29 16:00:32 |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |0      |
|5       |123      |중앙로      |2024-11-29 10:36:12 |2       |홍길동      |6d88f58a-0c38-4010-b703-3ccb187071d8.jpg |0      |
|4       |123      |그린컴      |2024-11-28 17:24:40 |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |0      |
|--------|---------|---------|--------------------|--------|---------|-----------------------------------------|-------|

[2024-12-03 17:37:40 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
          FROM feed_pics
         WHERE feed_id = 15
 {executed in 1 msec}
[2024-12-03 17:37:40 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|12526740-807d-47f8-a45b-1c05ac9f99ce.gif |
|-----------------------------------------|

[2024-12-03 17:37:40 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , B.user_id AS writerUserId
             , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
             , B.pic AS writerPic
          FROM feed_comments A
         INNER JOIN user B
            ON A.user_id = B.user_id
         WHERE A.feed_id = 15
         ORDER BY A.feed_comment_id DESC
         LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 17:37:40 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-03 17:37:40 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
          FROM feed_pics
         WHERE feed_id = 14
 {executed in 0 msec}
[2024-12-03 17:37:40 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|d3ab1225-6450-4fc4-9f31-eb10a531825a.gif |
|-----------------------------------------|

[2024-12-03 17:37:40 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , B.user_id AS writerUserId
             , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
             , B.pic AS writerPic
          FROM feed_comments A
         INNER JOIN user B
            ON A.user_id = B.user_id
         WHERE A.feed_id = 14
         ORDER BY A.feed_comment_id DESC
         LIMIT 0, 4
 {executed in 1 msec}
[2024-12-03 17:37:40 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|72              |4       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|71              |3       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|70              |2       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|69              |1       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-03 17:37:40 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
          FROM feed_pics
         WHERE feed_id = 13
 {executed in 0 msec}
[2024-12-03 17:37:40 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|7af273d9-3528-498f-b249-e48a4bc99755.jpg |
|-----------------------------------------|

[2024-12-03 17:37:40 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , B.user_id AS writerUserId
             , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
             , B.pic AS writerPic
          FROM feed_comments A
         INNER JOIN user B
            ON A.user_id = B.user_id
         WHERE A.feed_id = 13
         ORDER BY A.feed_comment_id DESC
         LIMIT 0, 4
 {executed in 1 msec}
[2024-12-03 17:37:40 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|56              |29      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|55              |28      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|54              |27      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|53              |26      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-03 17:37:40 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
          FROM feed_pics
         WHERE feed_id = 12
 {executed in 0 msec}
[2024-12-03 17:37:40 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|---------|
|pic      |
|---------|
|aaaa.gif |
|---------|

[2024-12-03 17:37:40 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , B.user_id AS writerUserId
             , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
             , B.pic AS writerPic
          FROM feed_comments A
         INNER JOIN user B
            ON A.user_id = B.user_id
         WHERE A.feed_id = 12
         ORDER BY A.feed_comment_id DESC
         LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 17:37:40 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|23              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|22              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|21              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|20              |ㄴㅇㅁ     |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-03 17:37:40 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
          FROM feed_pics
         WHERE feed_id = 11
 {executed in 0 msec}
[2024-12-03 17:37:40 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|f3f416ca-1a7e-4483-b1db-b2164d76d4f4.png |
|-----------------------------------------|

[2024-12-03 17:37:40 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , B.user_id AS writerUserId
             , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
             , B.pic AS writerPic
          FROM feed_comments A
         INNER JOIN user B
            ON A.user_id = B.user_id
         WHERE A.feed_id = 11
         ORDER BY A.feed_comment_id DESC
         LIMIT 0, 4
 {executed in 1 msec}
[2024-12-03 17:37:40 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-03 17:37:40 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
          FROM feed_pics
         WHERE feed_id = 10
 {executed in 0 msec}
[2024-12-03 17:37:40 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|53da69e7-7ae4-4e7b-b95b-a4c4ca01bdc8.jpg |
|-----------------------------------------|

[2024-12-03 17:37:40 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , B.user_id AS writerUserId
             , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
             , B.pic AS writerPic
          FROM feed_comments A
         INNER JOIN user B
            ON A.user_id = B.user_id
         WHERE A.feed_id = 10
         ORDER BY A.feed_comment_id DESC
         LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 17:37:40 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|29              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|28              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|27              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|26              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-03 17:37:40 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
          FROM feed_pics
         WHERE feed_id = 9
 {executed in 0 msec}
[2024-12-03 17:37:40 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|7875594b-3649-4059-a29a-5c09feeab0ad.jpg |
|-----------------------------------------|

[2024-12-03 17:37:40 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , B.user_id AS writerUserId
             , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
             , B.pic AS writerPic
          FROM feed_comments A
         INNER JOIN user B
            ON A.user_id = B.user_id
         WHERE A.feed_id = 9
         ORDER BY A.feed_comment_id DESC
         LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 17:37:40 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-03 17:37:40 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
          FROM feed_pics
         WHERE feed_id = 5
 {executed in 1 msec}
[2024-12-03 17:37:40 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|675d9f82-0c18-4f6e-91a3-9858129aeb7e.jpg |
|c95cc439-e1e7-40f4-81fa-013b069631ca.jpg |
|f490d2ad-c64d-4006-a74a-8235888e3e87.jpg |
|-----------------------------------------|

[2024-12-03 17:37:40 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , B.user_id AS writerUserId
             , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
             , B.pic AS writerPic
          FROM feed_comments A
         INNER JOIN user B
            ON A.user_id = B.user_id
         WHERE A.feed_id = 5
         ORDER BY A.feed_comment_id DESC
         LIMIT 0, 4
 {executed in 1 msec}
[2024-12-03 17:37:40 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-03 17:37:40 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
          FROM feed_pics
         WHERE feed_id = 4
 {executed in 0 msec}
[2024-12-03 17:37:40 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-03 17:37:40 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , B.user_id AS writerUserId
             , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
             , B.pic AS writerPic
          FROM feed_comments A
         INNER JOIN user B
            ON A.user_id = B.user_id
         WHERE A.feed_id = 4
         ORDER BY A.feed_comment_id DESC
         LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 17:37:40 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-03 17:39:29 INFO File Watcher] [org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener] Restarting due to 27 class path changes (0 additions, 0 deletions, 27 modifications)
[2024-12-03 17:39:29 INFO Thread-5] [org.apache.coyote.http11.Http11NioProtocol] Stopping ProtocolHandler ["http-nio-8080"]
[2024-12-03 17:39:29 INFO Thread-5] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown initiated...
[2024-12-03 17:39:29 INFO Thread-5] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown completed.
[2024-12-03 17:39:29 INFO restartedMain] [com.green.greengram.GreenGramApplication] Starting GreenGramVer2Application using Java 17.0.12 with PID 4584 (D:\BHB\GreenGramVer2\build\classes\java\main started by Administrator in D:\BHB\GreenGramVer2)
[2024-12-03 17:39:29 INFO restartedMain] [com.green.greengram.GreenGramApplication] No active profile set, falling back to 1 default profile: "default"
[2024-12-03 17:39:29 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-03 17:39:29 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-03 17:39:29 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-03 17:39:29 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-03 17:39:29 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-03 17:39:29 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 243 ms
[2024-12-03 17:39:29 INFO restartedMain] [com.green.greengram.common.MyFileUtils] MyFileUtils - 생성자: D:/2024-02/download/greengram_ver2
[2024-12-03 17:39:29 INFO restartedMain] [com.zaxxer.hikari.HikariDataSource] HikariPool-2 - Starting...
[2024-12-03 17:39:29 INFO restartedMain] [com.zaxxer.hikari.pool.HikariPool] HikariPool-2 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@5ebe6a59
[2024-12-03 17:39:29 INFO restartedMain] [com.zaxxer.hikari.HikariDataSource] HikariPool-2 - Start completed.
[2024-12-03 17:39:29 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-03 17:39:29 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-03 17:39:29 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-03 17:39:29 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-03 17:39:29 INFO restartedMain] [com.green.greengram.GreenGramApplication] Started GreenGramVer2Application in 0.417 seconds (process running for 118.086)
[2024-12-03 17:39:29 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener] Condition evaluation unchanged
[2024-12-03 17:44:35 INFO http-nio-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring DispatcherServlet 'dispatcherServlet'
[2024-12-03 17:44:35 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[2024-12-03 17:44:35 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Completed initialization in 1 ms
[2024-12-03 17:44:35 INFO http-nio-8080-exec-3] [com.green.greengram.feed.FeedController] FeedController > getFeedList > p: FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=6)
[2024-12-03 17:44:35 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT A.feed_id AS feedId, A.contents, A.location
             , A.created_at AS createdAt
             , B.user_id AS writerUserId
             , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
             , B.pic AS writerPic
             , IF(C.feed_id IS NULL, 0, 1) AS isLike
          FROM feed A
         INNER JOIN user B
            ON A.writer_user_id = B.user_id
          LEFT JOIN feed_like C
            ON A.feed_id = C.feed_id
           AND C.user_id = 6
         ORDER BY A.feed_id DESC
         LIMIT 0, 20
 {executed in 1 msec}
[2024-12-03 17:44:35 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|--------|---------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|feed_id |contents |location |created_at          |user_id |writernm |pic                                      |islike |
|--------|---------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|15      |ㅁㄴㅇ      |ㅁㄴㅇ      |2024-12-03 15:48:41 |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |0      |
|14      |ㅇ        |ㅇ        |2024-12-03 11:49:38 |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |0      |
|13      |d        |d        |2024-12-03 11:15:02 |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |0      |
|12      |ㅁㄴㅇ      |ㅁㄴㅇ      |2024-11-29 16:17:53 |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |0      |
|11      |         |         |2024-11-29 16:12:11 |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |0      |
|10      |asd      |asd      |2024-11-29 16:05:52 |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |0      |
|9       |sda      |asd      |2024-11-29 16:00:32 |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |0      |
|5       |123      |중앙로      |2024-11-29 10:36:12 |2       |홍길동      |6d88f58a-0c38-4010-b703-3ccb187071d8.jpg |0      |
|4       |123      |그린컴      |2024-11-28 17:24:40 |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |0      |
|--------|---------|---------|--------------------|--------|---------|-----------------------------------------|-------|

[2024-12-03 17:44:35 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT pic
          FROM feed_pics
         WHERE feed_id = 15
 {executed in 0 msec}
[2024-12-03 17:44:35 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|12526740-807d-47f8-a45b-1c05ac9f99ce.gif |
|-----------------------------------------|

[2024-12-03 17:44:35 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , B.user_id AS writerUserId
             , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
             , B.pic AS writerPic
          FROM feed_comments A
         INNER JOIN user B
            ON A.user_id = B.user_id
         WHERE A.feed_id = 15
         ORDER BY A.feed_comment_id DESC
         LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 17:44:35 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-03 17:44:35 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT pic
          FROM feed_pics
         WHERE feed_id = 14
 {executed in 1 msec}
[2024-12-03 17:44:35 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|d3ab1225-6450-4fc4-9f31-eb10a531825a.gif |
|-----------------------------------------|

[2024-12-03 17:44:35 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , B.user_id AS writerUserId
             , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
             , B.pic AS writerPic
          FROM feed_comments A
         INNER JOIN user B
            ON A.user_id = B.user_id
         WHERE A.feed_id = 14
         ORDER BY A.feed_comment_id DESC
         LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 17:44:35 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|72              |4       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|71              |3       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|70              |2       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|69              |1       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-03 17:44:35 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT pic
          FROM feed_pics
         WHERE feed_id = 13
 {executed in 0 msec}
[2024-12-03 17:44:35 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|7af273d9-3528-498f-b249-e48a4bc99755.jpg |
|-----------------------------------------|

[2024-12-03 17:44:35 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , B.user_id AS writerUserId
             , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
             , B.pic AS writerPic
          FROM feed_comments A
         INNER JOIN user B
            ON A.user_id = B.user_id
         WHERE A.feed_id = 13
         ORDER BY A.feed_comment_id DESC
         LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 17:44:35 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|56              |29      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|55              |28      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|54              |27      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|53              |26      |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-03 17:44:35 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT pic
          FROM feed_pics
         WHERE feed_id = 12
 {executed in 0 msec}
[2024-12-03 17:44:35 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|---------|
|pic      |
|---------|
|aaaa.gif |
|---------|

[2024-12-03 17:44:35 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , B.user_id AS writerUserId
             , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
             , B.pic AS writerPic
          FROM feed_comments A
         INNER JOIN user B
            ON A.user_id = B.user_id
         WHERE A.feed_id = 12
         ORDER BY A.feed_comment_id DESC
         LIMIT 0, 4
 {executed in 1 msec}
[2024-12-03 17:44:35 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|23              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|22              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|21              |ㅂ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|20              |ㄴㅇㅁ     |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-03 17:44:35 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT pic
          FROM feed_pics
         WHERE feed_id = 11
 {executed in 0 msec}
[2024-12-03 17:44:35 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|f3f416ca-1a7e-4483-b1db-b2164d76d4f4.png |
|-----------------------------------------|

[2024-12-03 17:44:35 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , B.user_id AS writerUserId
             , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
             , B.pic AS writerPic
          FROM feed_comments A
         INNER JOIN user B
            ON A.user_id = B.user_id
         WHERE A.feed_id = 11
         ORDER BY A.feed_comment_id DESC
         LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 17:44:35 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-03 17:44:35 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT pic
          FROM feed_pics
         WHERE feed_id = 10
 {executed in 1 msec}
[2024-12-03 17:44:35 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|53da69e7-7ae4-4e7b-b95b-a4c4ca01bdc8.jpg |
|-----------------------------------------|

[2024-12-03 17:44:35 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , B.user_id AS writerUserId
             , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
             , B.pic AS writerPic
          FROM feed_comments A
         INNER JOIN user B
            ON A.user_id = B.user_id
         WHERE A.feed_id = 10
         ORDER BY A.feed_comment_id DESC
         LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 17:44:35 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|29              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|28              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|27              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|26              |ㅁ       |1       |123456   |6e1da108-55b7-47ba-891d-b621ca3f24a0.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-03 17:44:35 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT pic
          FROM feed_pics
         WHERE feed_id = 9
 {executed in 0 msec}
[2024-12-03 17:44:35 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|7875594b-3649-4059-a29a-5c09feeab0ad.jpg |
|-----------------------------------------|

[2024-12-03 17:44:35 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , B.user_id AS writerUserId
             , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
             , B.pic AS writerPic
          FROM feed_comments A
         INNER JOIN user B
            ON A.user_id = B.user_id
         WHERE A.feed_id = 9
         ORDER BY A.feed_comment_id DESC
         LIMIT 0, 4
 {executed in 0 msec}
[2024-12-03 17:44:35 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-03 17:44:35 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT pic
          FROM feed_pics
         WHERE feed_id = 5
 {executed in 1 msec}
[2024-12-03 17:44:35 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|675d9f82-0c18-4f6e-91a3-9858129aeb7e.jpg |
|c95cc439-e1e7-40f4-81fa-013b069631ca.jpg |
|f490d2ad-c64d-4006-a74a-8235888e3e87.jpg |
|-----------------------------------------|

[2024-12-03 17:44:35 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , B.user_id AS writerUserId
             , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
             , B.pic AS writerPic
          FROM feed_comments A
         INNER JOIN user B
            ON A.user_id = B.user_id
         WHERE A.feed_id = 5
         ORDER BY A.feed_comment_id DESC
         LIMIT 0, 4
 {executed in 1 msec}
[2024-12-03 17:44:35 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-03 17:44:35 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT pic
          FROM feed_pics
         WHERE feed_id = 4
 {executed in 0 msec}
[2024-12-03 17:44:35 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-03 17:44:35 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , B.user_id AS writerUserId
             , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
             , B.pic AS writerPic
          FROM feed_comments A
         INNER JOIN user B
            ON A.user_id = B.user_id
         WHERE A.feed_id = 4
         ORDER BY A.feed_comment_id DESC
         LIMIT 0, 4
 {executed in 1 msec}
[2024-12-03 17:44:35 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-03 17:44:41 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-2 - Shutdown initiated...
[2024-12-03 17:44:41 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-2 - Shutdown completed.
[2024-12-03 17:44:47 INFO restartedMain] [com.green.greengram.GreenGramApplication] Starting GreenGramVer2Application using Java 17.0.12 with PID 4184 (D:\BHB\GreenGramVer2\build\classes\java\main started by Administrator in D:\BHB\GreenGramVer2)
[2024-12-03 17:44:47 INFO restartedMain] [com.green.greengram.GreenGramApplication] No active profile set, falling back to 1 default profile: "default"
[2024-12-03 17:44:47 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-03 17:44:47 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-03 17:44:48 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-03 17:44:48 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-03 17:44:48 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-03 17:44:48 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-03 17:44:48 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-03 17:44:48 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 795 ms
[2024-12-03 17:44:48 INFO restartedMain] [com.green.greengram.common.MyFileUtils] MyFileUtils - 생성자: D:/2024-02/download/greengram_ver2
[2024-12-03 17:44:48 INFO restartedMain] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Starting...
[2024-12-03 17:44:48 INFO restartedMain] [com.zaxxer.hikari.pool.HikariPool] HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@523e4a11
[2024-12-03 17:44:48 INFO restartedMain] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Start completed.
[2024-12-03 17:44:48 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-03 17:44:48 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-03 17:44:48 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-03 17:44:48 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-03 17:44:48 INFO restartedMain] [com.green.greengram.GreenGramApplication] Started GreenGramVer2Application in 1.726 seconds (process running for 2.072)
[2024-12-03 17:44:49 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown initiated...
[2024-12-03 17:44:49 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown completed.
